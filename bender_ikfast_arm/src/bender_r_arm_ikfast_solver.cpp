/// autogenerated analytical inverse kinematics code from ikfast program part of OpenRAVE
/// \author Rosen Diankov
///
/// Licensed under the Apache License, Version 2.0 (the "License");
/// you may not use this file except in compliance with the License.
/// You may obtain a copy of the License at
///     http://www.apache.org/licenses/LICENSE-2.0
/// 
/// Unless required by applicable law or agreed to in writing, software
/// distributed under the License is distributed on an "AS IS" BASIS,
/// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
/// See the License for the specific language governing permissions and
/// limitations under the License.
///
/// ikfast version 61 generated on 2015-01-12 11:46:08.798995
/// To compile with gcc:
///     gcc -lstdc++ ik.cpp
/// To compile without any main function as a shared object (might need -llapack):
///     gcc -fPIC -lstdc++ -DIKFAST_NO_MAIN -DIKFAST_CLIBRARY -shared -Wl,-soname,libik.so -o libik.so ik.cpp
#define IKFAST_HAS_LIBRARY
#include "ikfast.h" // found inside share/openrave-X.Y/python/ikfast.h
using namespace ikfast;

// check if the included ikfast version matches what this file was compiled with
#define IKFAST_COMPILE_ASSERT(x) extern int __dummy[(int)x]
IKFAST_COMPILE_ASSERT(IKFAST_VERSION==61);

#include <cmath>
#include <vector>
#include <limits>
#include <algorithm>
#include <complex>

#define IKFAST_STRINGIZE2(s) #s
#define IKFAST_STRINGIZE(s) IKFAST_STRINGIZE2(s)

#ifndef IKFAST_ASSERT
#include <stdexcept>
#include <sstream>
#include <iostream>

#ifdef _MSC_VER
#ifndef __PRETTY_FUNCTION__
#define __PRETTY_FUNCTION__ __FUNCDNAME__
#endif
#endif

#ifndef __PRETTY_FUNCTION__
#define __PRETTY_FUNCTION__ __func__
#endif

#define IKFAST_ASSERT(b) { if( !(b) ) { std::stringstream ss; ss << "ikfast exception: " << __FILE__ << ":" << __LINE__ << ": " <<__PRETTY_FUNCTION__ << ": Assertion '" << #b << "' failed"; throw std::runtime_error(ss.str()); } }

#endif

#if defined(_MSC_VER)
#define IKFAST_ALIGNED16(x) __declspec(align(16)) x
#else
#define IKFAST_ALIGNED16(x) x __attribute((aligned(16)))
#endif

#define IK2PI  ((IkReal)6.28318530717959)
#define IKPI  ((IkReal)3.14159265358979)
#define IKPI_2  ((IkReal)1.57079632679490)

#ifdef _MSC_VER
#ifndef isnan
#define isnan _isnan
#endif
#endif // _MSC_VER

// lapack routines
extern "C" {
  void dgetrf_ (const int* m, const int* n, double* a, const int* lda, int* ipiv, int* info);
  void zgetrf_ (const int* m, const int* n, std::complex<double>* a, const int* lda, int* ipiv, int* info);
  void dgetri_(const int* n, const double* a, const int* lda, int* ipiv, double* work, const int* lwork, int* info);
  void dgesv_ (const int* n, const int* nrhs, double* a, const int* lda, int* ipiv, double* b, const int* ldb, int* info);
  void dgetrs_(const char *trans, const int *n, const int *nrhs, double *a, const int *lda, int *ipiv, double *b, const int *ldb, int *info);
  void dgeev_(const char *jobvl, const char *jobvr, const int *n, double *a, const int *lda, double *wr, double *wi,double *vl, const int *ldvl, double *vr, const int *ldvr, double *work, const int *lwork, int *info);
}

using namespace std; // necessary to get std math routines

#ifdef IKFAST_NAMESPACE
namespace IKFAST_NAMESPACE {
#endif

inline float IKabs(float f) { return fabsf(f); }
inline double IKabs(double f) { return fabs(f); }

inline float IKsqr(float f) { return f*f; }
inline double IKsqr(double f) { return f*f; }

inline float IKlog(float f) { return logf(f); }
inline double IKlog(double f) { return log(f); }

// allows asin and acos to exceed 1
#ifndef IKFAST_SINCOS_THRESH
#define IKFAST_SINCOS_THRESH ((IkReal)0.000001)
#endif

// used to check input to atan2 for degenerate cases
#ifndef IKFAST_ATAN2_MAGTHRESH
#define IKFAST_ATAN2_MAGTHRESH ((IkReal)2e-6)
#endif

// minimum distance of separate solutions
#ifndef IKFAST_SOLUTION_THRESH
#define IKFAST_SOLUTION_THRESH ((IkReal)1e-6)
#endif

inline float IKasin(float f)
{
IKFAST_ASSERT( f > -1-IKFAST_SINCOS_THRESH && f < 1+IKFAST_SINCOS_THRESH ); // any more error implies something is wrong with the solver
if( f <= -1 ) return float(-IKPI_2);
else if( f >= 1 ) return float(IKPI_2);
return asinf(f);
}
inline double IKasin(double f)
{
IKFAST_ASSERT( f > -1-IKFAST_SINCOS_THRESH && f < 1+IKFAST_SINCOS_THRESH ); // any more error implies something is wrong with the solver
if( f <= -1 ) return -IKPI_2;
else if( f >= 1 ) return IKPI_2;
return asin(f);
}

// return positive value in [0,y)
inline float IKfmod(float x, float y)
{
    while(x < 0) {
        x += y;
    }
    return fmodf(x,y);
}

// return positive value in [0,y)
inline double IKfmod(double x, double y)
{
    while(x < 0) {
        x += y;
    }
    return fmod(x,y);
}

inline float IKacos(float f)
{
IKFAST_ASSERT( f > -1-IKFAST_SINCOS_THRESH && f < 1+IKFAST_SINCOS_THRESH ); // any more error implies something is wrong with the solver
if( f <= -1 ) return float(IKPI);
else if( f >= 1 ) return float(0);
return acosf(f);
}
inline double IKacos(double f)
{
IKFAST_ASSERT( f > -1-IKFAST_SINCOS_THRESH && f < 1+IKFAST_SINCOS_THRESH ); // any more error implies something is wrong with the solver
if( f <= -1 ) return IKPI;
else if( f >= 1 ) return 0;
return acos(f);
}
inline float IKsin(float f) { return sinf(f); }
inline double IKsin(double f) { return sin(f); }
inline float IKcos(float f) { return cosf(f); }
inline double IKcos(double f) { return cos(f); }
inline float IKtan(float f) { return tanf(f); }
inline double IKtan(double f) { return tan(f); }
inline float IKsqrt(float f) { if( f <= 0.0f ) return 0.0f; return sqrtf(f); }
inline double IKsqrt(double f) { if( f <= 0.0 ) return 0.0; return sqrt(f); }
inline float IKatan2(float fy, float fx) {
    if( isnan(fy) ) {
        IKFAST_ASSERT(!isnan(fx)); // if both are nan, probably wrong value will be returned
        return float(IKPI_2);
    }
    else if( isnan(fx) ) {
        return 0;
    }
    return atan2f(fy,fx);
}
inline double IKatan2(double fy, double fx) {
    if( isnan(fy) ) {
        IKFAST_ASSERT(!isnan(fx)); // if both are nan, probably wrong value will be returned
        return IKPI_2;
    }
    else if( isnan(fx) ) {
        return 0;
    }
    return atan2(fy,fx);
}

inline float IKsign(float f) {
    if( f > 0 ) {
        return float(1);
    }
    else if( f < 0 ) {
        return float(-1);
    }
    return 0;
}

inline double IKsign(double f) {
    if( f > 0 ) {
        return 1.0;
    }
    else if( f < 0 ) {
        return -1.0;
    }
    return 0;
}

/// solves the forward kinematics equations.
/// \param pfree is an array specifying the free joints of the chain.
IKFAST_API void ComputeFk(const IkReal* j, IkReal* eetrans, IkReal* eerot) {
IkReal x0,x1,x2,x3,x4,x5,x6,x7,x8,x9,x10,x11,x12,x13,x14,x15,x16,x17,x18,x19,x20,x21,x22,x23,x24,x25,x26,x27,x28,x29,x30,x31,x32,x33,x34,x35,x36,x37,x38,x39,x40,x41,x42,x43,x44,x45,x46,x47,x48,x49,x50,x51,x52;
x0=IKsin(j[0]);
x1=IKcos(j[2]);
x2=IKsin(j[1]);
x3=IKcos(j[0]);
x4=IKsin(j[2]);
x5=IKcos(j[3]);
x6=IKcos(j[1]);
x7=IKsin(j[3]);
x8=IKsin(j[4]);
x9=IKcos(j[4]);
x10=IKcos(j[5]);
x11=IKsin(j[5]);
x12=((IkReal(0.0182200000000000))*(x7));
x13=((IkReal(0.354900000000000))*(x5));
x14=((IkReal(0.0159000000000000))*(x2));
x15=((IkReal(1.00000000000000))*(x0));
x16=((IkReal(1.00000000000000))*(x8));
x17=((IkReal(0.0136000000000000))*(x7));
x18=((IkReal(0.354900000000000))*(x2));
x19=((IkReal(1.00000000000000))*(x5));
x20=((IkReal(0.0182200000000000))*(x5));
x21=((IkReal(0.0182200000000000))*(x2));
x22=((IkReal(1.00000000000000))*(x2));
x23=((IkReal(0.000500000000000000))*(x2));
x24=((IkReal(0.0136000000000000))*(x2));
x25=((IkReal(1.00000000000000))*(x9));
x26=((IkReal(0.0171000000000000))*(x2));
x27=((x0)*(x4));
x28=((x3)*(x6));
x29=((x3)*(x4));
x30=((x1)*(x3));
x31=((x6)*(x7));
x32=((x0)*(x1));
x33=((x1)*(x6));
x34=((x0)*(x6));
x35=((x4)*(x5)*(x6));
x36=((x15)*(x31));
x37=((x16)*(x33));
x38=((x22)*(x29));
x39=((((x2)*(x27)))+(x30));
x40=((((IkReal(-1.00000000000000))*(x29)))+(((x2)*(x32))));
x41=((((IkReal(-1.00000000000000))*(x38)))+(x32));
x42=((((x19)*(x2)))+(((IkReal(-1.00000000000000))*(x31)*(x4))));
x43=((((IkReal(-1.00000000000000))*(x19)*(x4)*(x6)))+(((IkReal(-1.00000000000000))*(x22)*(x7))));
x44=((((IkReal(-1.00000000000000))*(x22)*(x30)))+(((IkReal(-1.00000000000000))*(x15)*(x4))));
x45=((x41)*(x5));
x46=((x39)*(x5));
x47=((x44)*(x8));
x48=((x43)*(x9));
x49=((((IkReal(-1.00000000000000))*(x36)))+(x46));
x50=((x45)+(((x28)*(x7))));
x51=((((x7)*(((((IkReal(-1.00000000000000))*(x1)*(x15)))+(x38)))))+(((x28)*(x5))));
IkReal x53=((IkReal(1.00000000000000))*(x15));
x52=((((x7)*(((((IkReal(-1.00000000000000))*(x30)))+(((IkReal(-1.00000000000000))*(x2)*(x4)*(x53)))))))+(((IkReal(-1.00000000000000))*(x5)*(x53)*(x6))));
eerot[0]=((((x11)*(x52)))+(((x10)*(((((x49)*(x9)))+(((x40)*(x8))))))));
eerot[1]=((((x8)*(((((IkReal(-1.00000000000000))*(x19)*(x39)))+(x36)))))+(((x40)*(x9))));
eerot[2]=((((x10)*(x52)))+(((x11)*(((((IkReal(-1.00000000000000))*(x25)*(x49)))+(((IkReal(-1.00000000000000))*(x16)*(x40))))))));
IkReal x54=((IkReal(1.00000000000000))*(x27));
IkReal x55=((IkReal(1.00000000000000))*(x32));
eetrans[0]=((((IkReal(-0.0159000000000000))*(x30)))+(((IkReal(-1.00000000000000))*(x14)*(x54)))+(((IkReal(0.0300000000000000))*(x0)))+(((x7)*(((((x18)*(x27)))+(((IkReal(0.354900000000000))*(x30)))))))+(((x8)*(((((IkReal(0.0171000000000000))*(x0)*(x31)))+(((IkReal(-0.0171000000000000))*(x46)))))))+(((x17)*(x34)))+(((x5)*(((((IkReal(-1.00000000000000))*(x24)*(x54)))+(((IkReal(-0.0136000000000000))*(x30)))))))+(((IkReal(0.0104000000000000))*(x3)))+(((IkReal(0.000500000000000000))*(x29)))+(((x8)*(((((IkReal(0.0182200000000000))*(x29)))+(((IkReal(-1.00000000000000))*(x21)*(x55)))))))+(((x13)*(x34)))+(((IkReal(-1.00000000000000))*(x23)*(x55)))+(((x9)*(((((IkReal(-0.0171000000000000))*(x29)))+(((x26)*(x32)))))))+(((IkReal(0.346600000000000))*(x34)))+(((x9)*(((((IkReal(-1.00000000000000))*(x20)*(x39)))+(((x12)*(x34))))))));
eerot[3]=((((x11)*(x42)))+(((x10)*(((((IkReal(-1.00000000000000))*(x25)*(x43)))+(x37))))));
eerot[4]=((((x33)*(x9)))+(((x43)*(x8))));
eerot[5]=((((x11)*(((((IkReal(-1.00000000000000))*(x37)))+(x48)))))+(((x10)*(x42))));
IkReal x56=((x4)*(x6));
IkReal x57=((IkReal(1.00000000000000))*(x2));
eetrans[1]=((IkReal(-0.0339000000000000))+(((IkReal(-0.346600000000000))*(x2)))+(((IkReal(-1.00000000000000))*(x13)*(x57)))+(((IkReal(-1.00000000000000))*(x17)*(x57)))+(((x9)*(((((IkReal(-1.00000000000000))*(x12)*(x57)))+(((IkReal(-1.00000000000000))*(x20)*(x56)))))))+(((x8)*(((((IkReal(-0.0171000000000000))*(x35)))+(((IkReal(-1.00000000000000))*(x26)*(x7)))))))+(((IkReal(0.0171000000000000))*(x33)*(x9)))+(((IkReal(-0.000500000000000000))*(x33)))+(((IkReal(-0.0159000000000000))*(x56)))+(((IkReal(0.354900000000000))*(x31)*(x4)))+(((IkReal(-0.0182200000000000))*(x33)*(x8)))+(((IkReal(-0.0136000000000000))*(x35))));
eerot[6]=((((x11)*(x51)))+(((x10)*(((((x50)*(x9)))+(x47))))));
eerot[7]=((((x8)*(((((IkReal(-1.00000000000000))*(x19)*(x41)))+(((IkReal(-1.00000000000000))*(x28)*(x7)))))))+(((x44)*(x9))));
eerot[8]=((((x10)*(x51)))+(((x11)*(((((IkReal(-1.00000000000000))*(x16)*(x44)))+(((IkReal(-1.00000000000000))*(x25)*(x50))))))));
IkReal x58=((IkReal(1.00000000000000))*(x28));
eetrans[2]=((((x8)*(((((IkReal(-0.0171000000000000))*(x28)*(x7)))+(((IkReal(-0.0171000000000000))*(x45)))))))+(((x9)*(((((IkReal(-0.0171000000000000))*(x27)))+(((IkReal(-1.00000000000000))*(x26)*(x30)))))))+(((IkReal(-0.0159000000000000))*(x32)))+(((IkReal(-1.00000000000000))*(x13)*(x58)))+(((IkReal(-1.00000000000000))*(x17)*(x58)))+(((IkReal(-0.346600000000000))*(x28)))+(((x23)*(x30)))+(((IkReal(0.0104000000000000))*(x0)))+(((x5)*(((((x24)*(x29)))+(((IkReal(-0.0136000000000000))*(x32)))))))+(((x14)*(x29)))+(((IkReal(0.000500000000000000))*(x27)))+(((IkReal(-0.0300000000000000))*(x3)))+(((x8)*(((((IkReal(0.0182200000000000))*(x27)))+(((x21)*(x30)))))))+(((x9)*(((((IkReal(-1.00000000000000))*(x20)*(x41)))+(((IkReal(-1.00000000000000))*(x12)*(x58)))))))+(((x7)*(((((IkReal(-1.00000000000000))*(x18)*(x29)))+(((IkReal(0.354900000000000))*(x32))))))));
}

IKFAST_API int GetNumFreeParameters() { return 0; }
IKFAST_API int* GetFreeParameters() { return NULL; }
IKFAST_API int GetNumJoints() { return 6; }

IKFAST_API int GetIkRealSize() { return sizeof(IkReal); }

IKFAST_API int GetIkType() { return 0x67000001; }

class IKSolver {
public:
IkReal j11,cj11,sj11,htj11,j12,cj12,sj12,htj12,j13,cj13,sj13,htj13,j14,cj14,sj14,htj14,j15,cj15,sj15,htj15,j16,cj16,sj16,htj16,new_r00,r00,rxp0_0,new_r01,r01,rxp0_1,new_r02,r02,rxp0_2,new_r10,r10,rxp1_0,new_r11,r11,rxp1_1,new_r12,r12,rxp1_2,new_r20,r20,rxp2_0,new_r21,r21,rxp2_1,new_r22,r22,rxp2_2,new_px,px,npx,new_py,py,npy,new_pz,pz,npz,pp;
unsigned char _ij11[2], _nj11,_ij12[2], _nj12,_ij13[2], _nj13,_ij14[2], _nj14,_ij15[2], _nj15,_ij16[2], _nj16;

bool ComputeIk(const IkReal* eetrans, const IkReal* eerot, const IkReal* pfree, IkSolutionListBase<IkReal>& solutions) {
j11=numeric_limits<IkReal>::quiet_NaN(); _ij11[0] = -1; _ij11[1] = -1; _nj11 = -1; j12=numeric_limits<IkReal>::quiet_NaN(); _ij12[0] = -1; _ij12[1] = -1; _nj12 = -1; j13=numeric_limits<IkReal>::quiet_NaN(); _ij13[0] = -1; _ij13[1] = -1; _nj13 = -1; j14=numeric_limits<IkReal>::quiet_NaN(); _ij14[0] = -1; _ij14[1] = -1; _nj14 = -1; j15=numeric_limits<IkReal>::quiet_NaN(); _ij15[0] = -1; _ij15[1] = -1; _nj15 = -1; j16=numeric_limits<IkReal>::quiet_NaN(); _ij16[0] = -1; _ij16[1] = -1; _nj16 = -1; 
for(int dummyiter = 0; dummyiter < 1; ++dummyiter) {
    solutions.Clear();
r00 = eerot[0*3+0];
r01 = eerot[0*3+1];
r02 = eerot[0*3+2];
r10 = eerot[1*3+0];
r11 = eerot[1*3+1];
r12 = eerot[1*3+2];
r20 = eerot[2*3+0];
r21 = eerot[2*3+1];
r22 = eerot[2*3+2];
px = eetrans[0]; py = eetrans[1]; pz = eetrans[2];

new_r00=r00;
new_r01=r02;
new_r02=((IkReal(-1.00000000000000))*(r01));
new_px=((((IkReal(-0.0171000000000000))*(r01)))+(px));
new_r10=r20;
new_r11=r22;
new_r12=((IkReal(-1.00000000000000))*(r21));
new_py=((((IkReal(-0.0171000000000000))*(r21)))+(pz));
new_r20=((IkReal(-1.00000000000000))*(r10));
new_r21=((IkReal(-1.00000000000000))*(r12));
new_r22=r11;
new_pz=((IkReal(-0.0339000000000000))+(((IkReal(-1.00000000000000))*(py)))+(((IkReal(0.0171000000000000))*(r11))));
r00 = new_r00; r01 = new_r01; r02 = new_r02; r10 = new_r10; r11 = new_r11; r12 = new_r12; r20 = new_r20; r21 = new_r21; r22 = new_r22; px = new_px; py = new_py; pz = new_pz;
pp=(((px)*(px))+((py)*(py))+((pz)*(pz)));
npx=((((px)*(r00)))+(((py)*(r10)))+(((pz)*(r20))));
npy=((((px)*(r01)))+(((py)*(r11)))+(((pz)*(r21))));
npz=((((px)*(r02)))+(((py)*(r12)))+(((pz)*(r22))));
rxp0_0=((((IkReal(-1.00000000000000))*(py)*(r20)))+(((pz)*(r10))));
rxp0_1=((((px)*(r20)))+(((IkReal(-1.00000000000000))*(pz)*(r00))));
rxp0_2=((((IkReal(-1.00000000000000))*(px)*(r10)))+(((py)*(r00))));
rxp1_0=((((IkReal(-1.00000000000000))*(py)*(r21)))+(((pz)*(r11))));
rxp1_1=((((px)*(r21)))+(((IkReal(-1.00000000000000))*(pz)*(r01))));
rxp1_2=((((IkReal(-1.00000000000000))*(px)*(r11)))+(((py)*(r01))));
rxp2_0=((((IkReal(-1.00000000000000))*(py)*(r22)))+(((pz)*(r12))));
rxp2_1=((((px)*(r22)))+(((IkReal(-1.00000000000000))*(pz)*(r02))));
rxp2_2=((((IkReal(-1.00000000000000))*(px)*(r12)))+(((py)*(r02))));
IkReal op[162], zeror[48];
int numroots;
IkReal x59=((IkReal(0.0477200000000000))*(r20));
IkReal x60=((IkReal(0.000500000000000000))*(r22));
IkReal x61=((IkReal(0.701500000000000))*(r21));
IkReal x62=((IkReal(1.00000000000000))*(pz));
IkReal x63=((IkReal(0.00100000000000000))*(r20));
IkReal x64=((IkReal(0.0590000000000000))*(r22));
IkReal x65=((IkReal(1.40300000000000))*(r20));
IkReal x66=((IkReal(0.0112800000000000))*(r20));
IkReal x67=((IkReal(0.00144230769230769))*(r20));
IkReal x68=((IkReal(0.137653846153846))*(r22));
IkReal x69=((IkReal(2.88461538461538))*(rxp1_2));
IkReal x70=((IkReal(0.00288461538461538))*(r22));
IkReal x71=((IkReal(0.170192307692308))*(r20));
IkReal x72=((IkReal(1.00000000000000))*(npy));
IkReal x73=((IkReal(5.76923076923077))*(rxp0_2));
IkReal x74=((IkReal(2.00000000000000))*(npx));
IkReal x75=((IkReal(0.00288461538461538))*(r21));
IkReal x76=((IkReal(0.0325384615384615))*(r22));
IkReal x77=((IkReal(0.00100000000000000))*(rxp0_2));
IkReal x78=((IkReal(1.12980000000000))*(pz));
IkReal x79=((IkReal(0.000564900000000000))*(r22));
IkReal x80=((IkReal(0.299183161600000))*(r21));
IkReal x81=((IkReal(0.0539140560000000))*(r20));
IkReal x82=((IkReal(0.0954400000000000))*(rxp2_2));
IkReal x83=((IkReal(3.64400000000000e-5))*(r21));
IkReal x84=((IkReal(0.0666582000000000))*(r22));
IkReal x85=((IkReal(0.118000000000000))*(rxp0_2));
IkReal x86=((IkReal(0.00112980000000000))*(r20));
IkReal x87=((IkReal(0.00200000000000000))*(rxp2_2));
IkReal x88=((IkReal(0.00200000000000000))*(rxp1_2));
IkReal x89=((IkReal(0.0225600000000000))*(rxp2_2));
IkReal x90=((pp)*(r21));
IkReal x91=((IkReal(0.0127441440000000))*(r20));
IkReal x92=((IkReal(0.301333121600000))*(r21));
IkReal x93=((IkReal(0.788076923076923))*(rxp1_2));
IkReal x94=((IkReal(0.0954400000000000))*(npx));
IkReal x95=((IkReal(0.0376070307692308))*(r22));
IkReal x96=((IkReal(0.00100000000000000))*(npz));
IkReal x97=((IkReal(1.12980000000000))*(npy));
IkReal x98=((IkReal(1.00000000000000))*(pp));
IkReal x99=((IkReal(0.000394038461538462))*(r20));
IkReal x100=((IkReal(0.00200000000000000))*(npx));
IkReal x101=((IkReal(0.0464965384615385))*(r20));
IkReal x102=((IkReal(0.000788076923076923))*(r22));
IkReal x103=((IkReal(0.118000000000000))*(npz));
IkReal x104=((IkReal(0.000788076923076923))*(r21));
IkReal x105=((IkReal(2.25960000000000))*(npx));
IkReal x106=((IkReal(1.57615384615385))*(rxp0_2));
IkReal x107=((IkReal(0.0225600000000000))*(npx));
IkReal x108=((IkReal(0.00888950769230769))*(r22));
IkReal x109=((IkReal(0.00100000000000000))*(rxp0_0));
IkReal x110=((IkReal(1.40300000000000))*(px));
IkReal x111=((IkReal(0.000624000000000000))*(r11));
IkReal x112=((IkReal(0.0669511600000000))*(r00));
IkReal x113=((IkReal(0.0954400000000000))*(rxp2_0));
IkReal x114=((IkReal(0.000701500000000000))*(r02));
IkReal x115=((IkReal(0.489032961600000))*(r01));
IkReal x116=((IkReal(3.64400000000000e-5))*(r01));
IkReal x117=((IkReal(0.0827770000000000))*(r02));
IkReal x118=((IkReal(0.118000000000000))*(rxp0_0));
IkReal x119=((IkReal(0.00140300000000000))*(r00));
IkReal x120=((IkReal(0.00200000000000000))*(rxp2_0));
IkReal x121=((IkReal(0.00124800000000000))*(r10));
IkReal x122=((IkReal(0.00200000000000000))*(rxp1_0));
IkReal x123=((IkReal(0.0225600000000000))*(rxp2_0));
IkReal x124=((pp)*(r01));
IkReal x125=((IkReal(0.0158258400000000))*(r00));
IkReal x126=((IkReal(0.491182921600000))*(r01));
IkReal x127=((IkReal(0.00100000000000000))*(rxp0_1));
IkReal x128=((IkReal(0.000624000000000000))*(r01));
IkReal x129=((IkReal(1.40300000000000))*(py));
IkReal x130=((IkReal(0.0669511600000000))*(r10));
IkReal x131=((IkReal(0.489032961600000))*(r11));
IkReal x132=((IkReal(0.0954400000000000))*(rxp2_1));
IkReal x133=((IkReal(0.000701500000000000))*(r12));
IkReal x134=((IkReal(3.64400000000000e-5))*(r11));
IkReal x135=((IkReal(0.0827770000000000))*(r12));
IkReal x136=((IkReal(0.118000000000000))*(rxp0_1));
IkReal x137=((IkReal(0.00140300000000000))*(r10));
IkReal x138=((IkReal(0.00200000000000000))*(rxp2_1));
IkReal x139=((IkReal(0.00124800000000000))*(r00));
IkReal x140=((IkReal(0.00200000000000000))*(rxp1_1));
IkReal x141=((IkReal(0.0225600000000000))*(rxp2_1));
IkReal x142=((pp)*(r11));
IkReal x143=((IkReal(0.0158258400000000))*(r10));
IkReal x144=((IkReal(0.491182921600000))*(r11));
IkReal x145=((IkReal(0.693200000000000))*(r20));
IkReal x146=((IkReal(0.0318000000000000))*(r21));
IkReal x147=((IkReal(0.0636000000000000))*(r20));
IkReal x148=((IkReal(1.38640000000000))*(r21));
IkReal x149=((IkReal(2.04750000000000))*(r22));
IkReal x150=((IkReal(11.5384615384615))*(rxp2_2));
IkReal x151=((IkReal(4.09500000000000))*(r20));
IkReal x152=((IkReal(4.00000000000000))*(npz));
IkReal x153=((IkReal(0.210230769230769))*(r21));
IkReal x154=((IkReal(0.00576923076923077))*(r20));
IkReal x155=((IkReal(11.5384615384615))*(rxp1_2));
IkReal x156=((IkReal(4.00000000000000))*(npy));
IkReal x157=((IkReal(0.197491915200000))*(r20));
IkReal x158=((IkReal(0.127280000000000))*(pz));
IkReal x159=((IkReal(1.41960000000000))*(rxp2_2));
IkReal x160=((IkReal(0.0318156720000000))*(r21));
IkReal x161=((IkReal(6.36400000000000e-5))*(r22));
IkReal x162=((IkReal(2.83920000000000))*(rxp0_2));
IkReal x163=((IkReal(0.145760000000000))*(rxp1_2));
IkReal x164=((IkReal(5.44000000000000e-5))*(r20));
IkReal x165=((IkReal(0.399621913600000))*(r22));
IkReal x166=((IkReal(0.00400000000000000))*(rxp0_2));
IkReal x167=((IkReal(0.0199145520000000))*(r21));
IkReal x168=((IkReal(0.0184800000000000))*(pz));
IkReal x169=((IkReal(9.24000000000000e-6))*(r22));
IkReal x170=((IkReal(0.199474251200000))*(r20));
IkReal x171=((IkReal(0.840000000000000))*(npx));
IkReal x172=((IkReal(0.559377000000000))*(r22));
IkReal x173=((IkReal(0.0636000000000000))*(npy));
IkReal x174=((IkReal(0.0574350461538462))*(r21));
IkReal x175=((IkReal(3.15230769230769))*(rxp2_2));
IkReal x176=((IkReal(1.68000000000000))*(npz));
IkReal x177=((IkReal(1.11875400000000))*(r20));
IkReal x178=((IkReal(0.127200000000000))*(npx));
IkReal x179=((IkReal(1.68000000000000))*(npy));
IkReal x180=((IkReal(3.15230769230769))*(rxp1_2));
IkReal x181=((IkReal(0.00157615384615385))*(r20));
IkReal x182=((IkReal(0.127280000000000))*(px));
IkReal x183=((IkReal(0.0117096752000000))*(r00));
IkReal x184=((IkReal(1.41960000000000))*(rxp2_0));
IkReal x185=((IkReal(0.0231279120000000))*(r01));
IkReal x186=((IkReal(6.36400000000000e-5))*(r02));
IkReal x187=((IkReal(2.83920000000000))*(rxp0_0));
IkReal x188=((IkReal(0.00249600000000000))*(r12));
IkReal x189=((IkReal(0.145760000000000))*(rxp1_0));
IkReal x190=((IkReal(0.0280574336000000))*(r02));
IkReal x191=((IkReal(5.44000000000000e-5))*(r00));
IkReal x192=((IkReal(0.00400000000000000))*(rxp0_0));
IkReal x193=((IkReal(0.00249600000000000))*(r11));
IkReal x194=((IkReal(0.0286023120000000))*(r01));
IkReal x195=((IkReal(9.24000000000000e-6))*(r02));
IkReal x196=((IkReal(0.0184800000000000))*(px));
IkReal x197=((IkReal(0.0136920112000000))*(r00));
IkReal x198=((IkReal(0.127280000000000))*(py));
IkReal x199=((IkReal(0.0117096752000000))*(r10));
IkReal x200=((IkReal(1.41960000000000))*(rxp2_1));
IkReal x201=((IkReal(0.0231279120000000))*(r11));
IkReal x202=((IkReal(6.36400000000000e-5))*(r12));
IkReal x203=((IkReal(2.83920000000000))*(rxp0_1));
IkReal x204=((IkReal(0.145760000000000))*(rxp1_1));
IkReal x205=((IkReal(0.0280574336000000))*(r12));
IkReal x206=((IkReal(5.44000000000000e-5))*(r10));
IkReal x207=((IkReal(0.00249600000000000))*(r02));
IkReal x208=((IkReal(0.00400000000000000))*(rxp0_1));
IkReal x209=((IkReal(0.00249600000000000))*(r01));
IkReal x210=((IkReal(0.0286023120000000))*(r11));
IkReal x211=((IkReal(9.24000000000000e-6))*(r12));
IkReal x212=((IkReal(0.0184800000000000))*(py));
IkReal x213=((IkReal(0.0136920112000000))*(r10));
IkReal x214=((IkReal(0.00830000000000000))*(r21));
IkReal x215=((IkReal(0.0159200000000000))*(r20));
IkReal x216=((IkReal(0.00200000000000000))*(r21));
IkReal x217=((IkReal(0.00460000000000000))*(r22));
IkReal x218=((IkReal(0.0166000000000000))*(r20));
IkReal x219=((IkReal(0.0205200000000000))*(r20));
IkReal x220=((IkReal(0.0459230769230769))*(r22));
IkReal x221=((IkReal(0.0132692307692308))*(r20));
IkReal x222=((IkReal(0.0591923076923077))*(r22));
IkReal x223=((IkReal(0.0318400000000000))*(rxp2_2));
IkReal x224=((IkReal(0.00309091360000000))*(r21));
IkReal x225=((IkReal(0.000144900000000000))*(r22));
IkReal x226=((IkReal(0.00461361600000000))*(r20));
IkReal x227=((IkReal(0.289800000000000))*(pz));
IkReal x228=((IkReal(7.28800000000000e-5))*(r20));
IkReal x229=((IkReal(0.00133308000000000))*(r22));
IkReal x230=((IkReal(0.000289800000000000))*(r20));
IkReal x231=((IkReal(0.00920000000000000))*(rxp0_2));
IkReal x232=((IkReal(0.00292328960000000))*(r21));
IkReal x233=((IkReal(0.00594669600000000))*(r20));
IkReal x234=((IkReal(0.0410400000000000))*(rxp2_2));
IkReal x235=((IkReal(0.289800000000000))*(npy));
IkReal x236=((IkReal(0.0318400000000000))*(npx));
IkReal x237=((IkReal(0.0125461846153846))*(r22));
IkReal x238=((IkReal(0.00400000000000000))*(npy));
IkReal x239=((IkReal(0.00920000000000000))*(npz));
IkReal x240=((IkReal(0.00362515384615385))*(r20));
IkReal x241=((IkReal(0.579600000000000))*(npx));
IkReal x242=((IkReal(0.0410400000000000))*(npx));
IkReal x243=((IkReal(0.0161713384615385))*(r22));
IkReal x244=((IkReal(0.0318400000000000))*(rxp2_0));
IkReal x245=((IkReal(8.30000000000000e-6))*(r02));
IkReal x246=((IkReal(0.000264272000000000))*(r00));
IkReal x247=((IkReal(0.000976646400000000))*(r01));
IkReal x248=((IkReal(0.0166000000000000))*(px));
IkReal x249=((IkReal(7.28800000000000e-5))*(r00));
IkReal x250=((IkReal(1.66000000000000e-5))*(r00));
IkReal x251=((IkReal(7.63600000000000e-5))*(r02));
IkReal x252=((IkReal(0.00920000000000000))*(rxp0_0));
IkReal x253=((IkReal(0.000340632000000000))*(r00));
IkReal x254=((IkReal(0.0410400000000000))*(rxp2_0));
IkReal x255=((IkReal(0.00114427040000000))*(r01));
IkReal x256=((IkReal(0.0318400000000000))*(rxp2_1));
IkReal x257=((IkReal(8.30000000000000e-6))*(r12));
IkReal x258=((IkReal(0.000264272000000000))*(r10));
IkReal x259=((IkReal(0.000976646400000000))*(r11));
IkReal x260=((IkReal(0.0166000000000000))*(py));
IkReal x261=((IkReal(7.28800000000000e-5))*(r10));
IkReal x262=((IkReal(1.66000000000000e-5))*(r10));
IkReal x263=((IkReal(7.63600000000000e-5))*(r12));
IkReal x264=((IkReal(0.00920000000000000))*(rxp0_1));
IkReal x265=((IkReal(0.000340632000000000))*(r10));
IkReal x266=((IkReal(0.0410400000000000))*(rxp2_1));
IkReal x267=((IkReal(0.00114427040000000))*(r11));
IkReal x268=((IkReal(2.00000000000000))*(npy));
IkReal x269=((IkReal(4.00000000000000))*(pp));
IkReal x270=((IkReal(8.00000000000000))*(pz));
IkReal x271=((IkReal(4.00000000000000))*(npx));
IkReal x272=((IkReal(8.00000000000000))*(npz));
IkReal x273=((IkReal(2.00000000000000))*(pp));
IkReal x274=((IkReal(8.00000000000000))*(npy));
IkReal x275=((pz)*(x268));
IkReal x276=((IkReal(1.00000000000000))*(x90));
IkReal x277=((pz)*(x271));
IkReal x278=((r20)*(x273));
IkReal x279=((px)*(x268));
IkReal x280=((r01)*(x98));
IkReal x281=((px)*(x271));
IkReal x282=((r00)*(x273));
IkReal x283=((py)*(x268));
IkReal x284=((r11)*(x98));
IkReal x285=((py)*(x271));
IkReal x286=((r10)*(x273));
IkReal x287=((IkReal(-1.38640000000000))*(r22));
IkReal x288=((npz)*(x270));
IkReal x289=((r22)*(x269));
IkReal x290=((npy)*(x270));
IkReal x291=((IkReal(4.00000000000000))*(x90));
IkReal x292=((px)*(x272));
IkReal x293=((r02)*(x269));
IkReal x294=((px)*(x274));
IkReal x295=((IkReal(4.00000000000000))*(x124));
IkReal x296=((py)*(x272));
IkReal x297=((r12)*(x269));
IkReal x298=((py)*(x274));
IkReal x299=((IkReal(4.00000000000000))*(x142));
IkReal x300=((IkReal(0.0264524400000000))+(x172));
IkReal x301=((IkReal(-0.301721738400000))+(x95));
IkReal x302=((IkReal(-0.701500000000000))+(x76));
IkReal x303=((IkReal(0.00830000000000000))+(x222));
IkReal x304=((IkReal(-0.0636400000000000))+(x149));
IkReal x305=((IkReal(-3.64400000000000e-5))+(x239));
IkReal x306=((npy)+(x67));
IkReal x307=((IkReal(-3.64400000000000e-5))+(x102));
IkReal x308=((IkReal(0.00830000000000000))+(x220));
IkReal x309=((x145)+(x146));
IkReal x310=((x75)+(x73));
IkReal x311=((x67)+(x69));
IkReal x312=((x75)+(x74));
IkReal x313=((x83)+(x87));
IkReal x314=((x109)+(x247));
IkReal x315=((x120)+(x116));
IkReal x316=((x256)+(x257));
IkReal x317=((x142)+(x128));
IkReal x318=((x60)+(x62));
IkReal x319=((x134)+(x138));
IkReal x320=((x86)+(x85));
IkReal x321=((x133)+(x132));
IkReal x322=((x99)+(x93));
IkReal x323=((x93)+(x96));
IkReal x324=((x99)+(x96));
IkReal x325=((x127)+(x259));
IkReal x326=((x206)+(x204));
IkReal x327=((x245)+(x244));
IkReal x328=((x98)+(x97));
IkReal x329=((x104)+(x106));
IkReal x330=((x163)+(x164));
IkReal x331=((x72)+(x67));
IkReal x332=((x108)+(x96));
IkReal x333=((x79)+(x82));
IkReal x334=((x126)+(x109));
IkReal x335=((x179)+(x180));
IkReal x336=((x109)+(x253));
IkReal x337=((x78)+(x90));
IkReal x338=((x79)+(x89));
IkReal x339=((x113)+(x114));
IkReal x340=((x257)+(x260));
IkReal x341=((x124)+(x110));
IkReal x342=((x112)+(x115));
IkReal x343=((x191)+(x189));
IkReal x344=((x235)+(x242));
IkReal x345=((x100)+(x101));
IkReal x346=((x198)+(x200));
IkReal x347=((x140)+(x213));
IkReal x348=((x236)+(x235));
IkReal x349=((x237)+(x98));
IkReal x350=((x214)+(x215));
IkReal x351=((x214)+(x219));
IkReal x352=((x123)+(x114));
IkReal x353=((x137)+(x136));
IkReal x354=((x59)+(x61));
IkReal x355=((x119)+(x118));
IkReal x356=((x175)+(x176));
IkReal x357=((x159)+(x158));
IkReal x358=((x223)+(x225));
IkReal x359=((x122)+(x185));
IkReal x360=((x184)+(x182));
IkReal x361=((x100)+(x240));
IkReal x362=((x167)+(x277));
IkReal x363=((x248)+(x280));
IkReal x364=((x258)+(x283));
IkReal x365=((x277)+(x88));
IkReal x366=((x111)+(x279));
IkReal x367=((x128)+(x284));
IkReal x368=((x165)+(x289));
IkReal x369=((x210)+(x285));
IkReal x370=((x127)+(x283));
IkReal x371=((x227)+(x276));
IkReal x372=((x139)+(x286));
IkReal x373=((x122)+(x282));
IkReal x374=((x190)+(x293));
IkReal x375=((x121)+(x281));
IkReal x376=((x188)+(x292));
IkReal x377=((x140)+(x285));
IkReal x378=((x157)+(x278));
IkReal x379=((x193)+(x294));
IkReal x380=((x278)+(x88));
IkReal x381=((x209)+(x299));
IkReal x382=((x183)+(x282));
IkReal x383=((x196)+(x195)+(x184));
IkReal x384=((x211)+(x212)+(x200));
IkReal x385=((x168)+(x169)+(x159));
IkReal x386=((x171)+(x173)+(x106));
IkReal x387=((x243)+(x98)+(x96));
IkReal x388=((x141)+(x133)+(x129));
IkReal x389=((x131)+(x130)+(x283));
IkReal x390=((x194)+(x375));
IkReal x391=((x170)+(x380));
IkReal x392=((x275)+(x80)+(x81));
IkReal x393=((x224)+(x226)+(x275));
IkReal x394=((x207)+(x205)+(x297));
IkReal x395=((x275)+(x77)+(x92));
IkReal x396=((x232)+(x233)+(x275)+(x77));
op[0]=((((IkReal(-1.00000000000000))*(x354)))+(x60)+(((IkReal(-1.00000000000000))*(x62))));
op[1]=((((IkReal(0.0954400000000000))*(r21)))+(((IkReal(-1.00000000000000))*(x65))));
op[2]=((x354)+(x60)+(((IkReal(-1.00000000000000))*(x62))));
op[3]=((((IkReal(-1.00000000000000))*(x63)))+(((IkReal(-1.00000000000000))*(x64))));
op[4]=x216;
op[5]=((x63)+(((IkReal(-1.00000000000000))*(x64))));
op[6]=((((IkReal(-1.00000000000000))*(x318)))+(x66)+(((IkReal(-1.00000000000000))*(x61))));
op[7]=((((IkReal(-0.0225600000000000))*(r21)))+(((IkReal(-1.00000000000000))*(x65))));
op[8]=((((IkReal(-1.00000000000000))*(x318)))+(x61)+(((IkReal(-1.00000000000000))*(x66))));
op[9]=((IkReal(-0.701500000000000))+(x69)+(((IkReal(-1.00000000000000))*(x331)))+(((IkReal(-1.00000000000000))*(x68))));
op[10]=((((IkReal(-1.00000000000000))*(x74)))+(x310));
op[11]=((IkReal(-0.701500000000000))+(x306)+(((IkReal(-1.00000000000000))*(x69)))+(((IkReal(-1.00000000000000))*(x68))));
op[12]=((((IkReal(-1.00000000000000))*(x70)))+(x71));
op[13]=((IkReal(-0.340384615384615))*(r21));
op[14]=((((IkReal(-1.00000000000000))*(x71)))+(((IkReal(-1.00000000000000))*(x70))));
op[15]=((((IkReal(-1.00000000000000))*(x72)))+(x302)+(x311));
op[16]=((((IkReal(-1.00000000000000))*(x312)))+(x73));
op[17]=((npy)+(x302)+(((IkReal(-1.00000000000000))*(x311))));
op[18]=((((IkReal(-1.00000000000000))*(x77)))+(x392)+(x78)+(((IkReal(-1.00000000000000))*(x333)))+(((IkReal(-1.00000000000000))*(x276))));
op[19]=((((IkReal(0.598366323200000))*(r20)))+(x365)+(((IkReal(-1.00000000000000))*(x278)))+(((IkReal(-0.107828112000000))*(r21))));
op[20]=((((IkReal(-1.00000000000000))*(x392)))+(x337)+(x77)+(((IkReal(-1.00000000000000))*(x333))));
op[21]=((x320)+(((IkReal(-1.00000000000000))*(x313)))+(x84));
op[22]=((((IkReal(-0.00225960000000000))*(r21)))+(((IkReal(-0.236000000000000))*(rxp1_2)))+(((IkReal(-1.00000000000000))*(x228))));
op[23]=((((IkReal(-1.00000000000000))*(x320)))+(x83)+(x84)+(((IkReal(-1.00000000000000))*(x87))));
op[24]=((x338)+(x395)+(x78)+(((IkReal(-1.00000000000000))*(x91)))+(((IkReal(-1.00000000000000))*(x276))));
op[25]=((((IkReal(0.602666243200000))*(r20)))+(x277)+(((IkReal(0.0254882880000000))*(r21)))+(((IkReal(-1.00000000000000))*(x380))));
op[26]=((((IkReal(-1.00000000000000))*(x395)))+(x338)+(x337)+(x91));
op[27]=((((IkReal(-1.00000000000000))*(x328)))+(x301)+(x324)+(((IkReal(-1.00000000000000))*(x93)))+(((IkReal(-1.00000000000000))*(x94))));
op[28]=((((IkReal(-1.00000000000000))*(x105)))+(((IkReal(-1.00000000000000))*(x329)))+(((IkReal(0.190880000000000))*(npy))));
op[29]=((x301)+(x323)+(x94)+(x97)+(((IkReal(-1.00000000000000))*(x98)))+(((IkReal(-1.00000000000000))*(x99))));
op[30]=((((IkReal(-1.00000000000000))*(x103)))+(x307)+(((IkReal(-1.00000000000000))*(x345))));
op[31]=((((IkReal(0.0929930769230769))*(r21)))+(x238));
op[32]=((((IkReal(-1.00000000000000))*(x103)))+(x307)+(x345));
op[33]=((IkReal(-0.299571778400000))+(((IkReal(-1.00000000000000))*(x322)))+(((IkReal(-1.00000000000000))*(x328)))+(x107)+(((IkReal(-1.00000000000000))*(x332))));
op[34]=((((IkReal(-1.00000000000000))*(x106)))+(((IkReal(-1.00000000000000))*(x105)))+(x104)+(((IkReal(-0.0451200000000000))*(npy))));
op[35]=((IkReal(-0.299571778400000))+(((IkReal(-1.00000000000000))*(x107)))+(x322)+(x97)+(((IkReal(-1.00000000000000))*(x332)))+(((IkReal(-1.00000000000000))*(x98))));
op[36]=((((IkReal(-1.00000000000000))*(x109)))+(x110)+(x342)+(x366)+(((IkReal(-1.00000000000000))*(x339)))+(((IkReal(-1.00000000000000))*(x280))));
op[37]=((((IkReal(0.978065923200000))*(r00)))+(((IkReal(-0.133902320000000))*(r01)))+(x122)+(x375)+(((IkReal(-1.00000000000000))*(x282))));
op[38]=((((IkReal(-1.00000000000000))*(x366)))+(x109)+(x341)+(((IkReal(-1.00000000000000))*(x339)))+(((IkReal(-1.00000000000000))*(x342))));
op[39]=((x117)+(x355)+(((IkReal(-1.00000000000000))*(x315))));
op[40]=((((IkReal(-0.00280600000000000))*(r01)))+(((IkReal(-0.236000000000000))*(rxp1_0)))+(((IkReal(-1.00000000000000))*(x249))));
op[41]=((((IkReal(-1.00000000000000))*(x355)))+(((IkReal(-1.00000000000000))*(x120)))+(x117)+(x116));
op[42]=((((IkReal(-1.00000000000000))*(x125)))+(x110)+(x334)+(x352)+(x366)+(((IkReal(-1.00000000000000))*(x280))));
op[43]=((((IkReal(-1.00000000000000))*(x373)))+(((IkReal(0.0316516800000000))*(r01)))+(x375)+(((IkReal(0.982365843200000))*(r00))));
op[44]=((((IkReal(-1.00000000000000))*(x366)))+(x125)+(x352)+(x341)+(((IkReal(-1.00000000000000))*(x334))));
op[45]=((((IkReal(-1.00000000000000))*(x367)))+(((IkReal(-1.00000000000000))*(x321)))+(((IkReal(-1.00000000000000))*(x127)))+(x129)+(x389));
op[46]=((((IkReal(-1.00000000000000))*(x372)))+(((IkReal(-0.133902320000000))*(r11)))+(((IkReal(0.978065923200000))*(r10)))+(x377));
op[47]=((((IkReal(-1.00000000000000))*(x321)))+(x127)+(x129)+(x317)+(((IkReal(-1.00000000000000))*(x389))));
op[48]=((x135)+(x353)+(((IkReal(-1.00000000000000))*(x319))));
op[49]=((((IkReal(-0.00280600000000000))*(r11)))+(((IkReal(-0.236000000000000))*(rxp1_1)))+(((IkReal(-1.00000000000000))*(x261))));
op[50]=((((IkReal(-1.00000000000000))*(x353)))+(x135)+(x134)+(((IkReal(-1.00000000000000))*(x138))));
op[51]=((((IkReal(-1.00000000000000))*(x143)))+(((IkReal(-1.00000000000000))*(x367)))+(x144)+(x388)+(x370));
op[52]=((((IkReal(-1.00000000000000))*(x140)))+(((IkReal(-1.00000000000000))*(x372)))+(((IkReal(0.0316516800000000))*(r11)))+(x285)+(((IkReal(0.982365843200000))*(r10))));
op[53]=((((IkReal(-1.00000000000000))*(x144)))+(((IkReal(-1.00000000000000))*(x370)))+(x143)+(x317)+(x388));
op[54]=((((IkReal(-1.00000000000000))*(x145)))+(x146));
op[55]=((x147)+(x148));
op[56]=((((IkReal(-1.00000000000000))*(x146)))+(x145));
op[57]=x287;
op[58]=IkReal(0);
op[59]=x287;
op[60]=x309;
op[61]=((((IkReal(-1.00000000000000))*(x148)))+(x147));
op[62]=((IkReal(-1.00000000000000))*(x309));
op[63]=((((IkReal(-1.00000000000000))*(x74)))+(x304)+(x310));
op[64]=((((IkReal(-1.00000000000000))*(x155)))+(x156)+(x154));
op[65]=((x304)+(((IkReal(-1.00000000000000))*(x310)))+(x74));
op[66]=((((IkReal(-1.00000000000000))*(x151)))+(((IkReal(-1.00000000000000))*(x152)))+(x153)+(x150));
op[67]=((((IkReal(8.19000000000000))*(r21)))+(((IkReal(0.420461538461538))*(r20))));
op[68]=((((IkReal(-1.00000000000000))*(x152)))+(((IkReal(-1.00000000000000))*(x153)))+(x151)+(x150));
op[69]=((IkReal(0.00924000000000000))+(((IkReal(-1.00000000000000))*(x149)))+(((IkReal(-1.00000000000000))*(x73)))+(x312));
op[70]=((((IkReal(-1.00000000000000))*(x156)))+(x155)+(x154));
op[71]=((IkReal(0.00924000000000000))+(((IkReal(-1.00000000000000))*(x149)))+(((IkReal(-1.00000000000000))*(x312)))+(x73));
op[72]=((((IkReal(-1.00000000000000))*(x161)))+(((IkReal(-1.00000000000000))*(x378)))+(x160)+(x357)+(x365));
op[73]=((((IkReal(-1.00000000000000))*(x290)))+(x166)+(x291)+(((IkReal(0.394983830400000))*(r21)))+(((IkReal(0.0636313440000000))*(r20))));
op[74]=((((IkReal(-1.00000000000000))*(x161)))+(((IkReal(-1.00000000000000))*(x160)))+(((IkReal(-1.00000000000000))*(x365)))+(x357)+(x378));
op[75]=((((IkReal(-1.00000000000000))*(x162)))+(((IkReal(-1.00000000000000))*(x368)))+(x330)+(x288));
op[76]=((((IkReal(0.291520000000000))*(rxp0_2)))+(((IkReal(5.67840000000000))*(rxp1_2)))+(((IkReal(-0.000108800000000000))*(r21))));
op[77]=((((IkReal(-1.00000000000000))*(x368)))+(x162)+(x288)+(((IkReal(-1.00000000000000))*(x330))));
op[78]=((((IkReal(-1.00000000000000))*(x362)))+(x391)+(((IkReal(-1.00000000000000))*(x385))));
op[79]=((((IkReal(-0.0398291040000000))*(r20)))+(((IkReal(-1.00000000000000))*(x291)))+(x166)+(x290)+(((IkReal(-0.398948502400000))*(r21))));
op[80]=((((IkReal(-1.00000000000000))*(x391)))+(x362)+(((IkReal(-1.00000000000000))*(x385))));
op[81]=((IkReal(-0.00415716000000000))+(((IkReal(-1.00000000000000))*(x171)))+(((IkReal(-1.00000000000000))*(x172)))+(((IkReal(-1.00000000000000))*(x329)))+(x173));
op[82]=((((IkReal(-1.00000000000000))*(x181)))+(x178)+(x335));
op[83]=((IkReal(-0.00415716000000000))+(((IkReal(-1.00000000000000))*(x172)))+(((IkReal(-1.00000000000000))*(x173)))+(x171)+(x329));
op[84]=((((IkReal(-1.00000000000000))*(x174)))+(((IkReal(-1.00000000000000))*(x356)))+(x177));
op[85]=((((IkReal(-2.23750800000000))*(r21)))+(((IkReal(-0.114870092307692))*(r20))));
op[86]=((((IkReal(-1.00000000000000))*(x177)))+(((IkReal(-1.00000000000000))*(x356)))+(x174));
op[87]=((((IkReal(-1.00000000000000))*(x104)))+(x300)+(x386));
op[88]=((((IkReal(-1.00000000000000))*(x181)))+(x178)+(((IkReal(-1.00000000000000))*(x335))));
op[89]=((x104)+(x300)+(((IkReal(-1.00000000000000))*(x386))));
op[90]=((((IkReal(-1.00000000000000))*(x186)))+(x359)+(x375)+(x360)+(((IkReal(-1.00000000000000))*(x382))));
op[91]=((((IkReal(0.0462558240000000))*(r00)))+(((IkReal(-1.00000000000000))*(x379)))+(x192)+(x295)+(((IkReal(0.0234193504000000))*(r01))));
op[92]=((((IkReal(-1.00000000000000))*(x186)))+(((IkReal(-1.00000000000000))*(x359)))+(((IkReal(-1.00000000000000))*(x375)))+(x382)+(x360));
op[93]=((((IkReal(-1.00000000000000))*(x187)))+(((IkReal(-1.00000000000000))*(x374)))+(x343)+(x376));
op[94]=((((IkReal(-0.000108800000000000))*(r01)))+(((IkReal(0.291520000000000))*(rxp0_0)))+(((IkReal(5.67840000000000))*(rxp1_0))));
op[95]=((((IkReal(-1.00000000000000))*(x374)))+(x187)+(x376)+(((IkReal(-1.00000000000000))*(x343))));
op[96]=((((IkReal(-1.00000000000000))*(x390)))+(x197)+(x373)+(((IkReal(-1.00000000000000))*(x383))));
op[97]=((((IkReal(-0.0572046240000000))*(r00)))+(((IkReal(-0.0273840224000000))*(r01)))+(((IkReal(-1.00000000000000))*(x295)))+(x192)+(x379));
op[98]=((((IkReal(-1.00000000000000))*(x373)))+(((IkReal(-1.00000000000000))*(x197)))+(x390)+(((IkReal(-1.00000000000000))*(x383))));
op[99]=((((IkReal(-1.00000000000000))*(x372)))+(((IkReal(-1.00000000000000))*(x199)))+(((IkReal(-1.00000000000000))*(x202)))+(x346)+(x377)+(x201));
op[100]=((((IkReal(-1.00000000000000))*(x298)))+(x381)+(x208)+(((IkReal(0.0234193504000000))*(r11)))+(((IkReal(0.0462558240000000))*(r10))));
op[101]=((((IkReal(-1.00000000000000))*(x377)))+(x199)+(((IkReal(-1.00000000000000))*(x201)))+(((IkReal(-1.00000000000000))*(x202)))+(x346)+(x372));
op[102]=((((IkReal(-1.00000000000000))*(x394)))+(((IkReal(-1.00000000000000))*(x203)))+(x326)+(x296));
op[103]=((((IkReal(-0.000108800000000000))*(r11)))+(((IkReal(0.291520000000000))*(rxp0_1)))+(((IkReal(5.67840000000000))*(rxp1_1))));
op[104]=((((IkReal(-1.00000000000000))*(x394)))+(((IkReal(-1.00000000000000))*(x326)))+(x203)+(x296));
op[105]=((((IkReal(-1.00000000000000))*(x369)))+(x347)+(x372)+(((IkReal(-1.00000000000000))*(x384))));
op[106]=((((IkReal(-0.0273840224000000))*(r11)))+(x208)+(x298)+(((IkReal(-1.00000000000000))*(x381)))+(((IkReal(-0.0572046240000000))*(r10))));
op[107]=((((IkReal(-1.00000000000000))*(x372)))+(x369)+(((IkReal(-1.00000000000000))*(x384)))+(((IkReal(-1.00000000000000))*(x347))));
op[108]=((((IkReal(-1.00000000000000))*(x350)))+(x60)+(((IkReal(-1.00000000000000))*(x62))));
op[109]=((((IkReal(0.0318400000000000))*(r21)))+(((IkReal(-1.00000000000000))*(x218))));
op[110]=((x350)+(x60)+(((IkReal(-1.00000000000000))*(x62))));
op[111]=((x217)+(((IkReal(-1.00000000000000))*(x63))));
op[112]=x216;
op[113]=((x217)+(x63));
op[114]=((((IkReal(-1.00000000000000))*(x351)))+(((IkReal(-1.00000000000000))*(x318))));
op[115]=((((IkReal(0.0410400000000000))*(r21)))+(((IkReal(-1.00000000000000))*(x218))));
op[116]=((x351)+(((IkReal(-1.00000000000000))*(x318))));
op[117]=((x308)+(x306)+(((IkReal(-1.00000000000000))*(x69))));
op[118]=((((IkReal(-1.00000000000000))*(x310)))+(x74));
op[119]=((x308)+(x69)+(((IkReal(-1.00000000000000))*(x331))));
op[120]=((x221)+(x70));
op[121]=((IkReal(-0.0265384615384615))*(r21));
op[122]=((x70)+(((IkReal(-1.00000000000000))*(x221))));
op[123]=((npy)+(x303)+(((IkReal(-1.00000000000000))*(x311))));
op[124]=((((IkReal(-1.00000000000000))*(x73)))+(x312));
op[125]=((((IkReal(-1.00000000000000))*(x72)))+(x303)+(x311));
op[126]=((((IkReal(-1.00000000000000))*(x393)))+(x358)+(x77)+(x90)+(((IkReal(-1.00000000000000))*(x227))));
op[127]=((((IkReal(0.00922723200000000))*(r21)))+(((IkReal(-1.00000000000000))*(x365)))+(x278)+(((IkReal(-0.00618182720000000))*(r20))));
op[128]=((((IkReal(-1.00000000000000))*(x77)))+(((IkReal(-1.00000000000000))*(x371)))+(x358)+(x393));
op[129]=((x313)+(((IkReal(-1.00000000000000))*(x230)))+(x229)+(x231));
op[130]=((x228)+(((IkReal(0.000579600000000000))*(r21)))+(((IkReal(-0.0184000000000000))*(rxp1_2))));
op[131]=((((IkReal(-1.00000000000000))*(x231)))+(x229)+(x230)+(x87)+(((IkReal(-1.00000000000000))*(x83))));
op[132]=((((IkReal(-1.00000000000000))*(x396)))+(x234)+(x90)+(((IkReal(-1.00000000000000))*(x227)))+(((IkReal(-1.00000000000000))*(x225))));
op[133]=((((IkReal(0.0118933920000000))*(r21)))+(x380)+(((IkReal(-0.00584657920000000))*(r20)))+(((IkReal(-1.00000000000000))*(x277))));
op[134]=((((IkReal(-1.00000000000000))*(x371)))+(x396)+(x234)+(((IkReal(-1.00000000000000))*(x225))));
op[135]=((IkReal(-0.00158198640000000))+(x323)+(((IkReal(-1.00000000000000))*(x99)))+(((IkReal(-1.00000000000000))*(x349)))+(((IkReal(-1.00000000000000))*(x348))));
op[136]=((((IkReal(0.0636800000000000))*(npy)))+(x329)+(((IkReal(-1.00000000000000))*(x241))));
op[137]=((IkReal(-0.00158198640000000))+(x324)+(x348)+(((IkReal(-1.00000000000000))*(x93)))+(((IkReal(-1.00000000000000))*(x349))));
op[138]=((((IkReal(-1.00000000000000))*(x361)))+(((IkReal(-1.00000000000000))*(x102)))+(x305));
op[139]=((((IkReal(0.00725030769230769))*(r21)))+(x238));
op[140]=((((IkReal(-1.00000000000000))*(x102)))+(x305)+(x361));
op[141]=((IkReal(-0.00174961040000000))+(x322)+(((IkReal(-1.00000000000000))*(x387)))+(((IkReal(-1.00000000000000))*(x344))));
op[142]=((((IkReal(-1.00000000000000))*(x104)))+(x106)+(((IkReal(-1.00000000000000))*(x241)))+(((IkReal(0.0820800000000000))*(npy))));
op[143]=((IkReal(-0.00174961040000000))+(((IkReal(-1.00000000000000))*(x322)))+(x344)+(((IkReal(-1.00000000000000))*(x387))));
op[144]=((((IkReal(-1.00000000000000))*(x366)))+(x124)+(x327)+(x314)+(((IkReal(-1.00000000000000))*(x246)))+(((IkReal(-1.00000000000000))*(x248))));
op[145]=((((IkReal(-1.00000000000000))*(x375)))+(((IkReal(-1.00000000000000))*(x122)))+(((IkReal(0.000528544000000000))*(r01)))+(x282)+(((IkReal(0.00195329280000000))*(r00))));
op[146]=((((IkReal(-1.00000000000000))*(x363)))+(x327)+(x366)+(x246)+(((IkReal(-1.00000000000000))*(x314))));
op[147]=((x315)+(x251)+(x252)+(((IkReal(-1.00000000000000))*(x250))));
op[148]=((((IkReal(3.32000000000000e-5))*(r01)))+(x249)+(((IkReal(-0.0184000000000000))*(rxp1_0))));
op[149]=((((IkReal(-1.00000000000000))*(x116)))+(x120)+(x250)+(x251)+(((IkReal(-1.00000000000000))*(x252))));
op[150]=((((IkReal(-1.00000000000000))*(x366)))+(x124)+(x254)+(x255)+(((IkReal(-1.00000000000000))*(x336)))+(((IkReal(-1.00000000000000))*(x245)))+(((IkReal(-1.00000000000000))*(x248))));
op[151]=((((IkReal(0.00228854080000000))*(r00)))+(((IkReal(0.000681264000000000))*(r01)))+(((IkReal(-1.00000000000000))*(x375)))+(x373));
op[152]=((((IkReal(-1.00000000000000))*(x363)))+(x336)+(x366)+(x254)+(((IkReal(-1.00000000000000))*(x245)))+(((IkReal(-1.00000000000000))*(x255))));
op[153]=((((IkReal(-1.00000000000000))*(x364)))+(x325)+(x317)+(x316)+(((IkReal(-1.00000000000000))*(x260))));
op[154]=((((IkReal(-1.00000000000000))*(x377)))+(((IkReal(0.000528544000000000))*(r11)))+(x372)+(((IkReal(0.00195329280000000))*(r10))));
op[155]=((((IkReal(-1.00000000000000))*(x367)))+(((IkReal(-1.00000000000000))*(x325)))+(x316)+(x364)+(((IkReal(-1.00000000000000))*(x260))));
op[156]=((x319)+(x264)+(x263)+(((IkReal(-1.00000000000000))*(x262))));
op[157]=((x261)+(((IkReal(-0.0184000000000000))*(rxp1_1)))+(((IkReal(3.32000000000000e-5))*(r11))));
op[158]=((x138)+(((IkReal(-1.00000000000000))*(x134)))+(x263)+(x262)+(((IkReal(-1.00000000000000))*(x264))));
op[159]=((((IkReal(-1.00000000000000))*(x370)))+(x317)+(x267)+(x266)+(((IkReal(-1.00000000000000))*(x265)))+(((IkReal(-1.00000000000000))*(x340))));
op[160]=((((IkReal(0.00228854080000000))*(r10)))+(((IkReal(0.000681264000000000))*(r11)))+(x140)+(x372)+(((IkReal(-1.00000000000000))*(x285))));
op[161]=((((IkReal(-1.00000000000000))*(x367)))+(x370)+(x265)+(x266)+(((IkReal(-1.00000000000000))*(x267)))+(((IkReal(-1.00000000000000))*(x340))));
solvedialyticpoly12qep(op,zeror,numroots);
IkReal j14array[16], cj14array[16], sj14array[16], j15array[16], cj15array[16], sj15array[16], j16array[16], cj16array[16], sj16array[16];
int numsolutions = 0;
for(int ij14 = 0; ij14 < numroots; ij14 += 3)
{
IkReal htj14 = zeror[ij14+0], htj15 = zeror[ij14+1], htj16 = zeror[ij14+2];
j14array[numsolutions]=((IkReal(2.00000000000000))*(atan(htj14)));
j15array[numsolutions]=((IkReal(2.00000000000000))*(atan(htj15)));
j16array[numsolutions]=((IkReal(2.00000000000000))*(atan(htj16)));
IkReal x397=(htj14)*(htj14);
IkReal x398=(htj15)*(htj15);
IkReal x399=(htj16)*(htj16);
cj14array[numsolutions]=((((IKabs(((IkReal(1.00000000000000))+(x397))) != 0)?((IkReal)1/(((IkReal(1.00000000000000))+(x397)))):(IkReal)1.0e30))*(((IkReal(1.00000000000000))+(((IkReal(-1.00000000000000))*(x397))))));
cj15array[numsolutions]=((((IKabs(((IkReal(1.00000000000000))+(x398))) != 0)?((IkReal)1/(((IkReal(1.00000000000000))+(x398)))):(IkReal)1.0e30))*(((IkReal(1.00000000000000))+(((IkReal(-1.00000000000000))*(x398))))));
cj16array[numsolutions]=((((IKabs(((IkReal(1.00000000000000))+(x399))) != 0)?((IkReal)1/(((IkReal(1.00000000000000))+(x399)))):(IkReal)1.0e30))*(((IkReal(1.00000000000000))+(((IkReal(-1.00000000000000))*(x399))))));
sj14array[numsolutions]=((IkReal(2.00000000000000))*(htj14)*(((IKabs(((IkReal(1.00000000000000))+((htj14)*(htj14)))) != 0)?((IkReal)1/(((IkReal(1.00000000000000))+((htj14)*(htj14))))):(IkReal)1.0e30)));
sj15array[numsolutions]=((IkReal(2.00000000000000))*(htj15)*(((IKabs(((IkReal(1.00000000000000))+((htj15)*(htj15)))) != 0)?((IkReal)1/(((IkReal(1.00000000000000))+((htj15)*(htj15))))):(IkReal)1.0e30)));
sj16array[numsolutions]=((IkReal(2.00000000000000))*(htj16)*(((IKabs(((IkReal(1.00000000000000))+((htj16)*(htj16)))) != 0)?((IkReal)1/(((IkReal(1.00000000000000))+((htj16)*(htj16))))):(IkReal)1.0e30)));
if( j14array[numsolutions] > IKPI )
{
    j14array[numsolutions]-=IK2PI;
}
else if( j14array[numsolutions] < -IKPI )
{
    j14array[numsolutions]+=IK2PI;
}
if( j15array[numsolutions] > IKPI )
{
    j15array[numsolutions]-=IK2PI;
}
else if( j15array[numsolutions] < -IKPI )
{
    j15array[numsolutions]+=IK2PI;
}
if( j16array[numsolutions] > IKPI )
{
    j16array[numsolutions]-=IK2PI;
}
else if( j16array[numsolutions] < -IKPI )
{
    j16array[numsolutions]+=IK2PI;
}
numsolutions++;
}
bool j14valid[16]={true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true};
_nj14 = 16;
_nj15 = 1;
_nj16 = 1;
for(int ij14 = 0; ij14 < numsolutions; ++ij14)
    {
if( !j14valid[ij14] )
{
    continue;
}
_ij14[0] = ij14; _ij14[1] = -1;
_ij15[0] = 0; _ij15[1] = -1;
_ij16[0] = 0; _ij16[1] = -1;
for(int iij14 = ij14+1; iij14 < numsolutions; ++iij14)
{
if( !j14valid[iij14] ) { continue; }
if( IKabs(cj14array[ij14]-cj14array[iij14]) < IKFAST_SOLUTION_THRESH && IKabs(sj14array[ij14]-sj14array[iij14]) < IKFAST_SOLUTION_THRESH && IKabs(cj15array[ij14]-cj15array[iij14]) < IKFAST_SOLUTION_THRESH && IKabs(sj15array[ij14]-sj15array[iij14]) < IKFAST_SOLUTION_THRESH && IKabs(cj16array[ij14]-cj16array[iij14]) < IKFAST_SOLUTION_THRESH && IKabs(sj16array[ij14]-sj16array[iij14]) < IKFAST_SOLUTION_THRESH &&  1 )
{
    j14valid[iij14]=false; _ij14[1] = iij14; _ij15[1] = 0; _ij16[1] = 0;  break; 
}
}
    j14 = j14array[ij14]; cj14 = cj14array[ij14]; sj14 = sj14array[ij14];

    j15 = j15array[ij14]; cj15 = cj15array[ij14]; sj15 = sj15array[ij14];

    j16 = j16array[ij14]; cj16 = cj16array[ij14]; sj16 = sj16array[ij14];

{
IkReal j12array[2], cj12array[2], sj12array[2];
bool j12valid[2]={false};
_nj12 = 2;
IkReal x400=((IkReal(1.00000000000000))*(sj14));
IkReal x401=((IkReal(1.00000000000000))*(cj14));
sj12array[0]=((((IkReal(-1.00000000000000))*(cj16)*(r21)*(x401)))+(((IkReal(-1.00000000000000))*(r20)*(sj16)*(x401)))+(((cj15)*(r21)*(sj14)*(sj16)))+(((IkReal(-1.00000000000000))*(cj15)*(cj16)*(r20)*(x400)))+(((IkReal(-1.00000000000000))*(r22)*(sj15)*(x400))));
if( sj12array[0] >= -1-IKFAST_SINCOS_THRESH && sj12array[0] <= 1+IKFAST_SINCOS_THRESH )
{
    j12valid[0] = j12valid[1] = true;
    j12array[0] = IKasin(sj12array[0]);
    cj12array[0] = IKcos(j12array[0]);
    sj12array[1] = sj12array[0];
    j12array[1] = j12array[0] > 0 ? (IKPI-j12array[0]) : (-IKPI-j12array[0]);
    cj12array[1] = -cj12array[0];
}
else if( isnan(sj12array[0]) )
{
    // probably any value will work
    j12valid[0] = true;
    cj12array[0] = 1; sj12array[0] = 0; j12array[0] = 0;
}
for(int ij12 = 0; ij12 < 2; ++ij12)
{
if( !j12valid[ij12] )
{
    continue;
}
_ij12[0] = ij12; _ij12[1] = -1;
for(int iij12 = ij12+1; iij12 < 2; ++iij12)
{
if( j12valid[iij12] && IKabs(cj12array[ij12]-cj12array[iij12]) < IKFAST_SOLUTION_THRESH && IKabs(sj12array[ij12]-sj12array[iij12]) < IKFAST_SOLUTION_THRESH )
{
    j12valid[iij12]=false; _ij12[1] = iij12; break; 
}
}
j12 = j12array[ij12]; cj12 = cj12array[ij12]; sj12 = sj12array[ij12];
{
IkReal evalcond[1];
IkReal x402=((r22)*(sj15));
IkReal x403=((IkReal(0.0159000000000000))*(cj14));
IkReal x404=((r20)*(sj16));
IkReal x405=((IkReal(0.0159000000000000))*(sj14));
IkReal x406=((cj16)*(r21));
IkReal x407=((IkReal(0.210000000000000))*(cj14));
IkReal x408=((r21)*(sj16));
IkReal x409=((IkReal(0.000500000000000000))*(sj15));
IkReal x410=((IkReal(0.210000000000000))*(sj14));
IkReal x411=((cj16)*(r20));
IkReal x412=((cj15)*(x408));
evalcond[0]=((((IkReal(0.000500000000000000))*(cj15)*(r22)))+(((x405)*(x406)))+(((IkReal(-1.00000000000000))*(x406)*(x407)))+(((x404)*(x405)))+(((x410)*(x412)))+(((IkReal(-0.354900000000000))*(x406)))+(((IkReal(-0.354900000000000))*(x404)))+(((IkReal(0.0182200000000000))*(x408)))+(((IkReal(-1.00000000000000))*(x402)*(x410)))+(((IkReal(-0.0182200000000000))*(x411)))+(((IkReal(-0.0136000000000000))*(x402)))+(((IkReal(-1.00000000000000))*(x402)*(x403)))+(((x408)*(x409)))+(((IkReal(-1.00000000000000))*(pz)))+(((IkReal(0.136600000000000))*(IKsin(j12))))+(((IkReal(-1.00000000000000))*(x404)*(x407)))+(((IkReal(0.0136000000000000))*(x412)))+(((IkReal(-0.0136000000000000))*(cj15)*(x411)))+(((IkReal(-1.00000000000000))*(cj15)*(x410)*(x411)))+(((x403)*(x412)))+(((IkReal(-1.00000000000000))*(x409)*(x411)))+(((IkReal(-1.00000000000000))*(cj15)*(x403)*(x411))));
if( IKabs(evalcond[0]) > 0.000001  )
{
continue;
}
}

{
IkReal dummyeval[1];
IkReal gconst1;
gconst1=IKsign(cj12);
dummyeval[0]=cj12;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst0;
gconst0=IKsign(cj12);
dummyeval[0]=cj12;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
dummyeval[0]=cj12;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal evalcond[7];
IkReal x413=((IkReal(0.210000000000000))*(sj14));
IkReal x414=((r22)*(sj15));
IkReal x415=((cj16)*(r20));
IkReal x416=((IkReal(1.00000000000000))*(sj14));
IkReal x417=((IkReal(0.0159000000000000))*(cj14));
IkReal x418=((cj16)*(r21));
IkReal x419=((IkReal(0.210000000000000))*(cj14));
IkReal x420=((cj15)*(r22));
IkReal x421=((cj15)*(cj16));
IkReal x422=((r21)*(sj16));
IkReal x423=((IkReal(0.000500000000000000))*(sj15));
IkReal x424=((IkReal(1.00000000000000))*(cj14));
IkReal x425=((r20)*(sj16));
IkReal x426=((sj16)*(x424));
IkReal x427=((cj15)*(x422));
IkReal x428=((sj14)*(x425));
IkReal x429=((cj15)*(sj14)*(sj16));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(1.57079632679490))+(j12)), IkReal(6.28318530717959))));
evalcond[1]=((((sj15)*(x422)))+(((IkReal(-1.00000000000000))*(sj15)*(x415)))+(x420));
evalcond[2]=((IkReal(-1.00000000000000))+(((IkReal(-1.00000000000000))*(cj15)*(x415)*(x416)))+(((sj14)*(x427)))+(((IkReal(-1.00000000000000))*(x424)*(x425)))+(((IkReal(-1.00000000000000))*(x418)*(x424)))+(((IkReal(-1.00000000000000))*(x414)*(x416))));
evalcond[3]=((((sj14)*(x418)))+(((IkReal(-1.00000000000000))*(cj15)*(x415)*(x424)))+(x428)+(((IkReal(-1.00000000000000))*(x414)*(x424)))+(((cj14)*(x427))));
evalcond[4]=((((IkReal(-1.00000000000000))*(r10)*(x416)*(x421)))+(((IkReal(-1.00000000000000))*(r12)*(sj15)*(x416)))+(((IkReal(-1.00000000000000))*(cj16)*(r11)*(x424)))+(((IkReal(-1.00000000000000))*(r10)*(x426)))+(((r11)*(x429))));
evalcond[5]=((((IkReal(-1.00000000000000))*(r00)*(x416)*(x421)))+(((IkReal(-1.00000000000000))*(r00)*(x426)))+(((r01)*(x429)))+(((IkReal(-1.00000000000000))*(r02)*(sj15)*(x416)))+(((IkReal(-1.00000000000000))*(cj16)*(r01)*(x424))));
evalcond[6]=((IkReal(0.136600000000000))+(((IkReal(-0.354900000000000))*(x425)))+(((IkReal(-1.00000000000000))*(x418)*(x419)))+(((IkReal(0.000500000000000000))*(x420)))+(((IkReal(0.0182200000000000))*(x422)))+(((IkReal(-0.354900000000000))*(x418)))+(((x413)*(x427)))+(((IkReal(-0.0182200000000000))*(x415)))+(((IkReal(-1.00000000000000))*(cj15)*(x415)*(x417)))+(((IkReal(-1.00000000000000))*(cj15)*(x413)*(x415)))+(((IkReal(-0.0136000000000000))*(x414)))+(((IkReal(-1.00000000000000))*(pz)))+(((IkReal(-0.0136000000000000))*(cj15)*(x415)))+(((IkReal(-1.00000000000000))*(x419)*(x425)))+(((IkReal(-1.00000000000000))*(x413)*(x414)))+(((IkReal(-1.00000000000000))*(x414)*(x417)))+(((IkReal(0.0136000000000000))*(x427)))+(((IkReal(0.0159000000000000))*(sj14)*(x418)))+(((IkReal(-1.00000000000000))*(x415)*(x423)))+(((x422)*(x423)))+(((IkReal(0.0159000000000000))*(x428)))+(((x417)*(x427))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  )
{
{
IkReal j11array[1], cj11array[1], sj11array[1];
bool j11valid[1]={false};
_nj11 = 1;
if( IKabs(((((IkReal(0.187954292969370))*(cj16)*(r10)))+(((IkReal(-0.404697667036978))*(cj15)*(r01)*(sj16)))+(((IkReal(2.16632280590382))*(cj14)*(r10)*(sj16)))+(((IkReal(0.140295191239486))*(r12)*(sj15)))+(((IkReal(-0.0148785906998889))*(r01)*(sj15)*(sj16)))+(((IkReal(0.140295191239486))*(cj15)*(cj16)*(r10)))+(((IkReal(-0.164021583875575))*(cj14)*(cj15)*(r11)*(sj16)))+(((IkReal(10.5608236787811))*(r00)*(sj16)))+(((IkReal(-0.473139184256467))*(cj14)*(cj15)*(r01)*(sj16)))+(((IkReal(0.404697667036978))*(cj15)*(cj16)*(r00)))+(((IkReal(2.16632280590382))*(cj15)*(cj16)*(r10)*(sj14)))+(((IkReal(10.5608236787811))*(cj16)*(r01)))+(((IkReal(2.16632280590382))*(r12)*(sj14)*(sj15)))+(((IkReal(-0.00515791144262815))*(r11)*(sj15)*(sj16)))+(((IkReal(3.66108554197746))*(r10)*(sj16)))+(((IkReal(-0.542175845103952))*(r01)*(sj16)))+(((IkReal(-0.164021583875575))*(r10)*(sj14)*(sj16)))+(((IkReal(0.473139184256467))*(cj14)*(cj15)*(cj16)*(r00)))+(((IkReal(-6.24900809395334))*(cj15)*(r01)*(sj14)*(sj16)))+(((IkReal(0.164021583875575))*(cj14)*(cj15)*(cj16)*(r10)))+(((IkReal(-0.140295191239486))*(cj15)*(r11)*(sj16)))+(((IkReal(6.24900809395334))*(cj14)*(r00)*(sj16)))+(((IkReal(0.542175845103952))*(cj16)*(r00)))+(((IkReal(10.3158228852563))*(py)))+(((IkReal(-0.187954292969370))*(r11)*(sj16)))+(((IkReal(-0.00515791144262815))*(cj15)*(r12)))+(((IkReal(-2.16632280590382))*(cj15)*(r11)*(sj14)*(sj16)))+(((IkReal(0.473139184256467))*(cj14)*(r02)*(sj15)))+(((IkReal(0.404697667036978))*(r02)*(sj15)))+(((IkReal(2.16632280590382))*(cj14)*(cj16)*(r11)))+(((IkReal(0.164021583875575))*(cj14)*(r12)*(sj15)))+(((IkReal(0.00515791144262815))*(cj16)*(r10)*(sj15)))+(((IkReal(6.24900809395334))*(r02)*(sj14)*(sj15)))+(((IkReal(-0.473139184256467))*(r00)*(sj14)*(sj16)))+(((IkReal(-0.164021583875575))*(cj16)*(r11)*(sj14)))+(((IkReal(-0.473139184256467))*(cj16)*(r01)*(sj14)))+(((IkReal(0.0148785906998889))*(cj16)*(r00)*(sj15)))+(((IkReal(6.24900809395334))*(cj14)*(cj16)*(r01)))+(((IkReal(3.66108554197746))*(cj16)*(r11)))+(((IkReal(-0.0148785906998889))*(cj15)*(r02)))+(((IkReal(6.24900809395334))*(cj15)*(cj16)*(r00)*(sj14)))+(((IkReal(29.7571813997778))*(px))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((IkReal(3.66108554197746))*(cj16)*(r01)))+(((IkReal(2.16632280590382))*(r02)*(sj14)*(sj15)))+(((IkReal(-6.24900809395334))*(cj15)*(cj16)*(r10)*(sj14)))+(((IkReal(2.16632280590382))*(cj14)*(r00)*(sj16)))+(((IkReal(-0.00515791144262815))*(r01)*(sj15)*(sj16)))+(((IkReal(0.473139184256467))*(cj14)*(cj15)*(r11)*(sj16)))+(((IkReal(-0.542175845103952))*(cj16)*(r10)))+(((IkReal(0.404697667036978))*(cj15)*(r11)*(sj16)))+(((IkReal(0.164021583875575))*(cj14)*(r02)*(sj15)))+(((IkReal(2.16632280590382))*(cj15)*(cj16)*(r00)*(sj14)))+(((IkReal(-6.24900809395334))*(cj14)*(cj16)*(r11)))+(((IkReal(0.473139184256467))*(r10)*(sj14)*(sj16)))+(((IkReal(0.140295191239486))*(cj15)*(cj16)*(r00)))+(((IkReal(0.0148785906998889))*(r11)*(sj15)*(sj16)))+(((IkReal(-0.473139184256467))*(cj14)*(cj15)*(cj16)*(r10)))+(((IkReal(-2.16632280590382))*(cj15)*(r01)*(sj14)*(sj16)))+(((IkReal(3.66108554197746))*(r00)*(sj16)))+(((IkReal(0.164021583875575))*(cj14)*(cj15)*(cj16)*(r00)))+(((IkReal(-10.5608236787811))*(r10)*(sj16)))+(((IkReal(0.0148785906998889))*(cj15)*(r12)))+(((IkReal(0.00515791144262815))*(cj16)*(r00)*(sj15)))+(((IkReal(-6.24900809395334))*(r12)*(sj14)*(sj15)))+(((IkReal(6.24900809395334))*(cj15)*(r11)*(sj14)*(sj16)))+(((IkReal(-0.164021583875575))*(r00)*(sj14)*(sj16)))+(((IkReal(-0.140295191239486))*(cj15)*(r01)*(sj16)))+(((IkReal(-6.24900809395334))*(cj14)*(r10)*(sj16)))+(((IkReal(2.16632280590382))*(cj14)*(cj16)*(r01)))+(((IkReal(10.3158228852563))*(px)))+(((IkReal(-0.00515791144262815))*(cj15)*(r02)))+(((IkReal(-0.404697667036978))*(r12)*(sj15)))+(((IkReal(0.473139184256467))*(cj16)*(r11)*(sj14)))+(((IkReal(-0.404697667036978))*(cj15)*(cj16)*(r10)))+(((IkReal(-0.164021583875575))*(cj16)*(r01)*(sj14)))+(((IkReal(-0.0148785906998889))*(cj16)*(r10)*(sj15)))+(((IkReal(-29.7571813997778))*(py)))+(((IkReal(0.140295191239486))*(r02)*(sj15)))+(((IkReal(-10.5608236787811))*(cj16)*(r11)))+(((IkReal(0.187954292969370))*(cj16)*(r00)))+(((IkReal(0.542175845103952))*(r11)*(sj16)))+(((IkReal(-0.164021583875575))*(cj14)*(cj15)*(r01)*(sj16)))+(((IkReal(-0.187954292969370))*(r01)*(sj16)))+(((IkReal(-0.473139184256467))*(cj14)*(r12)*(sj15))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((IkReal(0.187954292969370))*(cj16)*(r10)))+(((IkReal(-0.404697667036978))*(cj15)*(r01)*(sj16)))+(((IkReal(2.16632280590382))*(cj14)*(r10)*(sj16)))+(((IkReal(0.140295191239486))*(r12)*(sj15)))+(((IkReal(-0.0148785906998889))*(r01)*(sj15)*(sj16)))+(((IkReal(0.140295191239486))*(cj15)*(cj16)*(r10)))+(((IkReal(-0.164021583875575))*(cj14)*(cj15)*(r11)*(sj16)))+(((IkReal(10.5608236787811))*(r00)*(sj16)))+(((IkReal(-0.473139184256467))*(cj14)*(cj15)*(r01)*(sj16)))+(((IkReal(0.404697667036978))*(cj15)*(cj16)*(r00)))+(((IkReal(2.16632280590382))*(cj15)*(cj16)*(r10)*(sj14)))+(((IkReal(10.5608236787811))*(cj16)*(r01)))+(((IkReal(2.16632280590382))*(r12)*(sj14)*(sj15)))+(((IkReal(-0.00515791144262815))*(r11)*(sj15)*(sj16)))+(((IkReal(3.66108554197746))*(r10)*(sj16)))+(((IkReal(-0.542175845103952))*(r01)*(sj16)))+(((IkReal(-0.164021583875575))*(r10)*(sj14)*(sj16)))+(((IkReal(0.473139184256467))*(cj14)*(cj15)*(cj16)*(r00)))+(((IkReal(-6.24900809395334))*(cj15)*(r01)*(sj14)*(sj16)))+(((IkReal(0.164021583875575))*(cj14)*(cj15)*(cj16)*(r10)))+(((IkReal(-0.140295191239486))*(cj15)*(r11)*(sj16)))+(((IkReal(6.24900809395334))*(cj14)*(r00)*(sj16)))+(((IkReal(0.542175845103952))*(cj16)*(r00)))+(((IkReal(10.3158228852563))*(py)))+(((IkReal(-0.187954292969370))*(r11)*(sj16)))+(((IkReal(-0.00515791144262815))*(cj15)*(r12)))+(((IkReal(-2.16632280590382))*(cj15)*(r11)*(sj14)*(sj16)))+(((IkReal(0.473139184256467))*(cj14)*(r02)*(sj15)))+(((IkReal(0.404697667036978))*(r02)*(sj15)))+(((IkReal(2.16632280590382))*(cj14)*(cj16)*(r11)))+(((IkReal(0.164021583875575))*(cj14)*(r12)*(sj15)))+(((IkReal(0.00515791144262815))*(cj16)*(r10)*(sj15)))+(((IkReal(6.24900809395334))*(r02)*(sj14)*(sj15)))+(((IkReal(-0.473139184256467))*(r00)*(sj14)*(sj16)))+(((IkReal(-0.164021583875575))*(cj16)*(r11)*(sj14)))+(((IkReal(-0.473139184256467))*(cj16)*(r01)*(sj14)))+(((IkReal(0.0148785906998889))*(cj16)*(r00)*(sj15)))+(((IkReal(6.24900809395334))*(cj14)*(cj16)*(r01)))+(((IkReal(3.66108554197746))*(cj16)*(r11)))+(((IkReal(-0.0148785906998889))*(cj15)*(r02)))+(((IkReal(6.24900809395334))*(cj15)*(cj16)*(r00)*(sj14)))+(((IkReal(29.7571813997778))*(px)))))+IKsqr(((((IkReal(3.66108554197746))*(cj16)*(r01)))+(((IkReal(2.16632280590382))*(r02)*(sj14)*(sj15)))+(((IkReal(-6.24900809395334))*(cj15)*(cj16)*(r10)*(sj14)))+(((IkReal(2.16632280590382))*(cj14)*(r00)*(sj16)))+(((IkReal(-0.00515791144262815))*(r01)*(sj15)*(sj16)))+(((IkReal(0.473139184256467))*(cj14)*(cj15)*(r11)*(sj16)))+(((IkReal(-0.542175845103952))*(cj16)*(r10)))+(((IkReal(0.404697667036978))*(cj15)*(r11)*(sj16)))+(((IkReal(0.164021583875575))*(cj14)*(r02)*(sj15)))+(((IkReal(2.16632280590382))*(cj15)*(cj16)*(r00)*(sj14)))+(((IkReal(-6.24900809395334))*(cj14)*(cj16)*(r11)))+(((IkReal(0.473139184256467))*(r10)*(sj14)*(sj16)))+(((IkReal(0.140295191239486))*(cj15)*(cj16)*(r00)))+(((IkReal(0.0148785906998889))*(r11)*(sj15)*(sj16)))+(((IkReal(-0.473139184256467))*(cj14)*(cj15)*(cj16)*(r10)))+(((IkReal(-2.16632280590382))*(cj15)*(r01)*(sj14)*(sj16)))+(((IkReal(3.66108554197746))*(r00)*(sj16)))+(((IkReal(0.164021583875575))*(cj14)*(cj15)*(cj16)*(r00)))+(((IkReal(-10.5608236787811))*(r10)*(sj16)))+(((IkReal(0.0148785906998889))*(cj15)*(r12)))+(((IkReal(0.00515791144262815))*(cj16)*(r00)*(sj15)))+(((IkReal(-6.24900809395334))*(r12)*(sj14)*(sj15)))+(((IkReal(6.24900809395334))*(cj15)*(r11)*(sj14)*(sj16)))+(((IkReal(-0.164021583875575))*(r00)*(sj14)*(sj16)))+(((IkReal(-0.140295191239486))*(cj15)*(r01)*(sj16)))+(((IkReal(-6.24900809395334))*(cj14)*(r10)*(sj16)))+(((IkReal(2.16632280590382))*(cj14)*(cj16)*(r01)))+(((IkReal(10.3158228852563))*(px)))+(((IkReal(-0.00515791144262815))*(cj15)*(r02)))+(((IkReal(-0.404697667036978))*(r12)*(sj15)))+(((IkReal(0.473139184256467))*(cj16)*(r11)*(sj14)))+(((IkReal(-0.404697667036978))*(cj15)*(cj16)*(r10)))+(((IkReal(-0.164021583875575))*(cj16)*(r01)*(sj14)))+(((IkReal(-0.0148785906998889))*(cj16)*(r10)*(sj15)))+(((IkReal(-29.7571813997778))*(py)))+(((IkReal(0.140295191239486))*(r02)*(sj15)))+(((IkReal(-10.5608236787811))*(cj16)*(r11)))+(((IkReal(0.187954292969370))*(cj16)*(r00)))+(((IkReal(0.542175845103952))*(r11)*(sj16)))+(((IkReal(-0.164021583875575))*(cj14)*(cj15)*(r01)*(sj16)))+(((IkReal(-0.187954292969370))*(r01)*(sj16)))+(((IkReal(-0.473139184256467))*(cj14)*(r12)*(sj15)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j11array[0]=IKatan2(((((IkReal(0.187954292969370))*(cj16)*(r10)))+(((IkReal(-0.404697667036978))*(cj15)*(r01)*(sj16)))+(((IkReal(2.16632280590382))*(cj14)*(r10)*(sj16)))+(((IkReal(0.140295191239486))*(r12)*(sj15)))+(((IkReal(-0.0148785906998889))*(r01)*(sj15)*(sj16)))+(((IkReal(0.140295191239486))*(cj15)*(cj16)*(r10)))+(((IkReal(-0.164021583875575))*(cj14)*(cj15)*(r11)*(sj16)))+(((IkReal(10.5608236787811))*(r00)*(sj16)))+(((IkReal(-0.473139184256467))*(cj14)*(cj15)*(r01)*(sj16)))+(((IkReal(0.404697667036978))*(cj15)*(cj16)*(r00)))+(((IkReal(2.16632280590382))*(cj15)*(cj16)*(r10)*(sj14)))+(((IkReal(10.5608236787811))*(cj16)*(r01)))+(((IkReal(2.16632280590382))*(r12)*(sj14)*(sj15)))+(((IkReal(-0.00515791144262815))*(r11)*(sj15)*(sj16)))+(((IkReal(3.66108554197746))*(r10)*(sj16)))+(((IkReal(-0.542175845103952))*(r01)*(sj16)))+(((IkReal(-0.164021583875575))*(r10)*(sj14)*(sj16)))+(((IkReal(0.473139184256467))*(cj14)*(cj15)*(cj16)*(r00)))+(((IkReal(-6.24900809395334))*(cj15)*(r01)*(sj14)*(sj16)))+(((IkReal(0.164021583875575))*(cj14)*(cj15)*(cj16)*(r10)))+(((IkReal(-0.140295191239486))*(cj15)*(r11)*(sj16)))+(((IkReal(6.24900809395334))*(cj14)*(r00)*(sj16)))+(((IkReal(0.542175845103952))*(cj16)*(r00)))+(((IkReal(10.3158228852563))*(py)))+(((IkReal(-0.187954292969370))*(r11)*(sj16)))+(((IkReal(-0.00515791144262815))*(cj15)*(r12)))+(((IkReal(-2.16632280590382))*(cj15)*(r11)*(sj14)*(sj16)))+(((IkReal(0.473139184256467))*(cj14)*(r02)*(sj15)))+(((IkReal(0.404697667036978))*(r02)*(sj15)))+(((IkReal(2.16632280590382))*(cj14)*(cj16)*(r11)))+(((IkReal(0.164021583875575))*(cj14)*(r12)*(sj15)))+(((IkReal(0.00515791144262815))*(cj16)*(r10)*(sj15)))+(((IkReal(6.24900809395334))*(r02)*(sj14)*(sj15)))+(((IkReal(-0.473139184256467))*(r00)*(sj14)*(sj16)))+(((IkReal(-0.164021583875575))*(cj16)*(r11)*(sj14)))+(((IkReal(-0.473139184256467))*(cj16)*(r01)*(sj14)))+(((IkReal(0.0148785906998889))*(cj16)*(r00)*(sj15)))+(((IkReal(6.24900809395334))*(cj14)*(cj16)*(r01)))+(((IkReal(3.66108554197746))*(cj16)*(r11)))+(((IkReal(-0.0148785906998889))*(cj15)*(r02)))+(((IkReal(6.24900809395334))*(cj15)*(cj16)*(r00)*(sj14)))+(((IkReal(29.7571813997778))*(px)))), ((((IkReal(3.66108554197746))*(cj16)*(r01)))+(((IkReal(2.16632280590382))*(r02)*(sj14)*(sj15)))+(((IkReal(-6.24900809395334))*(cj15)*(cj16)*(r10)*(sj14)))+(((IkReal(2.16632280590382))*(cj14)*(r00)*(sj16)))+(((IkReal(-0.00515791144262815))*(r01)*(sj15)*(sj16)))+(((IkReal(0.473139184256467))*(cj14)*(cj15)*(r11)*(sj16)))+(((IkReal(-0.542175845103952))*(cj16)*(r10)))+(((IkReal(0.404697667036978))*(cj15)*(r11)*(sj16)))+(((IkReal(0.164021583875575))*(cj14)*(r02)*(sj15)))+(((IkReal(2.16632280590382))*(cj15)*(cj16)*(r00)*(sj14)))+(((IkReal(-6.24900809395334))*(cj14)*(cj16)*(r11)))+(((IkReal(0.473139184256467))*(r10)*(sj14)*(sj16)))+(((IkReal(0.140295191239486))*(cj15)*(cj16)*(r00)))+(((IkReal(0.0148785906998889))*(r11)*(sj15)*(sj16)))+(((IkReal(-0.473139184256467))*(cj14)*(cj15)*(cj16)*(r10)))+(((IkReal(-2.16632280590382))*(cj15)*(r01)*(sj14)*(sj16)))+(((IkReal(3.66108554197746))*(r00)*(sj16)))+(((IkReal(0.164021583875575))*(cj14)*(cj15)*(cj16)*(r00)))+(((IkReal(-10.5608236787811))*(r10)*(sj16)))+(((IkReal(0.0148785906998889))*(cj15)*(r12)))+(((IkReal(0.00515791144262815))*(cj16)*(r00)*(sj15)))+(((IkReal(-6.24900809395334))*(r12)*(sj14)*(sj15)))+(((IkReal(6.24900809395334))*(cj15)*(r11)*(sj14)*(sj16)))+(((IkReal(-0.164021583875575))*(r00)*(sj14)*(sj16)))+(((IkReal(-0.140295191239486))*(cj15)*(r01)*(sj16)))+(((IkReal(-6.24900809395334))*(cj14)*(r10)*(sj16)))+(((IkReal(2.16632280590382))*(cj14)*(cj16)*(r01)))+(((IkReal(10.3158228852563))*(px)))+(((IkReal(-0.00515791144262815))*(cj15)*(r02)))+(((IkReal(-0.404697667036978))*(r12)*(sj15)))+(((IkReal(0.473139184256467))*(cj16)*(r11)*(sj14)))+(((IkReal(-0.404697667036978))*(cj15)*(cj16)*(r10)))+(((IkReal(-0.164021583875575))*(cj16)*(r01)*(sj14)))+(((IkReal(-0.0148785906998889))*(cj16)*(r10)*(sj15)))+(((IkReal(-29.7571813997778))*(py)))+(((IkReal(0.140295191239486))*(r02)*(sj15)))+(((IkReal(-10.5608236787811))*(cj16)*(r11)))+(((IkReal(0.187954292969370))*(cj16)*(r00)))+(((IkReal(0.542175845103952))*(r11)*(sj16)))+(((IkReal(-0.164021583875575))*(cj14)*(cj15)*(r01)*(sj16)))+(((IkReal(-0.187954292969370))*(r01)*(sj16)))+(((IkReal(-0.473139184256467))*(cj14)*(r12)*(sj15)))));
sj11array[0]=IKsin(j11array[0]);
cj11array[0]=IKcos(j11array[0]);
if( j11array[0] > IKPI )
{
    j11array[0]-=IK2PI;
}
else if( j11array[0] < -IKPI )
{    j11array[0]+=IK2PI;
}
j11valid[0] = true;
for(int ij11 = 0; ij11 < 1; ++ij11)
{
if( !j11valid[ij11] )
{
    continue;
}
_ij11[0] = ij11; _ij11[1] = -1;
for(int iij11 = ij11+1; iij11 < 1; ++iij11)
{
if( j11valid[iij11] && IKabs(cj11array[ij11]-cj11array[iij11]) < IKFAST_SOLUTION_THRESH && IKabs(sj11array[ij11]-sj11array[iij11]) < IKFAST_SOLUTION_THRESH )
{
    j11valid[iij11]=false; _ij11[1] = iij11; break; 
}
}
j11 = j11array[ij11]; cj11 = cj11array[ij11]; sj11 = sj11array[ij11];
{
IkReal evalcond[2];
IkReal x430=IKsin(j11);
IkReal x431=IKcos(j11);
IkReal x432=((r11)*(sj16));
IkReal x433=((cj16)*(r00));
IkReal x434=((IkReal(0.000500000000000000))*(sj15));
IkReal x435=((cj16)*(r11));
IkReal x436=((IkReal(0.0159000000000000))*(sj14));
IkReal x437=((r01)*(sj16));
IkReal x438=((IkReal(0.0136000000000000))*(sj15));
IkReal x439=((IkReal(0.000500000000000000))*(cj15));
IkReal x440=((IkReal(0.210000000000000))*(cj14));
IkReal x441=((IkReal(0.210000000000000))*(sj14));
IkReal x442=((r10)*(sj16));
IkReal x443=((cj16)*(r01));
IkReal x444=((r00)*(sj16));
IkReal x445=((IkReal(0.0136000000000000))*(cj15));
IkReal x446=((cj16)*(r10));
IkReal x447=((sj15)*(x441));
IkReal x448=((IkReal(0.0159000000000000))*(cj14)*(cj15));
IkReal x449=((cj15)*(x446));
IkReal x450=((IkReal(0.0159000000000000))*(cj14)*(sj15));
evalcond[0]=((((IkReal(0.0182200000000000))*(x437)))+(((IkReal(-1.00000000000000))*(x433)*(x434)))+(((IkReal(-0.354900000000000))*(x443)))+(((IkReal(-0.354900000000000))*(x444)))+(((IkReal(-1.00000000000000))*(x433)*(x448)))+(((IkReal(-1.00000000000000))*(x433)*(x445)))+(((IkReal(0.0300000000000000))*(x430)))+(((x434)*(x437)))+(((IkReal(0.0104000000000000))*(x431)))+(((r02)*(x439)))+(((IkReal(-1.00000000000000))*(cj15)*(x433)*(x441)))+(((IkReal(-0.0182200000000000))*(x433)))+(((IkReal(-1.00000000000000))*(px)))+(((IkReal(-1.00000000000000))*(r02)*(x447)))+(((IkReal(-1.00000000000000))*(r02)*(x438)))+(((IkReal(-1.00000000000000))*(r02)*(x450)))+(((IkReal(-1.00000000000000))*(x440)*(x444)))+(((IkReal(-1.00000000000000))*(x440)*(x443)))+(((x437)*(x448)))+(((x437)*(x445)))+(((x436)*(x444)))+(((x436)*(x443)))+(((cj15)*(x437)*(x441))));
evalcond[1]=((((r12)*(x439)))+(((IkReal(0.0182200000000000))*(x432)))+(((IkReal(-0.354900000000000))*(x442)))+(((IkReal(-1.00000000000000))*(r12)*(x438)))+(((IkReal(-1.00000000000000))*(x445)*(x446)))+(((IkReal(-0.354900000000000))*(x435)))+(((IkReal(-1.00000000000000))*(x435)*(x440)))+(((IkReal(0.0104000000000000))*(x430)))+(((IkReal(-1.00000000000000))*(r12)*(x447)))+(((IkReal(-0.0182200000000000))*(x446)))+(((IkReal(-1.00000000000000))*(x434)*(x446)))+(((IkReal(-1.00000000000000))*(py)))+(((IkReal(-1.00000000000000))*(r12)*(x450)))+(((cj15)*(x432)*(x441)))+(((IkReal(-0.0300000000000000))*(x431)))+(((IkReal(-1.00000000000000))*(x440)*(x442)))+(((x432)*(x434)))+(((IkReal(-1.00000000000000))*(x441)*(x449)))+(((x436)*(x442)))+(((IkReal(-1.00000000000000))*(x446)*(x448)))+(((x432)*(x448)))+(((x432)*(x445)))+(((x435)*(x436))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

{
IkReal dummyeval[1];
IkReal gconst14;
gconst14=IKsign((((sj11)*(sj11))+((cj11)*(cj11))));
dummyeval[0]=(((sj11)*(sj11))+((cj11)*(cj11)));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst15;
gconst15=IKsign((((sj11)*(sj11))+((cj11)*(cj11))));
dummyeval[0]=(((sj11)*(sj11))+((cj11)*(cj11)));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j13array[1], cj13array[1], sj13array[1];
bool j13valid[1]={false};
_nj13 = 1;
IkReal x451=((IkReal(1.00000000000000))*(cj15));
IkReal x452=((IkReal(1.00000000000000))*(sj14));
IkReal x453=((sj11)*(sj16));
IkReal x454=((cj16)*(r01));
IkReal x455=((cj11)*(cj15));
IkReal x456=((IkReal(1.00000000000000))*(sj15));
IkReal x457=((cj16)*(r00));
IkReal x458=((cj11)*(r01)*(sj16));
IkReal x459=((cj14)*(r02)*(sj15));
IkReal x460=((sj11)*(x457));
if( IKabs(((gconst15)*(((((IkReal(-1.00000000000000))*(cj14)*(r01)*(x451)*(x453)))+(((cj14)*(cj15)*(x460)))+(((IkReal(-1.00000000000000))*(cj11)*(x456)*(x457)))+(((sj15)*(x458)))+(((IkReal(-1.00000000000000))*(sj11)*(x452)*(x454)))+(((sj11)*(x459)))+(((r02)*(x455)))+(((IkReal(-1.00000000000000))*(r00)*(x452)*(x453))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst15)*(((((IkReal(-1.00000000000000))*(cj11)*(r00)*(sj16)*(x452)))+(((cj11)*(x459)))+(((sj15)*(x460)))+(((IkReal(-1.00000000000000))*(r01)*(x453)*(x456)))+(((IkReal(-1.00000000000000))*(cj14)*(x451)*(x458)))+(((IkReal(-1.00000000000000))*(cj11)*(x452)*(x454)))+(((cj14)*(x455)*(x457)))+(((IkReal(-1.00000000000000))*(r02)*(sj11)*(x451))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j13array[0]=IKatan2(((gconst15)*(((((IkReal(-1.00000000000000))*(cj14)*(r01)*(x451)*(x453)))+(((cj14)*(cj15)*(x460)))+(((IkReal(-1.00000000000000))*(cj11)*(x456)*(x457)))+(((sj15)*(x458)))+(((IkReal(-1.00000000000000))*(sj11)*(x452)*(x454)))+(((sj11)*(x459)))+(((r02)*(x455)))+(((IkReal(-1.00000000000000))*(r00)*(x452)*(x453)))))), ((gconst15)*(((((IkReal(-1.00000000000000))*(cj11)*(r00)*(sj16)*(x452)))+(((cj11)*(x459)))+(((sj15)*(x460)))+(((IkReal(-1.00000000000000))*(r01)*(x453)*(x456)))+(((IkReal(-1.00000000000000))*(cj14)*(x451)*(x458)))+(((IkReal(-1.00000000000000))*(cj11)*(x452)*(x454)))+(((cj14)*(x455)*(x457)))+(((IkReal(-1.00000000000000))*(r02)*(sj11)*(x451)))))));
sj13array[0]=IKsin(j13array[0]);
cj13array[0]=IKcos(j13array[0]);
if( j13array[0] > IKPI )
{
    j13array[0]-=IK2PI;
}
else if( j13array[0] < -IKPI )
{    j13array[0]+=IK2PI;
}
j13valid[0] = true;
for(int ij13 = 0; ij13 < 1; ++ij13)
{
if( !j13valid[ij13] )
{
    continue;
}
_ij13[0] = ij13; _ij13[1] = -1;
for(int iij13 = ij13+1; iij13 < 1; ++iij13)
{
if( j13valid[iij13] && IKabs(cj13array[ij13]-cj13array[iij13]) < IKFAST_SOLUTION_THRESH && IKabs(sj13array[ij13]-sj13array[iij13]) < IKFAST_SOLUTION_THRESH )
{
    j13valid[iij13]=false; _ij13[1] = iij13; break; 
}
}
j13 = j13array[ij13]; cj13 = cj13array[ij13]; sj13 = sj13array[ij13];
{
IkReal evalcond[4];
IkReal x461=IKcos(j13);
IkReal x462=IKsin(j13);
IkReal x463=((IkReal(1.00000000000000))*(cj14));
IkReal x464=((sj14)*(sj16));
IkReal x465=((IkReal(1.00000000000000))*(cj11));
IkReal x466=((cj15)*(cj16));
IkReal x467=((r11)*(sj16));
IkReal x468=((cj14)*(cj15));
IkReal x469=((cj16)*(sj14));
IkReal x470=((r01)*(sj16));
IkReal x471=((sj11)*(x461));
IkReal x472=((sj11)*(x462));
IkReal x473=((IkReal(1.00000000000000))*(cj16)*(sj15));
IkReal x474=((x462)*(x465));
evalcond[0]=((((cj15)*(r02)))+(((sj15)*(x470)))+(((IkReal(-1.00000000000000))*(r00)*(x473)))+(((IkReal(-1.00000000000000))*(x474)))+(x471));
evalcond[1]=((((cj15)*(r12)))+(((sj15)*(x467)))+(((IkReal(-1.00000000000000))*(x472)))+(((IkReal(-1.00000000000000))*(x461)*(x465)))+(((IkReal(-1.00000000000000))*(r10)*(x473))));
evalcond[2]=((((cj11)*(x461)))+(((IkReal(-1.00000000000000))*(r00)*(x463)*(x466)))+(x472)+(((r01)*(x469)))+(((r00)*(x464)))+(((x468)*(x470)))+(((IkReal(-1.00000000000000))*(r02)*(sj15)*(x463))));
evalcond[3]=((((IkReal(-1.00000000000000))*(r10)*(x463)*(x466)))+(((IkReal(-1.00000000000000))*(x474)))+(x471)+(((x467)*(x468)))+(((r11)*(x469)))+(((IkReal(-1.00000000000000))*(r12)*(sj15)*(x463)))+(((r10)*(x464))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j11;
vinfos[0].indices[0] = _ij11[0];
vinfos[0].indices[1] = _ij11[1];
vinfos[0].maxsolutions = _nj11;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j12;
vinfos[1].indices[0] = _ij12[0];
vinfos[1].indices[1] = _ij12[1];
vinfos[1].maxsolutions = _nj12;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j13;
vinfos[2].indices[0] = _ij13[0];
vinfos[2].indices[1] = _ij13[1];
vinfos[2].maxsolutions = _nj13;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j14;
vinfos[3].indices[0] = _ij14[0];
vinfos[3].indices[1] = _ij14[1];
vinfos[3].maxsolutions = _nj14;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j15;
vinfos[4].indices[0] = _ij15[0];
vinfos[4].indices[1] = _ij15[1];
vinfos[4].maxsolutions = _nj15;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j16;
vinfos[5].indices[0] = _ij16[0];
vinfos[5].indices[1] = _ij16[1];
vinfos[5].maxsolutions = _nj16;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j13array[1], cj13array[1], sj13array[1];
bool j13valid[1]={false};
_nj13 = 1;
IkReal x475=((cj15)*(sj11));
IkReal x476=((cj11)*(cj15));
IkReal x477=((sj11)*(sj15));
IkReal x478=((cj16)*(r00));
IkReal x479=((r01)*(sj16));
IkReal x480=((cj11)*(sj15));
IkReal x481=((r11)*(sj16));
IkReal x482=((IkReal(1.00000000000000))*(cj16)*(r10));
if( IKabs(((gconst14)*(((((IkReal(-1.00000000000000))*(x478)*(x480)))+(((r02)*(x476)))+(((IkReal(-1.00000000000000))*(x477)*(x482)))+(((r12)*(x475)))+(((x479)*(x480)))+(((x477)*(x481))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst14)*(((((IkReal(-1.00000000000000))*(x477)*(x479)))+(((IkReal(-1.00000000000000))*(r02)*(x475)))+(((x480)*(x481)))+(((IkReal(-1.00000000000000))*(x480)*(x482)))+(((r12)*(x476)))+(((x477)*(x478))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j13array[0]=IKatan2(((gconst14)*(((((IkReal(-1.00000000000000))*(x478)*(x480)))+(((r02)*(x476)))+(((IkReal(-1.00000000000000))*(x477)*(x482)))+(((r12)*(x475)))+(((x479)*(x480)))+(((x477)*(x481)))))), ((gconst14)*(((((IkReal(-1.00000000000000))*(x477)*(x479)))+(((IkReal(-1.00000000000000))*(r02)*(x475)))+(((x480)*(x481)))+(((IkReal(-1.00000000000000))*(x480)*(x482)))+(((r12)*(x476)))+(((x477)*(x478)))))));
sj13array[0]=IKsin(j13array[0]);
cj13array[0]=IKcos(j13array[0]);
if( j13array[0] > IKPI )
{
    j13array[0]-=IK2PI;
}
else if( j13array[0] < -IKPI )
{    j13array[0]+=IK2PI;
}
j13valid[0] = true;
for(int ij13 = 0; ij13 < 1; ++ij13)
{
if( !j13valid[ij13] )
{
    continue;
}
_ij13[0] = ij13; _ij13[1] = -1;
for(int iij13 = ij13+1; iij13 < 1; ++iij13)
{
if( j13valid[iij13] && IKabs(cj13array[ij13]-cj13array[iij13]) < IKFAST_SOLUTION_THRESH && IKabs(sj13array[ij13]-sj13array[iij13]) < IKFAST_SOLUTION_THRESH )
{
    j13valid[iij13]=false; _ij13[1] = iij13; break; 
}
}
j13 = j13array[ij13]; cj13 = cj13array[ij13]; sj13 = sj13array[ij13];
{
IkReal evalcond[4];
IkReal x483=IKcos(j13);
IkReal x484=IKsin(j13);
IkReal x485=((IkReal(1.00000000000000))*(cj14));
IkReal x486=((sj14)*(sj16));
IkReal x487=((IkReal(1.00000000000000))*(cj11));
IkReal x488=((cj15)*(cj16));
IkReal x489=((r11)*(sj16));
IkReal x490=((cj14)*(cj15));
IkReal x491=((cj16)*(sj14));
IkReal x492=((r01)*(sj16));
IkReal x493=((sj11)*(x483));
IkReal x494=((sj11)*(x484));
IkReal x495=((IkReal(1.00000000000000))*(cj16)*(sj15));
IkReal x496=((x484)*(x487));
evalcond[0]=((((IkReal(-1.00000000000000))*(r00)*(x495)))+(((cj15)*(r02)))+(((IkReal(-1.00000000000000))*(x496)))+(x493)+(((sj15)*(x492))));
evalcond[1]=((((IkReal(-1.00000000000000))*(r10)*(x495)))+(((cj15)*(r12)))+(((IkReal(-1.00000000000000))*(x483)*(x487)))+(((IkReal(-1.00000000000000))*(x494)))+(((sj15)*(x489))));
evalcond[2]=((((x490)*(x492)))+(x494)+(((cj11)*(x483)))+(((r00)*(x486)))+(((IkReal(-1.00000000000000))*(r02)*(sj15)*(x485)))+(((r01)*(x491)))+(((IkReal(-1.00000000000000))*(r00)*(x485)*(x488))));
evalcond[3]=((((IkReal(-1.00000000000000))*(x496)))+(((x489)*(x490)))+(((r11)*(x491)))+(((r10)*(x486)))+(((IkReal(-1.00000000000000))*(r10)*(x485)*(x488)))+(x493)+(((IkReal(-1.00000000000000))*(r12)*(sj15)*(x485))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j11;
vinfos[0].indices[0] = _ij11[0];
vinfos[0].indices[1] = _ij11[1];
vinfos[0].maxsolutions = _nj11;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j12;
vinfos[1].indices[0] = _ij12[0];
vinfos[1].indices[1] = _ij12[1];
vinfos[1].maxsolutions = _nj12;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j13;
vinfos[2].indices[0] = _ij13[0];
vinfos[2].indices[1] = _ij13[1];
vinfos[2].maxsolutions = _nj13;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j14;
vinfos[3].indices[0] = _ij14[0];
vinfos[3].indices[1] = _ij14[1];
vinfos[3].maxsolutions = _nj14;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j15;
vinfos[4].indices[0] = _ij15[0];
vinfos[4].indices[1] = _ij15[1];
vinfos[4].maxsolutions = _nj15;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j16;
vinfos[5].indices[0] = _ij16[0];
vinfos[5].indices[1] = _ij16[1];
vinfos[5].maxsolutions = _nj16;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
}
}

} else
{
IkReal x497=((IkReal(0.210000000000000))*(sj14));
IkReal x498=((r22)*(sj15));
IkReal x499=((cj16)*(r20));
IkReal x500=((IkReal(1.00000000000000))*(sj14));
IkReal x501=((IkReal(0.0159000000000000))*(cj14));
IkReal x502=((cj16)*(r21));
IkReal x503=((IkReal(0.210000000000000))*(cj14));
IkReal x504=((cj15)*(r22));
IkReal x505=((cj15)*(cj16));
IkReal x506=((r21)*(sj16));
IkReal x507=((IkReal(0.000500000000000000))*(sj15));
IkReal x508=((IkReal(1.00000000000000))*(cj14));
IkReal x509=((r20)*(sj16));
IkReal x510=((sj16)*(x508));
IkReal x511=((cj15)*(x506));
IkReal x512=((sj14)*(x509));
IkReal x513=((cj15)*(sj14)*(sj16));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(4.71238898038469))+(j12)), IkReal(6.28318530717959))));
evalcond[1]=((((sj15)*(x506)))+(x504)+(((IkReal(-1.00000000000000))*(sj15)*(x499))));
evalcond[2]=((IkReal(1.00000000000000))+(((IkReal(-1.00000000000000))*(cj15)*(x499)*(x500)))+(((IkReal(-1.00000000000000))*(x508)*(x509)))+(((sj14)*(x511)))+(((IkReal(-1.00000000000000))*(x502)*(x508)))+(((IkReal(-1.00000000000000))*(x498)*(x500))));
evalcond[3]=((((cj14)*(x511)))+(((IkReal(-1.00000000000000))*(cj15)*(x499)*(x508)))+(x512)+(((IkReal(-1.00000000000000))*(x498)*(x508)))+(((sj14)*(x502))));
evalcond[4]=((((r11)*(x513)))+(((IkReal(-1.00000000000000))*(cj16)*(r11)*(x508)))+(((IkReal(-1.00000000000000))*(r12)*(sj15)*(x500)))+(((IkReal(-1.00000000000000))*(r10)*(x500)*(x505)))+(((IkReal(-1.00000000000000))*(r10)*(x510))));
evalcond[5]=((((r01)*(x513)))+(((IkReal(-1.00000000000000))*(r00)*(x500)*(x505)))+(((IkReal(-1.00000000000000))*(r00)*(x510)))+(((IkReal(-1.00000000000000))*(r02)*(sj15)*(x500)))+(((IkReal(-1.00000000000000))*(cj16)*(r01)*(x508))));
evalcond[6]=((IkReal(-0.136600000000000))+(((IkReal(-1.00000000000000))*(cj15)*(x497)*(x499)))+(((IkReal(-1.00000000000000))*(x499)*(x507)))+(((x501)*(x511)))+(((IkReal(0.0182200000000000))*(x506)))+(((IkReal(-1.00000000000000))*(cj15)*(x499)*(x501)))+(((IkReal(0.0159000000000000))*(sj14)*(x502)))+(((x506)*(x507)))+(((IkReal(-1.00000000000000))*(x497)*(x498)))+(((IkReal(-1.00000000000000))*(x502)*(x503)))+(((IkReal(-1.00000000000000))*(x503)*(x509)))+(((IkReal(-1.00000000000000))*(pz)))+(((IkReal(0.0159000000000000))*(x512)))+(((x497)*(x511)))+(((IkReal(-0.0182200000000000))*(x499)))+(((IkReal(-0.0136000000000000))*(cj15)*(x499)))+(((IkReal(-0.354900000000000))*(x502)))+(((IkReal(-0.354900000000000))*(x509)))+(((IkReal(0.0136000000000000))*(x511)))+(((IkReal(-1.00000000000000))*(x498)*(x501)))+(((IkReal(-0.0136000000000000))*(x498)))+(((IkReal(0.000500000000000000))*(x504))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  )
{
{
IkReal j11array[1], cj11array[1], sj11array[1];
bool j11valid[1]={false};
_nj11 = 1;
if( IKabs(((((IkReal(0.187954292969370))*(cj16)*(r10)))+(((IkReal(-0.404697667036978))*(cj15)*(r01)*(sj16)))+(((IkReal(2.16632280590382))*(cj14)*(r10)*(sj16)))+(((IkReal(0.140295191239486))*(r12)*(sj15)))+(((IkReal(-0.0148785906998889))*(r01)*(sj15)*(sj16)))+(((IkReal(0.140295191239486))*(cj15)*(cj16)*(r10)))+(((IkReal(-0.164021583875575))*(cj14)*(cj15)*(r11)*(sj16)))+(((IkReal(10.5608236787811))*(r00)*(sj16)))+(((IkReal(-0.473139184256467))*(cj14)*(cj15)*(r01)*(sj16)))+(((IkReal(0.404697667036978))*(cj15)*(cj16)*(r00)))+(((IkReal(2.16632280590382))*(cj15)*(cj16)*(r10)*(sj14)))+(((IkReal(10.5608236787811))*(cj16)*(r01)))+(((IkReal(2.16632280590382))*(r12)*(sj14)*(sj15)))+(((IkReal(-0.00515791144262815))*(r11)*(sj15)*(sj16)))+(((IkReal(3.66108554197746))*(r10)*(sj16)))+(((IkReal(-0.542175845103952))*(r01)*(sj16)))+(((IkReal(-0.164021583875575))*(r10)*(sj14)*(sj16)))+(((IkReal(0.473139184256467))*(cj14)*(cj15)*(cj16)*(r00)))+(((IkReal(-6.24900809395334))*(cj15)*(r01)*(sj14)*(sj16)))+(((IkReal(0.164021583875575))*(cj14)*(cj15)*(cj16)*(r10)))+(((IkReal(-0.140295191239486))*(cj15)*(r11)*(sj16)))+(((IkReal(6.24900809395334))*(cj14)*(r00)*(sj16)))+(((IkReal(0.542175845103952))*(cj16)*(r00)))+(((IkReal(10.3158228852563))*(py)))+(((IkReal(-0.187954292969370))*(r11)*(sj16)))+(((IkReal(-0.00515791144262815))*(cj15)*(r12)))+(((IkReal(-2.16632280590382))*(cj15)*(r11)*(sj14)*(sj16)))+(((IkReal(0.473139184256467))*(cj14)*(r02)*(sj15)))+(((IkReal(0.404697667036978))*(r02)*(sj15)))+(((IkReal(2.16632280590382))*(cj14)*(cj16)*(r11)))+(((IkReal(0.164021583875575))*(cj14)*(r12)*(sj15)))+(((IkReal(0.00515791144262815))*(cj16)*(r10)*(sj15)))+(((IkReal(6.24900809395334))*(r02)*(sj14)*(sj15)))+(((IkReal(-0.473139184256467))*(r00)*(sj14)*(sj16)))+(((IkReal(-0.164021583875575))*(cj16)*(r11)*(sj14)))+(((IkReal(-0.473139184256467))*(cj16)*(r01)*(sj14)))+(((IkReal(0.0148785906998889))*(cj16)*(r00)*(sj15)))+(((IkReal(6.24900809395334))*(cj14)*(cj16)*(r01)))+(((IkReal(3.66108554197746))*(cj16)*(r11)))+(((IkReal(-0.0148785906998889))*(cj15)*(r02)))+(((IkReal(6.24900809395334))*(cj15)*(cj16)*(r00)*(sj14)))+(((IkReal(29.7571813997778))*(px))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((IkReal(3.66108554197746))*(cj16)*(r01)))+(((IkReal(2.16632280590382))*(r02)*(sj14)*(sj15)))+(((IkReal(-6.24900809395334))*(cj15)*(cj16)*(r10)*(sj14)))+(((IkReal(2.16632280590382))*(cj14)*(r00)*(sj16)))+(((IkReal(-0.00515791144262815))*(r01)*(sj15)*(sj16)))+(((IkReal(0.473139184256467))*(cj14)*(cj15)*(r11)*(sj16)))+(((IkReal(-0.542175845103952))*(cj16)*(r10)))+(((IkReal(0.404697667036978))*(cj15)*(r11)*(sj16)))+(((IkReal(0.164021583875575))*(cj14)*(r02)*(sj15)))+(((IkReal(2.16632280590382))*(cj15)*(cj16)*(r00)*(sj14)))+(((IkReal(-6.24900809395334))*(cj14)*(cj16)*(r11)))+(((IkReal(0.473139184256467))*(r10)*(sj14)*(sj16)))+(((IkReal(0.140295191239486))*(cj15)*(cj16)*(r00)))+(((IkReal(0.0148785906998889))*(r11)*(sj15)*(sj16)))+(((IkReal(-0.473139184256467))*(cj14)*(cj15)*(cj16)*(r10)))+(((IkReal(-2.16632280590382))*(cj15)*(r01)*(sj14)*(sj16)))+(((IkReal(3.66108554197746))*(r00)*(sj16)))+(((IkReal(0.164021583875575))*(cj14)*(cj15)*(cj16)*(r00)))+(((IkReal(-10.5608236787811))*(r10)*(sj16)))+(((IkReal(0.0148785906998889))*(cj15)*(r12)))+(((IkReal(0.00515791144262815))*(cj16)*(r00)*(sj15)))+(((IkReal(-6.24900809395334))*(r12)*(sj14)*(sj15)))+(((IkReal(6.24900809395334))*(cj15)*(r11)*(sj14)*(sj16)))+(((IkReal(-0.164021583875575))*(r00)*(sj14)*(sj16)))+(((IkReal(-0.140295191239486))*(cj15)*(r01)*(sj16)))+(((IkReal(-6.24900809395334))*(cj14)*(r10)*(sj16)))+(((IkReal(2.16632280590382))*(cj14)*(cj16)*(r01)))+(((IkReal(10.3158228852563))*(px)))+(((IkReal(-0.00515791144262815))*(cj15)*(r02)))+(((IkReal(-0.404697667036978))*(r12)*(sj15)))+(((IkReal(0.473139184256467))*(cj16)*(r11)*(sj14)))+(((IkReal(-0.404697667036978))*(cj15)*(cj16)*(r10)))+(((IkReal(-0.164021583875575))*(cj16)*(r01)*(sj14)))+(((IkReal(-0.0148785906998889))*(cj16)*(r10)*(sj15)))+(((IkReal(-29.7571813997778))*(py)))+(((IkReal(0.140295191239486))*(r02)*(sj15)))+(((IkReal(-10.5608236787811))*(cj16)*(r11)))+(((IkReal(0.187954292969370))*(cj16)*(r00)))+(((IkReal(0.542175845103952))*(r11)*(sj16)))+(((IkReal(-0.164021583875575))*(cj14)*(cj15)*(r01)*(sj16)))+(((IkReal(-0.187954292969370))*(r01)*(sj16)))+(((IkReal(-0.473139184256467))*(cj14)*(r12)*(sj15))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((IkReal(0.187954292969370))*(cj16)*(r10)))+(((IkReal(-0.404697667036978))*(cj15)*(r01)*(sj16)))+(((IkReal(2.16632280590382))*(cj14)*(r10)*(sj16)))+(((IkReal(0.140295191239486))*(r12)*(sj15)))+(((IkReal(-0.0148785906998889))*(r01)*(sj15)*(sj16)))+(((IkReal(0.140295191239486))*(cj15)*(cj16)*(r10)))+(((IkReal(-0.164021583875575))*(cj14)*(cj15)*(r11)*(sj16)))+(((IkReal(10.5608236787811))*(r00)*(sj16)))+(((IkReal(-0.473139184256467))*(cj14)*(cj15)*(r01)*(sj16)))+(((IkReal(0.404697667036978))*(cj15)*(cj16)*(r00)))+(((IkReal(2.16632280590382))*(cj15)*(cj16)*(r10)*(sj14)))+(((IkReal(10.5608236787811))*(cj16)*(r01)))+(((IkReal(2.16632280590382))*(r12)*(sj14)*(sj15)))+(((IkReal(-0.00515791144262815))*(r11)*(sj15)*(sj16)))+(((IkReal(3.66108554197746))*(r10)*(sj16)))+(((IkReal(-0.542175845103952))*(r01)*(sj16)))+(((IkReal(-0.164021583875575))*(r10)*(sj14)*(sj16)))+(((IkReal(0.473139184256467))*(cj14)*(cj15)*(cj16)*(r00)))+(((IkReal(-6.24900809395334))*(cj15)*(r01)*(sj14)*(sj16)))+(((IkReal(0.164021583875575))*(cj14)*(cj15)*(cj16)*(r10)))+(((IkReal(-0.140295191239486))*(cj15)*(r11)*(sj16)))+(((IkReal(6.24900809395334))*(cj14)*(r00)*(sj16)))+(((IkReal(0.542175845103952))*(cj16)*(r00)))+(((IkReal(10.3158228852563))*(py)))+(((IkReal(-0.187954292969370))*(r11)*(sj16)))+(((IkReal(-0.00515791144262815))*(cj15)*(r12)))+(((IkReal(-2.16632280590382))*(cj15)*(r11)*(sj14)*(sj16)))+(((IkReal(0.473139184256467))*(cj14)*(r02)*(sj15)))+(((IkReal(0.404697667036978))*(r02)*(sj15)))+(((IkReal(2.16632280590382))*(cj14)*(cj16)*(r11)))+(((IkReal(0.164021583875575))*(cj14)*(r12)*(sj15)))+(((IkReal(0.00515791144262815))*(cj16)*(r10)*(sj15)))+(((IkReal(6.24900809395334))*(r02)*(sj14)*(sj15)))+(((IkReal(-0.473139184256467))*(r00)*(sj14)*(sj16)))+(((IkReal(-0.164021583875575))*(cj16)*(r11)*(sj14)))+(((IkReal(-0.473139184256467))*(cj16)*(r01)*(sj14)))+(((IkReal(0.0148785906998889))*(cj16)*(r00)*(sj15)))+(((IkReal(6.24900809395334))*(cj14)*(cj16)*(r01)))+(((IkReal(3.66108554197746))*(cj16)*(r11)))+(((IkReal(-0.0148785906998889))*(cj15)*(r02)))+(((IkReal(6.24900809395334))*(cj15)*(cj16)*(r00)*(sj14)))+(((IkReal(29.7571813997778))*(px)))))+IKsqr(((((IkReal(3.66108554197746))*(cj16)*(r01)))+(((IkReal(2.16632280590382))*(r02)*(sj14)*(sj15)))+(((IkReal(-6.24900809395334))*(cj15)*(cj16)*(r10)*(sj14)))+(((IkReal(2.16632280590382))*(cj14)*(r00)*(sj16)))+(((IkReal(-0.00515791144262815))*(r01)*(sj15)*(sj16)))+(((IkReal(0.473139184256467))*(cj14)*(cj15)*(r11)*(sj16)))+(((IkReal(-0.542175845103952))*(cj16)*(r10)))+(((IkReal(0.404697667036978))*(cj15)*(r11)*(sj16)))+(((IkReal(0.164021583875575))*(cj14)*(r02)*(sj15)))+(((IkReal(2.16632280590382))*(cj15)*(cj16)*(r00)*(sj14)))+(((IkReal(-6.24900809395334))*(cj14)*(cj16)*(r11)))+(((IkReal(0.473139184256467))*(r10)*(sj14)*(sj16)))+(((IkReal(0.140295191239486))*(cj15)*(cj16)*(r00)))+(((IkReal(0.0148785906998889))*(r11)*(sj15)*(sj16)))+(((IkReal(-0.473139184256467))*(cj14)*(cj15)*(cj16)*(r10)))+(((IkReal(-2.16632280590382))*(cj15)*(r01)*(sj14)*(sj16)))+(((IkReal(3.66108554197746))*(r00)*(sj16)))+(((IkReal(0.164021583875575))*(cj14)*(cj15)*(cj16)*(r00)))+(((IkReal(-10.5608236787811))*(r10)*(sj16)))+(((IkReal(0.0148785906998889))*(cj15)*(r12)))+(((IkReal(0.00515791144262815))*(cj16)*(r00)*(sj15)))+(((IkReal(-6.24900809395334))*(r12)*(sj14)*(sj15)))+(((IkReal(6.24900809395334))*(cj15)*(r11)*(sj14)*(sj16)))+(((IkReal(-0.164021583875575))*(r00)*(sj14)*(sj16)))+(((IkReal(-0.140295191239486))*(cj15)*(r01)*(sj16)))+(((IkReal(-6.24900809395334))*(cj14)*(r10)*(sj16)))+(((IkReal(2.16632280590382))*(cj14)*(cj16)*(r01)))+(((IkReal(10.3158228852563))*(px)))+(((IkReal(-0.00515791144262815))*(cj15)*(r02)))+(((IkReal(-0.404697667036978))*(r12)*(sj15)))+(((IkReal(0.473139184256467))*(cj16)*(r11)*(sj14)))+(((IkReal(-0.404697667036978))*(cj15)*(cj16)*(r10)))+(((IkReal(-0.164021583875575))*(cj16)*(r01)*(sj14)))+(((IkReal(-0.0148785906998889))*(cj16)*(r10)*(sj15)))+(((IkReal(-29.7571813997778))*(py)))+(((IkReal(0.140295191239486))*(r02)*(sj15)))+(((IkReal(-10.5608236787811))*(cj16)*(r11)))+(((IkReal(0.187954292969370))*(cj16)*(r00)))+(((IkReal(0.542175845103952))*(r11)*(sj16)))+(((IkReal(-0.164021583875575))*(cj14)*(cj15)*(r01)*(sj16)))+(((IkReal(-0.187954292969370))*(r01)*(sj16)))+(((IkReal(-0.473139184256467))*(cj14)*(r12)*(sj15)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j11array[0]=IKatan2(((((IkReal(0.187954292969370))*(cj16)*(r10)))+(((IkReal(-0.404697667036978))*(cj15)*(r01)*(sj16)))+(((IkReal(2.16632280590382))*(cj14)*(r10)*(sj16)))+(((IkReal(0.140295191239486))*(r12)*(sj15)))+(((IkReal(-0.0148785906998889))*(r01)*(sj15)*(sj16)))+(((IkReal(0.140295191239486))*(cj15)*(cj16)*(r10)))+(((IkReal(-0.164021583875575))*(cj14)*(cj15)*(r11)*(sj16)))+(((IkReal(10.5608236787811))*(r00)*(sj16)))+(((IkReal(-0.473139184256467))*(cj14)*(cj15)*(r01)*(sj16)))+(((IkReal(0.404697667036978))*(cj15)*(cj16)*(r00)))+(((IkReal(2.16632280590382))*(cj15)*(cj16)*(r10)*(sj14)))+(((IkReal(10.5608236787811))*(cj16)*(r01)))+(((IkReal(2.16632280590382))*(r12)*(sj14)*(sj15)))+(((IkReal(-0.00515791144262815))*(r11)*(sj15)*(sj16)))+(((IkReal(3.66108554197746))*(r10)*(sj16)))+(((IkReal(-0.542175845103952))*(r01)*(sj16)))+(((IkReal(-0.164021583875575))*(r10)*(sj14)*(sj16)))+(((IkReal(0.473139184256467))*(cj14)*(cj15)*(cj16)*(r00)))+(((IkReal(-6.24900809395334))*(cj15)*(r01)*(sj14)*(sj16)))+(((IkReal(0.164021583875575))*(cj14)*(cj15)*(cj16)*(r10)))+(((IkReal(-0.140295191239486))*(cj15)*(r11)*(sj16)))+(((IkReal(6.24900809395334))*(cj14)*(r00)*(sj16)))+(((IkReal(0.542175845103952))*(cj16)*(r00)))+(((IkReal(10.3158228852563))*(py)))+(((IkReal(-0.187954292969370))*(r11)*(sj16)))+(((IkReal(-0.00515791144262815))*(cj15)*(r12)))+(((IkReal(-2.16632280590382))*(cj15)*(r11)*(sj14)*(sj16)))+(((IkReal(0.473139184256467))*(cj14)*(r02)*(sj15)))+(((IkReal(0.404697667036978))*(r02)*(sj15)))+(((IkReal(2.16632280590382))*(cj14)*(cj16)*(r11)))+(((IkReal(0.164021583875575))*(cj14)*(r12)*(sj15)))+(((IkReal(0.00515791144262815))*(cj16)*(r10)*(sj15)))+(((IkReal(6.24900809395334))*(r02)*(sj14)*(sj15)))+(((IkReal(-0.473139184256467))*(r00)*(sj14)*(sj16)))+(((IkReal(-0.164021583875575))*(cj16)*(r11)*(sj14)))+(((IkReal(-0.473139184256467))*(cj16)*(r01)*(sj14)))+(((IkReal(0.0148785906998889))*(cj16)*(r00)*(sj15)))+(((IkReal(6.24900809395334))*(cj14)*(cj16)*(r01)))+(((IkReal(3.66108554197746))*(cj16)*(r11)))+(((IkReal(-0.0148785906998889))*(cj15)*(r02)))+(((IkReal(6.24900809395334))*(cj15)*(cj16)*(r00)*(sj14)))+(((IkReal(29.7571813997778))*(px)))), ((((IkReal(3.66108554197746))*(cj16)*(r01)))+(((IkReal(2.16632280590382))*(r02)*(sj14)*(sj15)))+(((IkReal(-6.24900809395334))*(cj15)*(cj16)*(r10)*(sj14)))+(((IkReal(2.16632280590382))*(cj14)*(r00)*(sj16)))+(((IkReal(-0.00515791144262815))*(r01)*(sj15)*(sj16)))+(((IkReal(0.473139184256467))*(cj14)*(cj15)*(r11)*(sj16)))+(((IkReal(-0.542175845103952))*(cj16)*(r10)))+(((IkReal(0.404697667036978))*(cj15)*(r11)*(sj16)))+(((IkReal(0.164021583875575))*(cj14)*(r02)*(sj15)))+(((IkReal(2.16632280590382))*(cj15)*(cj16)*(r00)*(sj14)))+(((IkReal(-6.24900809395334))*(cj14)*(cj16)*(r11)))+(((IkReal(0.473139184256467))*(r10)*(sj14)*(sj16)))+(((IkReal(0.140295191239486))*(cj15)*(cj16)*(r00)))+(((IkReal(0.0148785906998889))*(r11)*(sj15)*(sj16)))+(((IkReal(-0.473139184256467))*(cj14)*(cj15)*(cj16)*(r10)))+(((IkReal(-2.16632280590382))*(cj15)*(r01)*(sj14)*(sj16)))+(((IkReal(3.66108554197746))*(r00)*(sj16)))+(((IkReal(0.164021583875575))*(cj14)*(cj15)*(cj16)*(r00)))+(((IkReal(-10.5608236787811))*(r10)*(sj16)))+(((IkReal(0.0148785906998889))*(cj15)*(r12)))+(((IkReal(0.00515791144262815))*(cj16)*(r00)*(sj15)))+(((IkReal(-6.24900809395334))*(r12)*(sj14)*(sj15)))+(((IkReal(6.24900809395334))*(cj15)*(r11)*(sj14)*(sj16)))+(((IkReal(-0.164021583875575))*(r00)*(sj14)*(sj16)))+(((IkReal(-0.140295191239486))*(cj15)*(r01)*(sj16)))+(((IkReal(-6.24900809395334))*(cj14)*(r10)*(sj16)))+(((IkReal(2.16632280590382))*(cj14)*(cj16)*(r01)))+(((IkReal(10.3158228852563))*(px)))+(((IkReal(-0.00515791144262815))*(cj15)*(r02)))+(((IkReal(-0.404697667036978))*(r12)*(sj15)))+(((IkReal(0.473139184256467))*(cj16)*(r11)*(sj14)))+(((IkReal(-0.404697667036978))*(cj15)*(cj16)*(r10)))+(((IkReal(-0.164021583875575))*(cj16)*(r01)*(sj14)))+(((IkReal(-0.0148785906998889))*(cj16)*(r10)*(sj15)))+(((IkReal(-29.7571813997778))*(py)))+(((IkReal(0.140295191239486))*(r02)*(sj15)))+(((IkReal(-10.5608236787811))*(cj16)*(r11)))+(((IkReal(0.187954292969370))*(cj16)*(r00)))+(((IkReal(0.542175845103952))*(r11)*(sj16)))+(((IkReal(-0.164021583875575))*(cj14)*(cj15)*(r01)*(sj16)))+(((IkReal(-0.187954292969370))*(r01)*(sj16)))+(((IkReal(-0.473139184256467))*(cj14)*(r12)*(sj15)))));
sj11array[0]=IKsin(j11array[0]);
cj11array[0]=IKcos(j11array[0]);
if( j11array[0] > IKPI )
{
    j11array[0]-=IK2PI;
}
else if( j11array[0] < -IKPI )
{    j11array[0]+=IK2PI;
}
j11valid[0] = true;
for(int ij11 = 0; ij11 < 1; ++ij11)
{
if( !j11valid[ij11] )
{
    continue;
}
_ij11[0] = ij11; _ij11[1] = -1;
for(int iij11 = ij11+1; iij11 < 1; ++iij11)
{
if( j11valid[iij11] && IKabs(cj11array[ij11]-cj11array[iij11]) < IKFAST_SOLUTION_THRESH && IKabs(sj11array[ij11]-sj11array[iij11]) < IKFAST_SOLUTION_THRESH )
{
    j11valid[iij11]=false; _ij11[1] = iij11; break; 
}
}
j11 = j11array[ij11]; cj11 = cj11array[ij11]; sj11 = sj11array[ij11];
{
IkReal evalcond[2];
IkReal x514=IKsin(j11);
IkReal x515=IKcos(j11);
IkReal x516=((r11)*(sj16));
IkReal x517=((cj16)*(r00));
IkReal x518=((IkReal(0.000500000000000000))*(sj15));
IkReal x519=((cj16)*(r11));
IkReal x520=((IkReal(0.0159000000000000))*(sj14));
IkReal x521=((r01)*(sj16));
IkReal x522=((IkReal(0.0136000000000000))*(sj15));
IkReal x523=((IkReal(0.000500000000000000))*(cj15));
IkReal x524=((IkReal(0.210000000000000))*(cj14));
IkReal x525=((IkReal(0.210000000000000))*(sj14));
IkReal x526=((r10)*(sj16));
IkReal x527=((cj16)*(r01));
IkReal x528=((r00)*(sj16));
IkReal x529=((IkReal(0.0136000000000000))*(cj15));
IkReal x530=((cj16)*(r10));
IkReal x531=((sj15)*(x525));
IkReal x532=((IkReal(0.0159000000000000))*(cj14)*(cj15));
IkReal x533=((cj15)*(x530));
IkReal x534=((IkReal(0.0159000000000000))*(cj14)*(sj15));
evalcond[0]=((((cj15)*(x521)*(x525)))+(((IkReal(-1.00000000000000))*(x524)*(x528)))+(((IkReal(-1.00000000000000))*(x524)*(x527)))+(((r02)*(x523)))+(((IkReal(-1.00000000000000))*(r02)*(x531)))+(((IkReal(-1.00000000000000))*(r02)*(x534)))+(((x518)*(x521)))+(((IkReal(-1.00000000000000))*(px)))+(((IkReal(-1.00000000000000))*(r02)*(x522)))+(((IkReal(-1.00000000000000))*(x517)*(x518)))+(((x521)*(x529)))+(((IkReal(-0.354900000000000))*(x527)))+(((IkReal(-0.354900000000000))*(x528)))+(((IkReal(-1.00000000000000))*(x517)*(x529)))+(((IkReal(-0.0182200000000000))*(x517)))+(((x521)*(x532)))+(((IkReal(0.0300000000000000))*(x514)))+(((IkReal(0.0104000000000000))*(x515)))+(((IkReal(-1.00000000000000))*(x517)*(x532)))+(((x520)*(x527)))+(((x520)*(x528)))+(((IkReal(0.0182200000000000))*(x521)))+(((IkReal(-1.00000000000000))*(cj15)*(x517)*(x525))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x524)*(x526)))+(((x519)*(x520)))+(((IkReal(-1.00000000000000))*(x525)*(x533)))+(((IkReal(-1.00000000000000))*(x530)*(x532)))+(((IkReal(-1.00000000000000))*(x529)*(x530)))+(((IkReal(-0.354900000000000))*(x519)))+(((r12)*(x523)))+(((x516)*(x529)))+(((x516)*(x532)))+(((IkReal(-1.00000000000000))*(py)))+(((IkReal(-0.354900000000000))*(x526)))+(((IkReal(0.0104000000000000))*(x514)))+(((x520)*(x526)))+(((IkReal(-1.00000000000000))*(x518)*(x530)))+(((x516)*(x518)))+(((IkReal(-0.0300000000000000))*(x515)))+(((cj15)*(x516)*(x525)))+(((IkReal(0.0182200000000000))*(x516)))+(((IkReal(-0.0182200000000000))*(x530)))+(((IkReal(-1.00000000000000))*(r12)*(x534)))+(((IkReal(-1.00000000000000))*(r12)*(x531)))+(((IkReal(-1.00000000000000))*(x519)*(x524)))+(((IkReal(-1.00000000000000))*(r12)*(x522))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

{
IkReal dummyeval[1];
IkReal gconst16;
gconst16=IKsign((((sj11)*(sj11))+((cj11)*(cj11))));
dummyeval[0]=(((sj11)*(sj11))+((cj11)*(cj11)));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst17;
gconst17=IKsign((((sj11)*(sj11))+((cj11)*(cj11))));
dummyeval[0]=(((sj11)*(sj11))+((cj11)*(cj11)));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j13array[1], cj13array[1], sj13array[1];
bool j13valid[1]={false};
_nj13 = 1;
IkReal x535=((cj11)*(cj15));
IkReal x536=((cj16)*(r10));
IkReal x537=((cj15)*(sj11));
IkReal x538=((cj11)*(sj15));
IkReal x539=((cj14)*(r12));
IkReal x540=((cj16)*(r11));
IkReal x541=((r10)*(sj16));
IkReal x542=((r11)*(sj16));
IkReal x543=((sj11)*(sj15));
IkReal x544=((IkReal(1.00000000000000))*(cj11)*(sj14));
IkReal x545=((IkReal(1.00000000000000))*(sj11)*(sj14));
IkReal x546=((IkReal(1.00000000000000))*(cj14)*(x542));
if( IKabs(((gconst17)*(((((IkReal(-1.00000000000000))*(x541)*(x544)))+(((IkReal(-1.00000000000000))*(x536)*(x543)))+(((x542)*(x543)))+(((r12)*(x537)))+(((IkReal(-1.00000000000000))*(x540)*(x544)))+(((cj14)*(x535)*(x536)))+(((IkReal(-1.00000000000000))*(x535)*(x546)))+(((x538)*(x539))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst17)*(((((IkReal(-1.00000000000000))*(x541)*(x545)))+(((x539)*(x543)))+(((IkReal(-1.00000000000000))*(x537)*(x546)))+(((IkReal(-1.00000000000000))*(x538)*(x542)))+(((cj14)*(x536)*(x537)))+(((IkReal(-1.00000000000000))*(x540)*(x545)))+(((x536)*(x538)))+(((IkReal(-1.00000000000000))*(r12)*(x535))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j13array[0]=IKatan2(((gconst17)*(((((IkReal(-1.00000000000000))*(x541)*(x544)))+(((IkReal(-1.00000000000000))*(x536)*(x543)))+(((x542)*(x543)))+(((r12)*(x537)))+(((IkReal(-1.00000000000000))*(x540)*(x544)))+(((cj14)*(x535)*(x536)))+(((IkReal(-1.00000000000000))*(x535)*(x546)))+(((x538)*(x539)))))), ((gconst17)*(((((IkReal(-1.00000000000000))*(x541)*(x545)))+(((x539)*(x543)))+(((IkReal(-1.00000000000000))*(x537)*(x546)))+(((IkReal(-1.00000000000000))*(x538)*(x542)))+(((cj14)*(x536)*(x537)))+(((IkReal(-1.00000000000000))*(x540)*(x545)))+(((x536)*(x538)))+(((IkReal(-1.00000000000000))*(r12)*(x535)))))));
sj13array[0]=IKsin(j13array[0]);
cj13array[0]=IKcos(j13array[0]);
if( j13array[0] > IKPI )
{
    j13array[0]-=IK2PI;
}
else if( j13array[0] < -IKPI )
{    j13array[0]+=IK2PI;
}
j13valid[0] = true;
for(int ij13 = 0; ij13 < 1; ++ij13)
{
if( !j13valid[ij13] )
{
    continue;
}
_ij13[0] = ij13; _ij13[1] = -1;
for(int iij13 = ij13+1; iij13 < 1; ++iij13)
{
if( j13valid[iij13] && IKabs(cj13array[ij13]-cj13array[iij13]) < IKFAST_SOLUTION_THRESH && IKabs(sj13array[ij13]-sj13array[iij13]) < IKFAST_SOLUTION_THRESH )
{
    j13valid[iij13]=false; _ij13[1] = iij13; break; 
}
}
j13 = j13array[ij13]; cj13 = cj13array[ij13]; sj13 = sj13array[ij13];
{
IkReal evalcond[4];
IkReal x547=IKcos(j13);
IkReal x548=IKsin(j13);
IkReal x549=((IkReal(1.00000000000000))*(cj14));
IkReal x550=((IkReal(1.00000000000000))*(sj11));
IkReal x551=((sj14)*(sj16));
IkReal x552=((cj15)*(cj16));
IkReal x553=((r11)*(sj16));
IkReal x554=((cj16)*(sj14));
IkReal x555=((cj14)*(cj15));
IkReal x556=((r01)*(sj16));
IkReal x557=((cj11)*(x547));
IkReal x558=((IkReal(1.00000000000000))*(cj16)*(sj15));
IkReal x559=((cj11)*(x548));
IkReal x560=((x548)*(x550));
evalcond[0]=((((IkReal(-1.00000000000000))*(x559)))+(((cj15)*(r02)))+(((IkReal(-1.00000000000000))*(r00)*(x558)))+(((IkReal(-1.00000000000000))*(x547)*(x550)))+(((sj15)*(x556))));
evalcond[1]=((((cj15)*(r12)))+(((IkReal(-1.00000000000000))*(r10)*(x558)))+(((sj15)*(x553)))+(x557)+(((IkReal(-1.00000000000000))*(x560))));
evalcond[2]=((((IkReal(-1.00000000000000))*(r02)*(sj15)*(x549)))+(((x555)*(x556)))+(x557)+(((r01)*(x554)))+(((r00)*(x551)))+(((IkReal(-1.00000000000000))*(r00)*(x549)*(x552)))+(((IkReal(-1.00000000000000))*(x560))));
evalcond[3]=((((r10)*(x551)))+(((r11)*(x554)))+(((IkReal(-1.00000000000000))*(r12)*(sj15)*(x549)))+(x559)+(((sj11)*(x547)))+(((IkReal(-1.00000000000000))*(r10)*(x549)*(x552)))+(((x553)*(x555))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j11;
vinfos[0].indices[0] = _ij11[0];
vinfos[0].indices[1] = _ij11[1];
vinfos[0].maxsolutions = _nj11;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j12;
vinfos[1].indices[0] = _ij12[0];
vinfos[1].indices[1] = _ij12[1];
vinfos[1].maxsolutions = _nj12;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j13;
vinfos[2].indices[0] = _ij13[0];
vinfos[2].indices[1] = _ij13[1];
vinfos[2].maxsolutions = _nj13;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j14;
vinfos[3].indices[0] = _ij14[0];
vinfos[3].indices[1] = _ij14[1];
vinfos[3].maxsolutions = _nj14;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j15;
vinfos[4].indices[0] = _ij15[0];
vinfos[4].indices[1] = _ij15[1];
vinfos[4].maxsolutions = _nj15;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j16;
vinfos[5].indices[0] = _ij16[0];
vinfos[5].indices[1] = _ij16[1];
vinfos[5].maxsolutions = _nj16;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j13array[1], cj13array[1], sj13array[1];
bool j13valid[1]={false};
_nj13 = 1;
IkReal x561=((cj15)*(r12));
IkReal x562=((IkReal(1.00000000000000))*(cj11));
IkReal x563=((cj16)*(sj15));
IkReal x564=((IkReal(1.00000000000000))*(sj11));
IkReal x565=((cj15)*(r02));
IkReal x566=((r01)*(sj15)*(sj16));
IkReal x567=((r11)*(sj15)*(sj16));
if( IKabs(((gconst16)*(((((IkReal(-1.00000000000000))*(r00)*(x562)*(x563)))+(((sj11)*(x567)))+(((sj11)*(x561)))+(((cj11)*(x566)))+(((cj11)*(x565)))+(((IkReal(-1.00000000000000))*(r10)*(x563)*(x564))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst16)*(((((sj11)*(x565)))+(((sj11)*(x566)))+(((IkReal(-1.00000000000000))*(r00)*(x563)*(x564)))+(((cj11)*(r10)*(x563)))+(((IkReal(-1.00000000000000))*(x562)*(x567)))+(((IkReal(-1.00000000000000))*(x561)*(x562))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j13array[0]=IKatan2(((gconst16)*(((((IkReal(-1.00000000000000))*(r00)*(x562)*(x563)))+(((sj11)*(x567)))+(((sj11)*(x561)))+(((cj11)*(x566)))+(((cj11)*(x565)))+(((IkReal(-1.00000000000000))*(r10)*(x563)*(x564)))))), ((gconst16)*(((((sj11)*(x565)))+(((sj11)*(x566)))+(((IkReal(-1.00000000000000))*(r00)*(x563)*(x564)))+(((cj11)*(r10)*(x563)))+(((IkReal(-1.00000000000000))*(x562)*(x567)))+(((IkReal(-1.00000000000000))*(x561)*(x562)))))));
sj13array[0]=IKsin(j13array[0]);
cj13array[0]=IKcos(j13array[0]);
if( j13array[0] > IKPI )
{
    j13array[0]-=IK2PI;
}
else if( j13array[0] < -IKPI )
{    j13array[0]+=IK2PI;
}
j13valid[0] = true;
for(int ij13 = 0; ij13 < 1; ++ij13)
{
if( !j13valid[ij13] )
{
    continue;
}
_ij13[0] = ij13; _ij13[1] = -1;
for(int iij13 = ij13+1; iij13 < 1; ++iij13)
{
if( j13valid[iij13] && IKabs(cj13array[ij13]-cj13array[iij13]) < IKFAST_SOLUTION_THRESH && IKabs(sj13array[ij13]-sj13array[iij13]) < IKFAST_SOLUTION_THRESH )
{
    j13valid[iij13]=false; _ij13[1] = iij13; break; 
}
}
j13 = j13array[ij13]; cj13 = cj13array[ij13]; sj13 = sj13array[ij13];
{
IkReal evalcond[4];
IkReal x568=IKcos(j13);
IkReal x569=IKsin(j13);
IkReal x570=((IkReal(1.00000000000000))*(cj14));
IkReal x571=((IkReal(1.00000000000000))*(sj11));
IkReal x572=((sj14)*(sj16));
IkReal x573=((cj15)*(cj16));
IkReal x574=((r11)*(sj16));
IkReal x575=((cj16)*(sj14));
IkReal x576=((cj14)*(cj15));
IkReal x577=((r01)*(sj16));
IkReal x578=((cj11)*(x568));
IkReal x579=((IkReal(1.00000000000000))*(cj16)*(sj15));
IkReal x580=((cj11)*(x569));
IkReal x581=((x569)*(x571));
evalcond[0]=((((IkReal(-1.00000000000000))*(x580)))+(((cj15)*(r02)))+(((IkReal(-1.00000000000000))*(r00)*(x579)))+(((sj15)*(x577)))+(((IkReal(-1.00000000000000))*(x568)*(x571))));
evalcond[1]=((((IkReal(-1.00000000000000))*(r10)*(x579)))+(((cj15)*(r12)))+(((sj15)*(x574)))+(x578)+(((IkReal(-1.00000000000000))*(x581))));
evalcond[2]=((((r01)*(x575)))+(((x576)*(x577)))+(((r00)*(x572)))+(((IkReal(-1.00000000000000))*(r02)*(sj15)*(x570)))+(((IkReal(-1.00000000000000))*(r00)*(x570)*(x573)))+(x578)+(((IkReal(-1.00000000000000))*(x581))));
evalcond[3]=((((sj11)*(x568)))+(((x574)*(x576)))+(((IkReal(-1.00000000000000))*(r12)*(sj15)*(x570)))+(((IkReal(-1.00000000000000))*(r10)*(x570)*(x573)))+(x580)+(((r10)*(x572)))+(((r11)*(x575))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j11;
vinfos[0].indices[0] = _ij11[0];
vinfos[0].indices[1] = _ij11[1];
vinfos[0].maxsolutions = _nj11;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j12;
vinfos[1].indices[0] = _ij12[0];
vinfos[1].indices[1] = _ij12[1];
vinfos[1].maxsolutions = _nj12;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j13;
vinfos[2].indices[0] = _ij13[0];
vinfos[2].indices[1] = _ij13[1];
vinfos[2].maxsolutions = _nj13;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j14;
vinfos[3].indices[0] = _ij14[0];
vinfos[3].indices[1] = _ij14[1];
vinfos[3].maxsolutions = _nj14;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j15;
vinfos[4].indices[0] = _ij15[0];
vinfos[4].indices[1] = _ij15[1];
vinfos[4].maxsolutions = _nj15;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j16;
vinfos[5].indices[0] = _ij16[0];
vinfos[5].indices[1] = _ij16[1];
vinfos[5].maxsolutions = _nj16;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
}
}

} else
{
if( 1 )
{
continue;

} else
{
}
}
}
}

} else
{
{
IkReal j11array[1], cj11array[1], sj11array[1];
bool j11valid[1]={false};
_nj11 = 1;
IkReal x582=((IKabs(cj12) != 0)?((IkReal)1/(cj12)):(IkReal)1.0e30);
IkReal x583=((cj12)*(sj16));
IkReal x584=((r10)*(sj14));
IkReal x585=((cj12)*(cj16));
IkReal x586=((IkReal(433.250000000000))*(cj15));
IkReal x587=((IkReal(0.625000000000000))*(sj15));
IkReal x588=((IkReal(433.250000000000))*(cj12));
IkReal x589=((cj14)*(r10));
IkReal x590=((IkReal(19.8750000000000))*(cj15));
IkReal x591=((r11)*(sj14));
IkReal x592=((IkReal(17.0000000000000))*(cj15));
IkReal x593=((cj15)*(sj16));
IkReal x594=((cj15)*(cj16));
IkReal x595=((cj12)*(r12));
IkReal x596=((cj14)*(cj16)*(r11));
IkReal x597=((r12)*(sj14)*(sj15));
IkReal x598=((sj16)*(x589));
if( IKabs(((IkReal(0.0769230769230769))*(x582)*(((((IkReal(443.625000000000))*(r10)*(x583)))+(((IkReal(-1.00000000000000))*(r11)*(x583)*(x587)))+(((r10)*(x585)*(x587)))+(((IkReal(37.5000000000000))*(x596)))+(((IkReal(37.5000000000000))*(x597)))+(((IkReal(37.5000000000000))*(x598)))+(((IkReal(433.250000000000))*(cj14)*(r11)*(x585)))+(((IkReal(-0.625000000000000))*(cj15)*(x595)))+(((IkReal(-19.8750000000000))*(x583)*(x584)))+(((IkReal(-22.7750000000000))*(r11)*(x583)))+(((IkReal(22.7750000000000))*(r10)*(x585)))+(((IkReal(-1.00000000000000))*(cj14)*(r11)*(x583)*(x590)))+(((x585)*(x589)*(x590)))+(((IkReal(17.0000000000000))*(sj15)*(x595)))+(((IkReal(37.5000000000000))*(x584)*(x594)))+(((IkReal(-1.00000000000000))*(x583)*(x586)*(x591)))+(((IkReal(-37.5000000000000))*(x591)*(x593)))+(((IkReal(443.625000000000))*(r11)*(x585)))+(((r10)*(x585)*(x592)))+(((x584)*(x585)*(x586)))+(((IkReal(-1.00000000000000))*(r11)*(x583)*(x592)))+(((IkReal(-19.8750000000000))*(x585)*(x591)))+(((IkReal(433.250000000000))*(x583)*(x589)))+(((IkReal(1250.00000000000))*(cj12)*(py)))+(((x588)*(x597)))+(((IkReal(19.8750000000000))*(cj14)*(sj15)*(x595))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((x582)*(((((x584)*(x594)))+(x597)+(x596)+(x598)+(((IkReal(-1.00000000000000))*(x591)*(x593))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((IkReal(0.0769230769230769))*(x582)*(((((IkReal(443.625000000000))*(r10)*(x583)))+(((IkReal(-1.00000000000000))*(r11)*(x583)*(x587)))+(((r10)*(x585)*(x587)))+(((IkReal(37.5000000000000))*(x596)))+(((IkReal(37.5000000000000))*(x597)))+(((IkReal(37.5000000000000))*(x598)))+(((IkReal(433.250000000000))*(cj14)*(r11)*(x585)))+(((IkReal(-0.625000000000000))*(cj15)*(x595)))+(((IkReal(-19.8750000000000))*(x583)*(x584)))+(((IkReal(-22.7750000000000))*(r11)*(x583)))+(((IkReal(22.7750000000000))*(r10)*(x585)))+(((IkReal(-1.00000000000000))*(cj14)*(r11)*(x583)*(x590)))+(((x585)*(x589)*(x590)))+(((IkReal(17.0000000000000))*(sj15)*(x595)))+(((IkReal(37.5000000000000))*(x584)*(x594)))+(((IkReal(-1.00000000000000))*(x583)*(x586)*(x591)))+(((IkReal(-37.5000000000000))*(x591)*(x593)))+(((IkReal(443.625000000000))*(r11)*(x585)))+(((r10)*(x585)*(x592)))+(((x584)*(x585)*(x586)))+(((IkReal(-1.00000000000000))*(r11)*(x583)*(x592)))+(((IkReal(-19.8750000000000))*(x585)*(x591)))+(((IkReal(433.250000000000))*(x583)*(x589)))+(((IkReal(1250.00000000000))*(cj12)*(py)))+(((x588)*(x597)))+(((IkReal(19.8750000000000))*(cj14)*(sj15)*(x595)))))))+IKsqr(((x582)*(((((x584)*(x594)))+(x597)+(x596)+(x598)+(((IkReal(-1.00000000000000))*(x591)*(x593)))))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j11array[0]=IKatan2(((IkReal(0.0769230769230769))*(x582)*(((((IkReal(443.625000000000))*(r10)*(x583)))+(((IkReal(-1.00000000000000))*(r11)*(x583)*(x587)))+(((r10)*(x585)*(x587)))+(((IkReal(37.5000000000000))*(x596)))+(((IkReal(37.5000000000000))*(x597)))+(((IkReal(37.5000000000000))*(x598)))+(((IkReal(433.250000000000))*(cj14)*(r11)*(x585)))+(((IkReal(-0.625000000000000))*(cj15)*(x595)))+(((IkReal(-19.8750000000000))*(x583)*(x584)))+(((IkReal(-22.7750000000000))*(r11)*(x583)))+(((IkReal(22.7750000000000))*(r10)*(x585)))+(((IkReal(-1.00000000000000))*(cj14)*(r11)*(x583)*(x590)))+(((x585)*(x589)*(x590)))+(((IkReal(17.0000000000000))*(sj15)*(x595)))+(((IkReal(37.5000000000000))*(x584)*(x594)))+(((IkReal(-1.00000000000000))*(x583)*(x586)*(x591)))+(((IkReal(-37.5000000000000))*(x591)*(x593)))+(((IkReal(443.625000000000))*(r11)*(x585)))+(((r10)*(x585)*(x592)))+(((x584)*(x585)*(x586)))+(((IkReal(-1.00000000000000))*(r11)*(x583)*(x592)))+(((IkReal(-19.8750000000000))*(x585)*(x591)))+(((IkReal(433.250000000000))*(x583)*(x589)))+(((IkReal(1250.00000000000))*(cj12)*(py)))+(((x588)*(x597)))+(((IkReal(19.8750000000000))*(cj14)*(sj15)*(x595)))))), ((x582)*(((((x584)*(x594)))+(x597)+(x596)+(x598)+(((IkReal(-1.00000000000000))*(x591)*(x593)))))));
sj11array[0]=IKsin(j11array[0]);
cj11array[0]=IKcos(j11array[0]);
if( j11array[0] > IKPI )
{
    j11array[0]-=IK2PI;
}
else if( j11array[0] < -IKPI )
{    j11array[0]+=IK2PI;
}
j11valid[0] = true;
for(int ij11 = 0; ij11 < 1; ++ij11)
{
if( !j11valid[ij11] )
{
    continue;
}
_ij11[0] = ij11; _ij11[1] = -1;
for(int iij11 = ij11+1; iij11 < 1; ++iij11)
{
if( j11valid[iij11] && IKabs(cj11array[ij11]-cj11array[iij11]) < IKFAST_SOLUTION_THRESH && IKabs(sj11array[ij11]-sj11array[iij11]) < IKFAST_SOLUTION_THRESH )
{
    j11valid[iij11]=false; _ij11[1] = iij11; break; 
}
}
j11 = j11array[ij11]; cj11 = cj11array[ij11]; sj11 = sj11array[ij11];
{
IkReal evalcond[4];
IkReal x599=IKsin(j11);
IkReal x600=IKcos(j11);
IkReal x601=((cj15)*(cj16));
IkReal x602=((cj16)*(r00));
IkReal x603=((IkReal(0.000500000000000000))*(sj15));
IkReal x604=((IkReal(0.0159000000000000))*(cj14));
IkReal x605=((r01)*(sj16));
IkReal x606=((IkReal(0.0136000000000000))*(sj15));
IkReal x607=((IkReal(0.000500000000000000))*(cj15));
IkReal x608=((IkReal(0.210000000000000))*(sj14));
IkReal x609=((r10)*(sj14));
IkReal x610=((cj14)*(cj16));
IkReal x611=((IkReal(0.354900000000000))*(cj16));
IkReal x612=((IkReal(0.0159000000000000))*(sj16));
IkReal x613=((r00)*(sj14));
IkReal x614=((IkReal(0.354900000000000))*(sj16));
IkReal x615=((r11)*(sj16));
IkReal x616=((cj16)*(r10));
IkReal x617=((sj15)*(x608));
IkReal x618=((IkReal(1.00000000000000))*(cj14)*(sj16));
IkReal x619=((IkReal(1.00000000000000))*(sj14)*(sj15));
IkReal x620=((IkReal(0.0159000000000000))*(cj16)*(sj14));
IkReal x621=((cj12)*(x599));
IkReal x622=((cj15)*(x615));
IkReal x623=((cj12)*(x600));
IkReal x624=((IkReal(0.210000000000000))*(cj14)*(sj16));
evalcond[0]=((((IkReal(-1.00000000000000))*(x601)*(x609)))+(((IkReal(-1.00000000000000))*(r10)*(x618)))+(((IkReal(-1.00000000000000))*(r11)*(x610)))+(((IkReal(-1.00000000000000))*(r12)*(x619)))+(x623)+(((sj14)*(x622))));
evalcond[1]=((((IkReal(-1.00000000000000))*(r00)*(x618)))+(((cj15)*(sj14)*(x605)))+(((IkReal(-1.00000000000000))*(x621)))+(((IkReal(-1.00000000000000))*(r01)*(x610)))+(((IkReal(-1.00000000000000))*(x601)*(x613)))+(((IkReal(-1.00000000000000))*(r02)*(x619))));
evalcond[2]=((((IkReal(0.0300000000000000))*(x599)))+(((IkReal(-1.00000000000000))*(x602)*(x603)))+(((IkReal(0.0182200000000000))*(x605)))+(((IkReal(-1.00000000000000))*(r00)*(x614)))+(((IkReal(-1.00000000000000))*(r01)*(x611)))+(((cj15)*(x604)*(x605)))+(((IkReal(-1.00000000000000))*(r02)*(sj15)*(x604)))+(((IkReal(0.0136000000000000))*(cj15)*(x605)))+(((cj15)*(x605)*(x608)))+(((IkReal(-1.00000000000000))*(r00)*(x624)))+(((IkReal(-1.00000000000000))*(r00)*(x601)*(x608)))+(((IkReal(-1.00000000000000))*(r00)*(x601)*(x604)))+(((x612)*(x613)))+(((IkReal(-1.00000000000000))*(px)))+(((IkReal(-0.0182200000000000))*(x602)))+(((IkReal(0.0104000000000000))*(x600)))+(((x603)*(x605)))+(((r01)*(x620)))+(((IkReal(0.136600000000000))*(x621)))+(((IkReal(-0.0136000000000000))*(r00)*(x601)))+(((r02)*(x607)))+(((IkReal(-1.00000000000000))*(r02)*(x606)))+(((IkReal(-0.210000000000000))*(r01)*(x610)))+(((IkReal(-1.00000000000000))*(r02)*(x617))));
evalcond[3]=((((IkReal(-0.136600000000000))*(x623)))+(((IkReal(0.0182200000000000))*(x615)))+(((IkReal(-1.00000000000000))*(r12)*(sj15)*(x604)))+(((IkReal(-0.0300000000000000))*(x600)))+(((IkReal(0.0136000000000000))*(x622)))+(((IkReal(-1.00000000000000))*(r10)*(x614)))+(((r12)*(x607)))+(((IkReal(-0.210000000000000))*(r11)*(x610)))+(((IkReal(-1.00000000000000))*(r12)*(x617)))+(((IkReal(-1.00000000000000))*(r11)*(x611)))+(((IkReal(0.0104000000000000))*(x599)))+(((IkReal(-1.00000000000000))*(py)))+(((x603)*(x615)))+(((IkReal(-1.00000000000000))*(r10)*(x601)*(x604)))+(((IkReal(-1.00000000000000))*(r10)*(x601)*(x608)))+(((x608)*(x622)))+(((IkReal(-1.00000000000000))*(r12)*(x606)))+(((x609)*(x612)))+(((IkReal(-0.0182200000000000))*(x616)))+(((x604)*(x622)))+(((IkReal(-1.00000000000000))*(r10)*(x624)))+(((IkReal(-1.00000000000000))*(x603)*(x616)))+(((IkReal(-0.0136000000000000))*(r10)*(x601)))+(((r11)*(x620))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
IkReal dummyeval[1];
IkReal gconst2;
gconst2=IKsign(cj12);
dummyeval[0]=cj12;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[2];
IkReal x625=(sj11)*(sj11);
IkReal x626=(cj11)*(cj11);
dummyeval[0]=((x625)+(x626));
dummyeval[1]=((((sj12)*(x626)))+(((sj12)*(x625))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  || IKabs(dummyeval[1]) < 0.0000010000000000  )
{
{
IkReal dummyeval[2];
dummyeval[0]=cj11;
dummyeval[1]=cj12;
if( IKabs(dummyeval[0]) < 0.0000010000000000  || IKabs(dummyeval[1]) < 0.0000010000000000  )
{
{
IkReal evalcond[9];
IkReal x627=((cj15)*(cj16));
IkReal x628=((IkReal(0.210000000000000))*(sj14));
IkReal x629=((r22)*(sj15));
IkReal x630=((IkReal(1.00000000000000))*(sj14));
IkReal x631=((r02)*(sj15));
IkReal x632=((IkReal(0.000500000000000000))*(sj15));
IkReal x633=((cj16)*(r00));
IkReal x634=((IkReal(0.0159000000000000))*(cj14));
IkReal x635=((IkReal(0.0159000000000000))*(sj14));
IkReal x636=((cj16)*(r11));
IkReal x637=((r01)*(sj16));
IkReal x638=((cj15)*(sj16));
IkReal x639=((r12)*(sj15));
IkReal x640=((IkReal(0.000500000000000000))*(cj15));
IkReal x641=((r20)*(sj16));
IkReal x642=((IkReal(0.210000000000000))*(cj14));
IkReal x643=((cj16)*(r21));
IkReal x644=((r10)*(sj16));
IkReal x645=((r21)*(sj16));
IkReal x646=((cj16)*(r01));
IkReal x647=((r00)*(sj16));
IkReal x648=((IkReal(1.00000000000000))*(cj14));
IkReal x649=((r11)*(sj16));
IkReal x650=((cj16)*(r20));
IkReal x651=((cj16)*(r10));
IkReal x652=((sj15)*(x628));
IkReal x653=((sj16)*(x648));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(1.57079632679490))+(j11)), IkReal(6.28318530717959))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x629)*(x630)))+(((IkReal(-1.00000000000000))*(x641)*(x648)))+(((r21)*(sj14)*(x638)))+(((IkReal(-1.00000000000000))*(sj12)))+(((IkReal(-1.00000000000000))*(x643)*(x648)))+(((IkReal(-1.00000000000000))*(r20)*(x627)*(x630))));
evalcond[2]=((((IkReal(-1.00000000000000))*(x630)*(x639)))+(((IkReal(-1.00000000000000))*(x644)*(x648)))+(((IkReal(-1.00000000000000))*(r10)*(x627)*(x630)))+(((IkReal(-1.00000000000000))*(x636)*(x648)))+(((r11)*(sj14)*(x638))));
evalcond[3]=((((IkReal(-1.00000000000000))*(x630)*(x631)))+(((IkReal(-1.00000000000000))*(x647)*(x648)))+(((IkReal(-1.00000000000000))*(x646)*(x648)))+(((IkReal(-1.00000000000000))*(cj12)))+(((cj15)*(sj14)*(x637)))+(((IkReal(-1.00000000000000))*(r00)*(x627)*(x630))));
evalcond[4]=((((IkReal(-1.00000000000000))*(x629)*(x634)))+(((IkReal(-1.00000000000000))*(x642)*(x643)))+(((x635)*(x641)))+(((x635)*(x643)))+(((IkReal(0.0136000000000000))*(r21)*(x638)))+(((IkReal(0.136600000000000))*(sj12)))+(((IkReal(-1.00000000000000))*(x628)*(x629)))+(((IkReal(-0.0136000000000000))*(x629)))+(((IkReal(-1.00000000000000))*(x641)*(x642)))+(((IkReal(-1.00000000000000))*(x632)*(x650)))+(((IkReal(0.0182200000000000))*(x645)))+(((r21)*(x634)*(x638)))+(((IkReal(-1.00000000000000))*(pz)))+(((x632)*(x645)))+(((IkReal(-0.0136000000000000))*(r20)*(x627)))+(((IkReal(-0.354900000000000))*(x641)))+(((IkReal(-0.354900000000000))*(x643)))+(((r22)*(x640)))+(((IkReal(-0.0182200000000000))*(x650)))+(((IkReal(-1.00000000000000))*(r20)*(x627)*(x634)))+(((IkReal(-1.00000000000000))*(r20)*(x627)*(x628)))+(((r21)*(x628)*(x638))));
evalcond[5]=((IkReal(0.0300000000000000))+(((IkReal(-1.00000000000000))*(x642)*(x647)))+(((IkReal(-1.00000000000000))*(x642)*(x646)))+(((x635)*(x647)))+(((x635)*(x646)))+(((IkReal(-1.00000000000000))*(x631)*(x634)))+(((IkReal(0.0136000000000000))*(cj15)*(x637)))+(((IkReal(-1.00000000000000))*(x628)*(x631)))+(((IkReal(-0.0136000000000000))*(x631)))+(((r02)*(x640)))+(((IkReal(-1.00000000000000))*(px)))+(((IkReal(-0.354900000000000))*(x647)))+(((IkReal(-0.354900000000000))*(x646)))+(((cj15)*(x634)*(x637)))+(((cj15)*(x628)*(x637)))+(((x632)*(x637)))+(((IkReal(0.0182200000000000))*(x637)))+(((IkReal(-1.00000000000000))*(r00)*(x627)*(x634)))+(((IkReal(-0.0182200000000000))*(x633)))+(((IkReal(-1.00000000000000))*(r00)*(x627)*(x628)))+(((IkReal(-0.0136000000000000))*(r00)*(x627)))+(((IkReal(0.136600000000000))*(cj12)))+(((IkReal(-1.00000000000000))*(x632)*(x633))));
evalcond[6]=((IkReal(0.0104000000000000))+(((IkReal(-1.00000000000000))*(x642)*(x644)))+(((x635)*(x644)))+(((IkReal(-0.0136000000000000))*(r10)*(x627)))+(((r11)*(x634)*(x638)))+(((x635)*(x636)))+(((IkReal(-1.00000000000000))*(x628)*(x639)))+(((IkReal(-0.0136000000000000))*(x639)))+(((IkReal(-1.00000000000000))*(x632)*(x651)))+(((IkReal(0.0182200000000000))*(x649)))+(((r11)*(x628)*(x638)))+(((IkReal(-1.00000000000000))*(x634)*(x639)))+(((IkReal(-1.00000000000000))*(py)))+(((x632)*(x649)))+(((IkReal(-1.00000000000000))*(r10)*(x627)*(x628)))+(((IkReal(-1.00000000000000))*(r10)*(x627)*(x634)))+(((IkReal(-0.354900000000000))*(x644)))+(((r12)*(x640)))+(((IkReal(0.0136000000000000))*(r11)*(x638)))+(((IkReal(-1.00000000000000))*(x636)*(x642)))+(((IkReal(-0.0182200000000000))*(x651)))+(((IkReal(-0.354900000000000))*(x636))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  )
{
{
IkReal j13array[1], cj13array[1], sj13array[1];
bool j13valid[1]={false};
_nj13 = 1;
IkReal x654=((cj16)*(r10));
IkReal x655=((r11)*(sj16));
IkReal x656=((cj14)*(cj15));
IkReal x657=((IkReal(1.00000000000000))*(sj14));
if( IKabs(((((cj15)*(r12)))+(((IkReal(-1.00000000000000))*(sj15)*(x654)))+(((sj15)*(x655))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((IkReal(-1.00000000000000))*(cj16)*(r11)*(x657)))+(((IkReal(-1.00000000000000))*(r10)*(sj16)*(x657)))+(((x654)*(x656)))+(((IkReal(-1.00000000000000))*(x655)*(x656)))+(((cj14)*(r12)*(sj15))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((cj15)*(r12)))+(((IkReal(-1.00000000000000))*(sj15)*(x654)))+(((sj15)*(x655)))))+IKsqr(((((IkReal(-1.00000000000000))*(cj16)*(r11)*(x657)))+(((IkReal(-1.00000000000000))*(r10)*(sj16)*(x657)))+(((x654)*(x656)))+(((IkReal(-1.00000000000000))*(x655)*(x656)))+(((cj14)*(r12)*(sj15)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j13array[0]=IKatan2(((((cj15)*(r12)))+(((IkReal(-1.00000000000000))*(sj15)*(x654)))+(((sj15)*(x655)))), ((((IkReal(-1.00000000000000))*(cj16)*(r11)*(x657)))+(((IkReal(-1.00000000000000))*(r10)*(sj16)*(x657)))+(((x654)*(x656)))+(((IkReal(-1.00000000000000))*(x655)*(x656)))+(((cj14)*(r12)*(sj15)))));
sj13array[0]=IKsin(j13array[0]);
cj13array[0]=IKcos(j13array[0]);
if( j13array[0] > IKPI )
{
    j13array[0]-=IK2PI;
}
else if( j13array[0] < -IKPI )
{    j13array[0]+=IK2PI;
}
j13valid[0] = true;
for(int ij13 = 0; ij13 < 1; ++ij13)
{
if( !j13valid[ij13] )
{
    continue;
}
_ij13[0] = ij13; _ij13[1] = -1;
for(int iij13 = ij13+1; iij13 < 1; ++iij13)
{
if( j13valid[iij13] && IKabs(cj13array[ij13]-cj13array[iij13]) < IKFAST_SOLUTION_THRESH && IKabs(sj13array[ij13]-sj13array[iij13]) < IKFAST_SOLUTION_THRESH )
{
    j13valid[iij13]=false; _ij13[1] = iij13; break; 
}
}
j13 = j13array[ij13]; cj13 = cj13array[ij13]; sj13 = sj13array[ij13];
{
IkReal evalcond[6];
IkReal x658=IKcos(j13);
IkReal x659=IKsin(j13);
IkReal x660=((IkReal(1.00000000000000))*(cj14));
IkReal x661=((sj14)*(sj16));
IkReal x662=((cj15)*(cj16));
IkReal x663=((sj15)*(sj16));
IkReal x664=((cj16)*(sj14));
IkReal x665=((IkReal(1.00000000000000))*(cj16)*(sj15));
IkReal x666=((IkReal(1.00000000000000))*(x659));
IkReal x667=((cj14)*(cj15)*(sj16));
evalcond[0]=((((IkReal(-1.00000000000000))*(r20)*(x665)))+(((cj15)*(r22)))+(((IkReal(-1.00000000000000))*(cj12)*(x658)))+(((r21)*(x663))));
evalcond[1]=((((r01)*(x663)))+(((sj12)*(x658)))+(((cj15)*(r02)))+(((IkReal(-1.00000000000000))*(r00)*(x665))));
evalcond[2]=((((cj15)*(r12)))+(((IkReal(-1.00000000000000))*(r10)*(x665)))+(((r11)*(x663)))+(((IkReal(-1.00000000000000))*(x666))));
evalcond[3]=((((r20)*(x661)))+(((IkReal(-1.00000000000000))*(r22)*(sj15)*(x660)))+(((IkReal(-1.00000000000000))*(cj12)*(x666)))+(((r21)*(x664)))+(((r21)*(x667)))+(((IkReal(-1.00000000000000))*(r20)*(x660)*(x662))));
evalcond[4]=((((r01)*(x664)))+(((r01)*(x667)))+(((sj12)*(x659)))+(((r00)*(x661)))+(((IkReal(-1.00000000000000))*(r00)*(x660)*(x662)))+(((IkReal(-1.00000000000000))*(r02)*(sj15)*(x660))));
evalcond[5]=((((IkReal(-1.00000000000000))*(r10)*(x660)*(x662)))+(((r11)*(x667)))+(((r11)*(x664)))+(x658)+(((IkReal(-1.00000000000000))*(r12)*(sj15)*(x660)))+(((r10)*(x661))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j11;
vinfos[0].indices[0] = _ij11[0];
vinfos[0].indices[1] = _ij11[1];
vinfos[0].maxsolutions = _nj11;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j12;
vinfos[1].indices[0] = _ij12[0];
vinfos[1].indices[1] = _ij12[1];
vinfos[1].maxsolutions = _nj12;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j13;
vinfos[2].indices[0] = _ij13[0];
vinfos[2].indices[1] = _ij13[1];
vinfos[2].maxsolutions = _nj13;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j14;
vinfos[3].indices[0] = _ij14[0];
vinfos[3].indices[1] = _ij14[1];
vinfos[3].maxsolutions = _nj14;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j15;
vinfos[4].indices[0] = _ij15[0];
vinfos[4].indices[1] = _ij15[1];
vinfos[4].maxsolutions = _nj15;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j16;
vinfos[5].indices[0] = _ij16[0];
vinfos[5].indices[1] = _ij16[1];
vinfos[5].maxsolutions = _nj16;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

} else
{
IkReal x668=((cj15)*(cj16));
IkReal x669=((IkReal(0.210000000000000))*(sj14));
IkReal x670=((r22)*(sj15));
IkReal x671=((IkReal(1.00000000000000))*(sj14));
IkReal x672=((r02)*(sj15));
IkReal x673=((IkReal(0.000500000000000000))*(sj15));
IkReal x674=((cj16)*(r00));
IkReal x675=((IkReal(0.0159000000000000))*(cj14));
IkReal x676=((IkReal(0.0159000000000000))*(sj14));
IkReal x677=((cj16)*(r11));
IkReal x678=((r01)*(sj16));
IkReal x679=((cj15)*(sj16));
IkReal x680=((r12)*(sj15));
IkReal x681=((IkReal(0.000500000000000000))*(cj15));
IkReal x682=((r20)*(sj16));
IkReal x683=((IkReal(0.210000000000000))*(cj14));
IkReal x684=((cj16)*(r21));
IkReal x685=((r10)*(sj16));
IkReal x686=((r21)*(sj16));
IkReal x687=((cj16)*(r01));
IkReal x688=((r00)*(sj16));
IkReal x689=((IkReal(1.00000000000000))*(cj14));
IkReal x690=((r11)*(sj16));
IkReal x691=((cj16)*(r20));
IkReal x692=((cj16)*(r10));
IkReal x693=((sj15)*(x669));
IkReal x694=((sj16)*(x689));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(4.71238898038469))+(j11)), IkReal(6.28318530717959))));
evalcond[1]=((((IkReal(-1.00000000000000))*(r20)*(x668)*(x671)))+(((IkReal(-1.00000000000000))*(x670)*(x671)))+(((IkReal(-1.00000000000000))*(x684)*(x689)))+(((IkReal(-1.00000000000000))*(sj12)))+(((r21)*(sj14)*(x679)))+(((IkReal(-1.00000000000000))*(x682)*(x689))));
evalcond[2]=((((IkReal(-1.00000000000000))*(x685)*(x689)))+(((r11)*(sj14)*(x679)))+(((IkReal(-1.00000000000000))*(r10)*(x668)*(x671)))+(((IkReal(-1.00000000000000))*(x677)*(x689)))+(((IkReal(-1.00000000000000))*(x671)*(x680))));
evalcond[3]=((((IkReal(-1.00000000000000))*(x687)*(x689)))+(((IkReal(-1.00000000000000))*(x688)*(x689)))+(((IkReal(-1.00000000000000))*(r00)*(x668)*(x671)))+(cj12)+(((cj15)*(sj14)*(x678)))+(((IkReal(-1.00000000000000))*(x671)*(x672))));
evalcond[4]=((((IkReal(-0.0136000000000000))*(r20)*(x668)))+(((IkReal(-1.00000000000000))*(r20)*(x668)*(x675)))+(((IkReal(-0.354900000000000))*(x684)))+(((IkReal(-0.354900000000000))*(x682)))+(((IkReal(-1.00000000000000))*(x673)*(x691)))+(((IkReal(0.136600000000000))*(sj12)))+(((r22)*(x681)))+(((IkReal(-1.00000000000000))*(r20)*(x668)*(x669)))+(((r21)*(x669)*(x679)))+(((IkReal(0.0136000000000000))*(r21)*(x679)))+(((x676)*(x682)))+(((x676)*(x684)))+(((IkReal(-1.00000000000000))*(x670)*(x675)))+(((IkReal(-1.00000000000000))*(pz)))+(((r21)*(x675)*(x679)))+(((x673)*(x686)))+(((IkReal(0.0182200000000000))*(x686)))+(((IkReal(-1.00000000000000))*(x669)*(x670)))+(((IkReal(-1.00000000000000))*(x682)*(x683)))+(((IkReal(-0.0182200000000000))*(x691)))+(((IkReal(-1.00000000000000))*(x683)*(x684)))+(((IkReal(-0.0136000000000000))*(x670))));
evalcond[5]=((IkReal(-0.0300000000000000))+(((x673)*(x678)))+(((IkReal(-0.354900000000000))*(x687)))+(((IkReal(-0.354900000000000))*(x688)))+(((IkReal(-1.00000000000000))*(r00)*(x668)*(x669)))+(((IkReal(-0.0182200000000000))*(x674)))+(((IkReal(-0.136600000000000))*(cj12)))+(((IkReal(-1.00000000000000))*(r00)*(x668)*(x675)))+(((x676)*(x687)))+(((x676)*(x688)))+(((IkReal(-1.00000000000000))*(px)))+(((cj15)*(x669)*(x678)))+(((IkReal(-1.00000000000000))*(x669)*(x672)))+(((IkReal(0.0136000000000000))*(cj15)*(x678)))+(((IkReal(-1.00000000000000))*(x672)*(x675)))+(((IkReal(-1.00000000000000))*(x683)*(x688)))+(((IkReal(-1.00000000000000))*(x683)*(x687)))+(((IkReal(0.0182200000000000))*(x678)))+(((IkReal(-0.0136000000000000))*(r00)*(x668)))+(((IkReal(-1.00000000000000))*(x673)*(x674)))+(((cj15)*(x675)*(x678)))+(((r02)*(x681)))+(((IkReal(-0.0136000000000000))*(x672))));
evalcond[6]=((IkReal(-0.0104000000000000))+(((IkReal(-1.00000000000000))*(r10)*(x668)*(x669)))+(((IkReal(-0.0136000000000000))*(x680)))+(((IkReal(0.0136000000000000))*(r11)*(x679)))+(((IkReal(-0.354900000000000))*(x685)))+(((r11)*(x669)*(x679)))+(((IkReal(-0.354900000000000))*(x677)))+(((IkReal(-1.00000000000000))*(x673)*(x692)))+(((x676)*(x677)))+(((IkReal(-1.00000000000000))*(x675)*(x680)))+(((x676)*(x685)))+(((IkReal(-1.00000000000000))*(r10)*(x668)*(x675)))+(((IkReal(-1.00000000000000))*(py)))+(((x673)*(x690)))+(((IkReal(0.0182200000000000))*(x690)))+(((IkReal(-0.0182200000000000))*(x692)))+(((IkReal(-1.00000000000000))*(x677)*(x683)))+(((IkReal(-0.0136000000000000))*(r10)*(x668)))+(((IkReal(-1.00000000000000))*(x683)*(x685)))+(((r12)*(x681)))+(((r11)*(x675)*(x679)))+(((IkReal(-1.00000000000000))*(x669)*(x680))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  )
{
{
IkReal j13array[1], cj13array[1], sj13array[1];
bool j13valid[1]={false};
_nj13 = 1;
IkReal x695=((IkReal(1.00000000000000))*(sj15));
IkReal x696=((r11)*(sj16));
IkReal x697=((cj14)*(cj15));
IkReal x698=((cj16)*(r10));
if( IKabs(((((sj15)*(x698)))+(((IkReal(-1.00000000000000))*(cj15)*(r12)))+(((IkReal(-1.00000000000000))*(x695)*(x696))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((IkReal(-1.00000000000000))*(cj14)*(r12)*(x695)))+(((x696)*(x697)))+(((IkReal(-1.00000000000000))*(x697)*(x698)))+(((cj16)*(r11)*(sj14)))+(((r10)*(sj14)*(sj16))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((sj15)*(x698)))+(((IkReal(-1.00000000000000))*(cj15)*(r12)))+(((IkReal(-1.00000000000000))*(x695)*(x696)))))+IKsqr(((((IkReal(-1.00000000000000))*(cj14)*(r12)*(x695)))+(((x696)*(x697)))+(((IkReal(-1.00000000000000))*(x697)*(x698)))+(((cj16)*(r11)*(sj14)))+(((r10)*(sj14)*(sj16)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j13array[0]=IKatan2(((((sj15)*(x698)))+(((IkReal(-1.00000000000000))*(cj15)*(r12)))+(((IkReal(-1.00000000000000))*(x695)*(x696)))), ((((IkReal(-1.00000000000000))*(cj14)*(r12)*(x695)))+(((x696)*(x697)))+(((IkReal(-1.00000000000000))*(x697)*(x698)))+(((cj16)*(r11)*(sj14)))+(((r10)*(sj14)*(sj16)))));
sj13array[0]=IKsin(j13array[0]);
cj13array[0]=IKcos(j13array[0]);
if( j13array[0] > IKPI )
{
    j13array[0]-=IK2PI;
}
else if( j13array[0] < -IKPI )
{    j13array[0]+=IK2PI;
}
j13valid[0] = true;
for(int ij13 = 0; ij13 < 1; ++ij13)
{
if( !j13valid[ij13] )
{
    continue;
}
_ij13[0] = ij13; _ij13[1] = -1;
for(int iij13 = ij13+1; iij13 < 1; ++iij13)
{
if( j13valid[iij13] && IKabs(cj13array[ij13]-cj13array[iij13]) < IKFAST_SOLUTION_THRESH && IKabs(sj13array[ij13]-sj13array[iij13]) < IKFAST_SOLUTION_THRESH )
{
    j13valid[iij13]=false; _ij13[1] = iij13; break; 
}
}
j13 = j13array[ij13]; cj13 = cj13array[ij13]; sj13 = sj13array[ij13];
{
IkReal evalcond[6];
IkReal x699=IKcos(j13);
IkReal x700=IKsin(j13);
IkReal x701=((IkReal(1.00000000000000))*(cj14));
IkReal x702=((sj14)*(sj16));
IkReal x703=((cj15)*(cj16));
IkReal x704=((IkReal(1.00000000000000))*(sj12));
IkReal x705=((sj15)*(sj16));
IkReal x706=((cj16)*(sj14));
IkReal x707=((IkReal(1.00000000000000))*(cj16)*(sj15));
IkReal x708=((IkReal(1.00000000000000))*(x699));
IkReal x709=((cj14)*(cj15)*(sj16));
evalcond[0]=((((cj15)*(r22)))+(((IkReal(-1.00000000000000))*(cj12)*(x708)))+(((IkReal(-1.00000000000000))*(r20)*(x707)))+(((r21)*(x705))));
evalcond[1]=((((cj15)*(r02)))+(((r01)*(x705)))+(((IkReal(-1.00000000000000))*(x699)*(x704)))+(((IkReal(-1.00000000000000))*(r00)*(x707))));
evalcond[2]=((((cj15)*(r12)))+(((IkReal(-1.00000000000000))*(r10)*(x707)))+(x700)+(((r11)*(x705))));
evalcond[3]=((((IkReal(-1.00000000000000))*(cj12)*(x700)))+(((IkReal(-1.00000000000000))*(r20)*(x701)*(x703)))+(((r20)*(x702)))+(((r21)*(x709)))+(((r21)*(x706)))+(((IkReal(-1.00000000000000))*(r22)*(sj15)*(x701))));
evalcond[4]=((((IkReal(-1.00000000000000))*(r00)*(x701)*(x703)))+(((r01)*(x706)))+(((r01)*(x709)))+(((r00)*(x702)))+(((IkReal(-1.00000000000000))*(r02)*(sj15)*(x701)))+(((IkReal(-1.00000000000000))*(x700)*(x704))));
evalcond[5]=((((IkReal(-1.00000000000000))*(r10)*(x701)*(x703)))+(((IkReal(-1.00000000000000))*(x708)))+(((IkReal(-1.00000000000000))*(r12)*(sj15)*(x701)))+(((r10)*(x702)))+(((r11)*(x706)))+(((r11)*(x709))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j11;
vinfos[0].indices[0] = _ij11[0];
vinfos[0].indices[1] = _ij11[1];
vinfos[0].maxsolutions = _nj11;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j12;
vinfos[1].indices[0] = _ij12[0];
vinfos[1].indices[1] = _ij12[1];
vinfos[1].maxsolutions = _nj12;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j13;
vinfos[2].indices[0] = _ij13[0];
vinfos[2].indices[1] = _ij13[1];
vinfos[2].maxsolutions = _nj13;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j14;
vinfos[3].indices[0] = _ij14[0];
vinfos[3].indices[1] = _ij14[1];
vinfos[3].maxsolutions = _nj14;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j15;
vinfos[4].indices[0] = _ij15[0];
vinfos[4].indices[1] = _ij15[1];
vinfos[4].maxsolutions = _nj15;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j16;
vinfos[5].indices[0] = _ij16[0];
vinfos[5].indices[1] = _ij16[1];
vinfos[5].maxsolutions = _nj16;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

} else
{
IkReal x710=((IkReal(0.0159000000000000))*(sj16));
IkReal x711=((cj15)*(r11));
IkReal x712=((r22)*(sj15));
IkReal x713=((r00)*(sj14));
IkReal x714=((IkReal(0.000500000000000000))*(sj15));
IkReal x715=((r01)*(sj16));
IkReal x716=((r20)*(sj14));
IkReal x717=((IkReal(0.210000000000000))*(sj16));
IkReal x718=((cj15)*(r21));
IkReal x719=((cj16)*(r21));
IkReal x720=((cj15)*(cj16));
IkReal x721=((r10)*(sj14));
IkReal x722=((cj14)*(r00));
IkReal x723=((IkReal(0.354900000000000))*(sj16));
IkReal x724=((sj14)*(sj16));
IkReal x725=((cj16)*(r00));
IkReal x726=((IkReal(0.0159000000000000))*(cj14));
IkReal x727=((r02)*(sj15));
IkReal x728=((IkReal(1.00000000000000))*(sj16));
IkReal x729=((cj14)*(r20));
IkReal x730=((cj14)*(r10));
IkReal x731=((IkReal(0.000500000000000000))*(cj15));
IkReal x732=((IkReal(1.00000000000000))*(cj14));
IkReal x733=((IkReal(0.210000000000000))*(sj14));
IkReal x734=((cj16)*(r10));
IkReal x735=((IkReal(1.00000000000000))*(sj14));
IkReal x736=((IkReal(0.0159000000000000))*(sj14));
IkReal x737=((cj16)*(r11));
IkReal x738=((r12)*(sj15));
IkReal x739=((r21)*(sj16));
IkReal x740=((cj16)*(r01));
IkReal x741=((cj16)*(r20));
IkReal x742=((r11)*(sj16));
IkReal x743=((IkReal(0.0136000000000000))*(sj16));
IkReal x744=((sj14)*(x738));
IkReal x745=((IkReal(0.210000000000000))*(cj14)*(cj16));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(1.57079632679490))+(j12)), IkReal(6.28318530717959))));
evalcond[1]=((((sj15)*(x739)))+(((IkReal(-1.00000000000000))*(sj15)*(x741)))+(((cj15)*(r22))));
evalcond[2]=((IkReal(-1.00000000000000))+(((IkReal(-1.00000000000000))*(x712)*(x735)))+(((IkReal(-1.00000000000000))*(x716)*(x720)))+(((x718)*(x724)))+(((IkReal(-1.00000000000000))*(x719)*(x732)))+(((IkReal(-1.00000000000000))*(x728)*(x729))));
evalcond[3]=((((cj14)*(sj16)*(x718)))+(((IkReal(-1.00000000000000))*(x712)*(x732)))+(((sj16)*(x716)))+(((IkReal(-1.00000000000000))*(x720)*(x729)))+(((sj14)*(x719))));
evalcond[4]=((((IkReal(-1.00000000000000))*(x732)*(x737)))+(((IkReal(-1.00000000000000))*(x735)*(x738)))+(((IkReal(-1.00000000000000))*(x720)*(x721)))+(((x711)*(x724)))+(((IkReal(-1.00000000000000))*(x728)*(x730))));
evalcond[5]=((((IkReal(-1.00000000000000))*(x727)*(x735)))+(((IkReal(-1.00000000000000))*(x722)*(x728)))+(((cj15)*(sj14)*(x715)))+(((IkReal(-1.00000000000000))*(x732)*(x740)))+(((IkReal(-1.00000000000000))*(x713)*(x720))));
evalcond[6]=((IkReal(0.136600000000000))+(((IkReal(-1.00000000000000))*(x712)*(x733)))+(((IkReal(-0.0136000000000000))*(x712)))+(((cj14)*(x710)*(x718)))+(((IkReal(0.0182200000000000))*(x739)))+(((x718)*(x743)))+(((IkReal(-1.00000000000000))*(x717)*(x729)))+(((IkReal(-1.00000000000000))*(x714)*(x741)))+(((x710)*(x716)))+(((IkReal(-1.00000000000000))*(pz)))+(((sj14)*(x717)*(x718)))+(((IkReal(-0.0136000000000000))*(r20)*(x720)))+(((IkReal(-0.210000000000000))*(x716)*(x720)))+(((IkReal(-1.00000000000000))*(r20)*(x720)*(x726)))+(((IkReal(-1.00000000000000))*(r20)*(x723)))+(((r22)*(x731)))+(((x719)*(x736)))+(((x714)*(x739)))+(((IkReal(-0.210000000000000))*(cj14)*(x719)))+(((IkReal(-0.0182200000000000))*(x741)))+(((IkReal(-1.00000000000000))*(x712)*(x726)))+(((IkReal(-0.354900000000000))*(x719))));
evalcond[7]=((((IkReal(0.0136000000000000))*(cj15)*(x715)))+(((IkReal(-1.00000000000000))*(r00)*(x723)))+(((x714)*(x715)))+(((IkReal(-0.0182200000000000))*(x725)))+(((IkReal(-1.00000000000000))*(x727)*(x733)))+(((IkReal(0.0182200000000000))*(x715)))+(((IkReal(-1.00000000000000))*(x717)*(x722)))+(((IkReal(-0.0159000000000000))*(x720)*(x722)))+(((IkReal(-0.210000000000000))*(x713)*(x720)))+(((x710)*(x713)))+(((IkReal(-1.00000000000000))*(px)))+(((IkReal(-0.0136000000000000))*(r00)*(x720)))+(((cj14)*(cj15)*(r01)*(x710)))+(((r02)*(x731)))+(((IkReal(-1.00000000000000))*(x726)*(x727)))+(((IkReal(0.0300000000000000))*(sj11)))+(((IkReal(0.0104000000000000))*(cj11)))+(((IkReal(-1.00000000000000))*(x714)*(x725)))+(((cj15)*(x715)*(x733)))+(((IkReal(-0.354900000000000))*(x740)))+(((IkReal(-0.210000000000000))*(cj14)*(x740)))+(((IkReal(-0.0136000000000000))*(x727)))+(((x736)*(x740))));
evalcond[8]=((((r12)*(x731)))+(((IkReal(-0.210000000000000))*(x720)*(x721)))+(((IkReal(-0.0136000000000000))*(r10)*(x720)))+(((x711)*(x743)))+(((cj14)*(x710)*(x711)))+(((x714)*(x742)))+(((IkReal(-0.354900000000000))*(x737)))+(((IkReal(-0.0182200000000000))*(x734)))+(((x736)*(x737)))+(((x710)*(x721)))+(((IkReal(-1.00000000000000))*(r10)*(x720)*(x726)))+(((sj14)*(x711)*(x717)))+(((IkReal(-1.00000000000000))*(x733)*(x738)))+(((IkReal(-1.00000000000000))*(x717)*(x730)))+(((IkReal(-1.00000000000000))*(py)))+(((IkReal(-0.210000000000000))*(cj14)*(x737)))+(((IkReal(0.0104000000000000))*(sj11)))+(((IkReal(-1.00000000000000))*(r10)*(x723)))+(((IkReal(-1.00000000000000))*(x714)*(x734)))+(((IkReal(-1.00000000000000))*(x726)*(x738)))+(((IkReal(-0.0136000000000000))*(x738)))+(((IkReal(0.0182200000000000))*(x742)))+(((IkReal(-0.0300000000000000))*(cj11))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  && IKabs(evalcond[7]) < 0.0000010000000000  && IKabs(evalcond[8]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst3;
gconst3=IKsign((((sj11)*(sj11))+((cj11)*(cj11))));
dummyeval[0]=(((sj11)*(sj11))+((cj11)*(cj11)));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst4;
gconst4=IKsign((((sj11)*(sj11))+((cj11)*(cj11))));
dummyeval[0]=(((sj11)*(sj11))+((cj11)*(cj11)));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j13array[1], cj13array[1], sj13array[1];
bool j13valid[1]={false};
_nj13 = 1;
IkReal x746=((IkReal(1.00000000000000))*(cj15));
IkReal x747=((IkReal(1.00000000000000))*(sj14));
IkReal x748=((sj11)*(sj16));
IkReal x749=((cj16)*(r01));
IkReal x750=((cj11)*(cj15));
IkReal x751=((IkReal(1.00000000000000))*(sj15));
IkReal x752=((cj16)*(r00));
IkReal x753=((cj11)*(r01)*(sj16));
IkReal x754=((cj14)*(r02)*(sj15));
IkReal x755=((sj11)*(x752));
if( IKabs(((gconst4)*(((((cj14)*(cj15)*(x755)))+(((r02)*(x750)))+(((sj15)*(x753)))+(((IkReal(-1.00000000000000))*(r00)*(x747)*(x748)))+(((sj11)*(x754)))+(((IkReal(-1.00000000000000))*(cj14)*(r01)*(x746)*(x748)))+(((IkReal(-1.00000000000000))*(cj11)*(x751)*(x752)))+(((IkReal(-1.00000000000000))*(sj11)*(x747)*(x749))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst4)*(((((cj11)*(x754)))+(((IkReal(-1.00000000000000))*(r01)*(x748)*(x751)))+(((IkReal(-1.00000000000000))*(cj11)*(r00)*(sj16)*(x747)))+(((IkReal(-1.00000000000000))*(cj14)*(x746)*(x753)))+(((sj15)*(x755)))+(((cj14)*(x750)*(x752)))+(((IkReal(-1.00000000000000))*(cj11)*(x747)*(x749)))+(((IkReal(-1.00000000000000))*(r02)*(sj11)*(x746))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j13array[0]=IKatan2(((gconst4)*(((((cj14)*(cj15)*(x755)))+(((r02)*(x750)))+(((sj15)*(x753)))+(((IkReal(-1.00000000000000))*(r00)*(x747)*(x748)))+(((sj11)*(x754)))+(((IkReal(-1.00000000000000))*(cj14)*(r01)*(x746)*(x748)))+(((IkReal(-1.00000000000000))*(cj11)*(x751)*(x752)))+(((IkReal(-1.00000000000000))*(sj11)*(x747)*(x749)))))), ((gconst4)*(((((cj11)*(x754)))+(((IkReal(-1.00000000000000))*(r01)*(x748)*(x751)))+(((IkReal(-1.00000000000000))*(cj11)*(r00)*(sj16)*(x747)))+(((IkReal(-1.00000000000000))*(cj14)*(x746)*(x753)))+(((sj15)*(x755)))+(((cj14)*(x750)*(x752)))+(((IkReal(-1.00000000000000))*(cj11)*(x747)*(x749)))+(((IkReal(-1.00000000000000))*(r02)*(sj11)*(x746)))))));
sj13array[0]=IKsin(j13array[0]);
cj13array[0]=IKcos(j13array[0]);
if( j13array[0] > IKPI )
{
    j13array[0]-=IK2PI;
}
else if( j13array[0] < -IKPI )
{    j13array[0]+=IK2PI;
}
j13valid[0] = true;
for(int ij13 = 0; ij13 < 1; ++ij13)
{
if( !j13valid[ij13] )
{
    continue;
}
_ij13[0] = ij13; _ij13[1] = -1;
for(int iij13 = ij13+1; iij13 < 1; ++iij13)
{
if( j13valid[iij13] && IKabs(cj13array[ij13]-cj13array[iij13]) < IKFAST_SOLUTION_THRESH && IKabs(sj13array[ij13]-sj13array[iij13]) < IKFAST_SOLUTION_THRESH )
{
    j13valid[iij13]=false; _ij13[1] = iij13; break; 
}
}
j13 = j13array[ij13]; cj13 = cj13array[ij13]; sj13 = sj13array[ij13];
{
IkReal evalcond[4];
IkReal x756=IKcos(j13);
IkReal x757=IKsin(j13);
IkReal x758=((IkReal(1.00000000000000))*(cj14));
IkReal x759=((sj14)*(sj16));
IkReal x760=((IkReal(1.00000000000000))*(cj11));
IkReal x761=((cj15)*(cj16));
IkReal x762=((r11)*(sj16));
IkReal x763=((cj14)*(cj15));
IkReal x764=((cj16)*(sj14));
IkReal x765=((r01)*(sj16));
IkReal x766=((sj11)*(x756));
IkReal x767=((sj11)*(x757));
IkReal x768=((IkReal(1.00000000000000))*(cj16)*(sj15));
IkReal x769=((x757)*(x760));
evalcond[0]=((((IkReal(-1.00000000000000))*(r00)*(x768)))+(((cj15)*(r02)))+(((sj15)*(x765)))+(((IkReal(-1.00000000000000))*(x769)))+(x766));
evalcond[1]=((((IkReal(-1.00000000000000))*(x756)*(x760)))+(((cj15)*(r12)))+(((sj15)*(x762)))+(((IkReal(-1.00000000000000))*(r10)*(x768)))+(((IkReal(-1.00000000000000))*(x767))));
evalcond[2]=((((cj11)*(x756)))+(((x763)*(x765)))+(((r00)*(x759)))+(((IkReal(-1.00000000000000))*(r02)*(sj15)*(x758)))+(x767)+(((IkReal(-1.00000000000000))*(r00)*(x758)*(x761)))+(((r01)*(x764))));
evalcond[3]=((((r10)*(x759)))+(((IkReal(-1.00000000000000))*(r12)*(sj15)*(x758)))+(((IkReal(-1.00000000000000))*(x769)))+(((IkReal(-1.00000000000000))*(r10)*(x758)*(x761)))+(((x762)*(x763)))+(x766)+(((r11)*(x764))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j11;
vinfos[0].indices[0] = _ij11[0];
vinfos[0].indices[1] = _ij11[1];
vinfos[0].maxsolutions = _nj11;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j12;
vinfos[1].indices[0] = _ij12[0];
vinfos[1].indices[1] = _ij12[1];
vinfos[1].maxsolutions = _nj12;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j13;
vinfos[2].indices[0] = _ij13[0];
vinfos[2].indices[1] = _ij13[1];
vinfos[2].maxsolutions = _nj13;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j14;
vinfos[3].indices[0] = _ij14[0];
vinfos[3].indices[1] = _ij14[1];
vinfos[3].maxsolutions = _nj14;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j15;
vinfos[4].indices[0] = _ij15[0];
vinfos[4].indices[1] = _ij15[1];
vinfos[4].maxsolutions = _nj15;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j16;
vinfos[5].indices[0] = _ij16[0];
vinfos[5].indices[1] = _ij16[1];
vinfos[5].maxsolutions = _nj16;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j13array[1], cj13array[1], sj13array[1];
bool j13valid[1]={false};
_nj13 = 1;
IkReal x770=((cj15)*(sj11));
IkReal x771=((cj11)*(cj15));
IkReal x772=((cj16)*(sj15));
IkReal x773=((IkReal(1.00000000000000))*(sj11));
IkReal x774=((IkReal(1.00000000000000))*(cj11));
IkReal x775=((r01)*(sj15)*(sj16));
IkReal x776=((r11)*(sj15)*(sj16));
if( IKabs(((gconst3)*(((((IkReal(-1.00000000000000))*(r10)*(x772)*(x773)))+(((IkReal(-1.00000000000000))*(r00)*(x772)*(x774)))+(((r12)*(x770)))+(((sj11)*(x776)))+(((cj11)*(x775)))+(((r02)*(x771))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst3)*(((((IkReal(-1.00000000000000))*(r02)*(x770)))+(((IkReal(-1.00000000000000))*(r10)*(x772)*(x774)))+(((r12)*(x771)))+(((IkReal(-1.00000000000000))*(x773)*(x775)))+(((r00)*(sj11)*(x772)))+(((cj11)*(x776))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j13array[0]=IKatan2(((gconst3)*(((((IkReal(-1.00000000000000))*(r10)*(x772)*(x773)))+(((IkReal(-1.00000000000000))*(r00)*(x772)*(x774)))+(((r12)*(x770)))+(((sj11)*(x776)))+(((cj11)*(x775)))+(((r02)*(x771)))))), ((gconst3)*(((((IkReal(-1.00000000000000))*(r02)*(x770)))+(((IkReal(-1.00000000000000))*(r10)*(x772)*(x774)))+(((r12)*(x771)))+(((IkReal(-1.00000000000000))*(x773)*(x775)))+(((r00)*(sj11)*(x772)))+(((cj11)*(x776)))))));
sj13array[0]=IKsin(j13array[0]);
cj13array[0]=IKcos(j13array[0]);
if( j13array[0] > IKPI )
{
    j13array[0]-=IK2PI;
}
else if( j13array[0] < -IKPI )
{    j13array[0]+=IK2PI;
}
j13valid[0] = true;
for(int ij13 = 0; ij13 < 1; ++ij13)
{
if( !j13valid[ij13] )
{
    continue;
}
_ij13[0] = ij13; _ij13[1] = -1;
for(int iij13 = ij13+1; iij13 < 1; ++iij13)
{
if( j13valid[iij13] && IKabs(cj13array[ij13]-cj13array[iij13]) < IKFAST_SOLUTION_THRESH && IKabs(sj13array[ij13]-sj13array[iij13]) < IKFAST_SOLUTION_THRESH )
{
    j13valid[iij13]=false; _ij13[1] = iij13; break; 
}
}
j13 = j13array[ij13]; cj13 = cj13array[ij13]; sj13 = sj13array[ij13];
{
IkReal evalcond[4];
IkReal x777=IKcos(j13);
IkReal x778=IKsin(j13);
IkReal x779=((IkReal(1.00000000000000))*(cj14));
IkReal x780=((sj14)*(sj16));
IkReal x781=((IkReal(1.00000000000000))*(cj11));
IkReal x782=((cj15)*(cj16));
IkReal x783=((r11)*(sj16));
IkReal x784=((cj14)*(cj15));
IkReal x785=((cj16)*(sj14));
IkReal x786=((r01)*(sj16));
IkReal x787=((sj11)*(x777));
IkReal x788=((sj11)*(x778));
IkReal x789=((IkReal(1.00000000000000))*(cj16)*(sj15));
IkReal x790=((x778)*(x781));
evalcond[0]=((((sj15)*(x786)))+(((cj15)*(r02)))+(((IkReal(-1.00000000000000))*(r00)*(x789)))+(((IkReal(-1.00000000000000))*(x790)))+(x787));
evalcond[1]=((((sj15)*(x783)))+(((cj15)*(r12)))+(((IkReal(-1.00000000000000))*(x777)*(x781)))+(((IkReal(-1.00000000000000))*(r10)*(x789)))+(((IkReal(-1.00000000000000))*(x788))));
evalcond[2]=((((r00)*(x780)))+(((r01)*(x785)))+(((IkReal(-1.00000000000000))*(r00)*(x779)*(x782)))+(((x784)*(x786)))+(x788)+(((IkReal(-1.00000000000000))*(r02)*(sj15)*(x779)))+(((cj11)*(x777))));
evalcond[3]=((((IkReal(-1.00000000000000))*(x790)))+(((IkReal(-1.00000000000000))*(r12)*(sj15)*(x779)))+(((r10)*(x780)))+(((x783)*(x784)))+(((IkReal(-1.00000000000000))*(r10)*(x779)*(x782)))+(((r11)*(x785)))+(x787));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j11;
vinfos[0].indices[0] = _ij11[0];
vinfos[0].indices[1] = _ij11[1];
vinfos[0].maxsolutions = _nj11;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j12;
vinfos[1].indices[0] = _ij12[0];
vinfos[1].indices[1] = _ij12[1];
vinfos[1].maxsolutions = _nj12;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j13;
vinfos[2].indices[0] = _ij13[0];
vinfos[2].indices[1] = _ij13[1];
vinfos[2].maxsolutions = _nj13;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j14;
vinfos[3].indices[0] = _ij14[0];
vinfos[3].indices[1] = _ij14[1];
vinfos[3].maxsolutions = _nj14;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j15;
vinfos[4].indices[0] = _ij15[0];
vinfos[4].indices[1] = _ij15[1];
vinfos[4].maxsolutions = _nj15;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j16;
vinfos[5].indices[0] = _ij16[0];
vinfos[5].indices[1] = _ij16[1];
vinfos[5].maxsolutions = _nj16;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
IkReal x791=((IkReal(0.0159000000000000))*(sj16));
IkReal x792=((cj15)*(r11));
IkReal x793=((r22)*(sj15));
IkReal x794=((r00)*(sj14));
IkReal x795=((IkReal(0.000500000000000000))*(sj15));
IkReal x796=((r01)*(sj16));
IkReal x797=((r20)*(sj14));
IkReal x798=((IkReal(0.210000000000000))*(sj16));
IkReal x799=((cj15)*(r21));
IkReal x800=((cj16)*(r21));
IkReal x801=((cj15)*(cj16));
IkReal x802=((r10)*(sj14));
IkReal x803=((cj14)*(r00));
IkReal x804=((IkReal(0.354900000000000))*(sj16));
IkReal x805=((sj14)*(sj16));
IkReal x806=((cj16)*(r00));
IkReal x807=((IkReal(0.0159000000000000))*(cj14));
IkReal x808=((r02)*(sj15));
IkReal x809=((IkReal(1.00000000000000))*(sj16));
IkReal x810=((cj14)*(r20));
IkReal x811=((cj14)*(r10));
IkReal x812=((IkReal(0.000500000000000000))*(cj15));
IkReal x813=((IkReal(1.00000000000000))*(cj14));
IkReal x814=((IkReal(0.210000000000000))*(sj14));
IkReal x815=((cj16)*(r10));
IkReal x816=((IkReal(1.00000000000000))*(sj14));
IkReal x817=((IkReal(0.0159000000000000))*(sj14));
IkReal x818=((cj16)*(r11));
IkReal x819=((r12)*(sj15));
IkReal x820=((r21)*(sj16));
IkReal x821=((cj16)*(r01));
IkReal x822=((cj16)*(r20));
IkReal x823=((r11)*(sj16));
IkReal x824=((IkReal(0.0136000000000000))*(sj16));
IkReal x825=((sj14)*(x819));
IkReal x826=((IkReal(0.210000000000000))*(cj14)*(cj16));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(4.71238898038469))+(j12)), IkReal(6.28318530717959))));
evalcond[1]=((((IkReal(-1.00000000000000))*(sj15)*(x822)))+(((cj15)*(r22)))+(((sj15)*(x820))));
evalcond[2]=((IkReal(1.00000000000000))+(((IkReal(-1.00000000000000))*(x793)*(x816)))+(((IkReal(-1.00000000000000))*(x809)*(x810)))+(((IkReal(-1.00000000000000))*(x797)*(x801)))+(((x799)*(x805)))+(((IkReal(-1.00000000000000))*(x800)*(x813))));
evalcond[3]=((((IkReal(-1.00000000000000))*(x793)*(x813)))+(((sj14)*(x800)))+(((IkReal(-1.00000000000000))*(x801)*(x810)))+(((sj16)*(x797)))+(((cj14)*(sj16)*(x799))));
evalcond[4]=((((IkReal(-1.00000000000000))*(x816)*(x819)))+(((IkReal(-1.00000000000000))*(x801)*(x802)))+(((IkReal(-1.00000000000000))*(x809)*(x811)))+(((IkReal(-1.00000000000000))*(x813)*(x818)))+(((x792)*(x805))));
evalcond[5]=((((IkReal(-1.00000000000000))*(x808)*(x816)))+(((IkReal(-1.00000000000000))*(x813)*(x821)))+(((cj15)*(sj14)*(x796)))+(((IkReal(-1.00000000000000))*(x803)*(x809)))+(((IkReal(-1.00000000000000))*(x794)*(x801))));
evalcond[6]=((IkReal(-0.136600000000000))+(((x795)*(x820)))+(((IkReal(-1.00000000000000))*(x793)*(x814)))+(((x799)*(x824)))+(((IkReal(-0.0182200000000000))*(x822)))+(((IkReal(-1.00000000000000))*(x795)*(x822)))+(((IkReal(-0.0136000000000000))*(x793)))+(((IkReal(-1.00000000000000))*(r20)*(x801)*(x807)))+(((IkReal(-1.00000000000000))*(x793)*(x807)))+(((IkReal(-1.00000000000000))*(pz)))+(((IkReal(-1.00000000000000))*(r20)*(x804)))+(((cj14)*(x791)*(x799)))+(((IkReal(-1.00000000000000))*(x798)*(x810)))+(((IkReal(-0.354900000000000))*(x800)))+(((x800)*(x817)))+(((r22)*(x812)))+(((IkReal(-0.0136000000000000))*(r20)*(x801)))+(((IkReal(-0.210000000000000))*(cj14)*(x800)))+(((sj14)*(x798)*(x799)))+(((IkReal(0.0182200000000000))*(x820)))+(((IkReal(-0.210000000000000))*(x797)*(x801)))+(((x791)*(x797))));
evalcond[7]=((((cj14)*(cj15)*(r01)*(x791)))+(((IkReal(-1.00000000000000))*(x807)*(x808)))+(((IkReal(-0.210000000000000))*(cj14)*(x821)))+(((IkReal(-1.00000000000000))*(x808)*(x814)))+(((IkReal(-1.00000000000000))*(x798)*(x803)))+(((IkReal(-0.210000000000000))*(x794)*(x801)))+(((IkReal(-0.0136000000000000))*(x808)))+(((IkReal(-0.354900000000000))*(x821)))+(((cj15)*(x796)*(x814)))+(((x817)*(x821)))+(((IkReal(0.0182200000000000))*(x796)))+(((IkReal(-1.00000000000000))*(px)))+(((IkReal(-1.00000000000000))*(r00)*(x804)))+(((IkReal(-0.0182200000000000))*(x806)))+(((IkReal(-1.00000000000000))*(x795)*(x806)))+(((IkReal(0.0300000000000000))*(sj11)))+(((IkReal(0.0104000000000000))*(cj11)))+(((IkReal(0.0136000000000000))*(cj15)*(x796)))+(((x791)*(x794)))+(((IkReal(-0.0159000000000000))*(x801)*(x803)))+(((IkReal(-0.0136000000000000))*(r00)*(x801)))+(((r02)*(x812)))+(((x795)*(x796))));
evalcond[8]=((((x795)*(x823)))+(((IkReal(-0.0136000000000000))*(r10)*(x801)))+(((IkReal(-0.354900000000000))*(x818)))+(((x792)*(x824)))+(((IkReal(-0.210000000000000))*(cj14)*(x818)))+(((IkReal(-1.00000000000000))*(r10)*(x801)*(x807)))+(((IkReal(-1.00000000000000))*(x814)*(x819)))+(((x791)*(x802)))+(((IkReal(-1.00000000000000))*(py)))+(((x817)*(x818)))+(((cj14)*(x791)*(x792)))+(((IkReal(-1.00000000000000))*(x798)*(x811)))+(((IkReal(-1.00000000000000))*(x807)*(x819)))+(((IkReal(0.0104000000000000))*(sj11)))+(((sj14)*(x792)*(x798)))+(((IkReal(-0.0136000000000000))*(x819)))+(((IkReal(0.0182200000000000))*(x823)))+(((r12)*(x812)))+(((IkReal(-1.00000000000000))*(r10)*(x804)))+(((IkReal(-0.0182200000000000))*(x815)))+(((IkReal(-1.00000000000000))*(x795)*(x815)))+(((IkReal(-0.210000000000000))*(x801)*(x802)))+(((IkReal(-0.0300000000000000))*(cj11))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  && IKabs(evalcond[7]) < 0.0000010000000000  && IKabs(evalcond[8]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst5;
gconst5=IKsign((((sj11)*(sj11))+((cj11)*(cj11))));
dummyeval[0]=(((sj11)*(sj11))+((cj11)*(cj11)));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst6;
gconst6=IKsign((((sj11)*(sj11))+((cj11)*(cj11))));
dummyeval[0]=(((sj11)*(sj11))+((cj11)*(cj11)));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j13array[1], cj13array[1], sj13array[1];
bool j13valid[1]={false};
_nj13 = 1;
IkReal x827=((cj11)*(cj15));
IkReal x828=((cj16)*(sj14));
IkReal x829=((cj16)*(r10));
IkReal x830=((cj14)*(sj16));
IkReal x831=((cj11)*(sj15));
IkReal x832=((cj14)*(r12));
IkReal x833=((IkReal(1.00000000000000))*(cj11));
IkReal x834=((cj15)*(sj11));
IkReal x835=((IkReal(1.00000000000000))*(r11));
IkReal x836=((sj11)*(sj15));
IkReal x837=((sj11)*(x835));
IkReal x838=((r10)*(sj14)*(sj16));
if( IKabs(((gconst6)*(((((x831)*(x832)))+(((cj14)*(x827)*(x829)))+(((IkReal(-1.00000000000000))*(r11)*(x828)*(x833)))+(((IkReal(-1.00000000000000))*(x833)*(x838)))+(((r11)*(sj16)*(x836)))+(((IkReal(-1.00000000000000))*(x827)*(x830)*(x835)))+(((IkReal(-1.00000000000000))*(x829)*(x836)))+(((r12)*(x834))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst6)*(((((IkReal(-1.00000000000000))*(r12)*(x827)))+(((IkReal(-1.00000000000000))*(x830)*(x834)*(x835)))+(((IkReal(-1.00000000000000))*(x828)*(x837)))+(((x832)*(x836)))+(((cj14)*(x829)*(x834)))+(((x829)*(x831)))+(((IkReal(-1.00000000000000))*(sj16)*(x831)*(x835)))+(((IkReal(-1.00000000000000))*(sj11)*(x838))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j13array[0]=IKatan2(((gconst6)*(((((x831)*(x832)))+(((cj14)*(x827)*(x829)))+(((IkReal(-1.00000000000000))*(r11)*(x828)*(x833)))+(((IkReal(-1.00000000000000))*(x833)*(x838)))+(((r11)*(sj16)*(x836)))+(((IkReal(-1.00000000000000))*(x827)*(x830)*(x835)))+(((IkReal(-1.00000000000000))*(x829)*(x836)))+(((r12)*(x834)))))), ((gconst6)*(((((IkReal(-1.00000000000000))*(r12)*(x827)))+(((IkReal(-1.00000000000000))*(x830)*(x834)*(x835)))+(((IkReal(-1.00000000000000))*(x828)*(x837)))+(((x832)*(x836)))+(((cj14)*(x829)*(x834)))+(((x829)*(x831)))+(((IkReal(-1.00000000000000))*(sj16)*(x831)*(x835)))+(((IkReal(-1.00000000000000))*(sj11)*(x838)))))));
sj13array[0]=IKsin(j13array[0]);
cj13array[0]=IKcos(j13array[0]);
if( j13array[0] > IKPI )
{
    j13array[0]-=IK2PI;
}
else if( j13array[0] < -IKPI )
{    j13array[0]+=IK2PI;
}
j13valid[0] = true;
for(int ij13 = 0; ij13 < 1; ++ij13)
{
if( !j13valid[ij13] )
{
    continue;
}
_ij13[0] = ij13; _ij13[1] = -1;
for(int iij13 = ij13+1; iij13 < 1; ++iij13)
{
if( j13valid[iij13] && IKabs(cj13array[ij13]-cj13array[iij13]) < IKFAST_SOLUTION_THRESH && IKabs(sj13array[ij13]-sj13array[iij13]) < IKFAST_SOLUTION_THRESH )
{
    j13valid[iij13]=false; _ij13[1] = iij13; break; 
}
}
j13 = j13array[ij13]; cj13 = cj13array[ij13]; sj13 = sj13array[ij13];
{
IkReal evalcond[4];
IkReal x839=IKcos(j13);
IkReal x840=IKsin(j13);
IkReal x841=((IkReal(1.00000000000000))*(cj14));
IkReal x842=((IkReal(1.00000000000000))*(sj11));
IkReal x843=((sj14)*(sj16));
IkReal x844=((cj15)*(cj16));
IkReal x845=((r11)*(sj16));
IkReal x846=((cj16)*(sj14));
IkReal x847=((cj14)*(cj15));
IkReal x848=((r01)*(sj16));
IkReal x849=((cj11)*(x839));
IkReal x850=((IkReal(1.00000000000000))*(cj16)*(sj15));
IkReal x851=((cj11)*(x840));
IkReal x852=((x840)*(x842));
evalcond[0]=((((cj15)*(r02)))+(((sj15)*(x848)))+(((IkReal(-1.00000000000000))*(r00)*(x850)))+(((IkReal(-1.00000000000000))*(x851)))+(((IkReal(-1.00000000000000))*(x839)*(x842))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x852)))+(((sj15)*(x845)))+(((cj15)*(r12)))+(x849)+(((IkReal(-1.00000000000000))*(r10)*(x850))));
evalcond[2]=((((IkReal(-1.00000000000000))*(x852)))+(((IkReal(-1.00000000000000))*(r00)*(x841)*(x844)))+(((r01)*(x846)))+(((r00)*(x843)))+(((IkReal(-1.00000000000000))*(r02)*(sj15)*(x841)))+(((x847)*(x848)))+(x849));
evalcond[3]=((((IkReal(-1.00000000000000))*(r10)*(x841)*(x844)))+(((r10)*(x843)))+(((IkReal(-1.00000000000000))*(r12)*(sj15)*(x841)))+(((x845)*(x847)))+(x851)+(((r11)*(x846)))+(((sj11)*(x839))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j11;
vinfos[0].indices[0] = _ij11[0];
vinfos[0].indices[1] = _ij11[1];
vinfos[0].maxsolutions = _nj11;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j12;
vinfos[1].indices[0] = _ij12[0];
vinfos[1].indices[1] = _ij12[1];
vinfos[1].maxsolutions = _nj12;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j13;
vinfos[2].indices[0] = _ij13[0];
vinfos[2].indices[1] = _ij13[1];
vinfos[2].maxsolutions = _nj13;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j14;
vinfos[3].indices[0] = _ij14[0];
vinfos[3].indices[1] = _ij14[1];
vinfos[3].maxsolutions = _nj14;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j15;
vinfos[4].indices[0] = _ij15[0];
vinfos[4].indices[1] = _ij15[1];
vinfos[4].maxsolutions = _nj15;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j16;
vinfos[5].indices[0] = _ij16[0];
vinfos[5].indices[1] = _ij16[1];
vinfos[5].maxsolutions = _nj16;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j13array[1], cj13array[1], sj13array[1];
bool j13valid[1]={false};
_nj13 = 1;
IkReal x853=((cj15)*(r12));
IkReal x854=((IkReal(1.00000000000000))*(cj11));
IkReal x855=((cj16)*(sj15));
IkReal x856=((IkReal(1.00000000000000))*(sj11));
IkReal x857=((cj15)*(r02));
IkReal x858=((r01)*(sj15)*(sj16));
IkReal x859=((r11)*(sj15)*(sj16));
if( IKabs(((gconst5)*(((((sj11)*(x853)))+(((sj11)*(x859)))+(((IkReal(-1.00000000000000))*(r00)*(x854)*(x855)))+(((cj11)*(x857)))+(((cj11)*(x858)))+(((IkReal(-1.00000000000000))*(r10)*(x855)*(x856))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst5)*(((((cj11)*(r10)*(x855)))+(((IkReal(-1.00000000000000))*(r00)*(x855)*(x856)))+(((IkReal(-1.00000000000000))*(x853)*(x854)))+(((sj11)*(x858)))+(((sj11)*(x857)))+(((IkReal(-1.00000000000000))*(x854)*(x859))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j13array[0]=IKatan2(((gconst5)*(((((sj11)*(x853)))+(((sj11)*(x859)))+(((IkReal(-1.00000000000000))*(r00)*(x854)*(x855)))+(((cj11)*(x857)))+(((cj11)*(x858)))+(((IkReal(-1.00000000000000))*(r10)*(x855)*(x856)))))), ((gconst5)*(((((cj11)*(r10)*(x855)))+(((IkReal(-1.00000000000000))*(r00)*(x855)*(x856)))+(((IkReal(-1.00000000000000))*(x853)*(x854)))+(((sj11)*(x858)))+(((sj11)*(x857)))+(((IkReal(-1.00000000000000))*(x854)*(x859)))))));
sj13array[0]=IKsin(j13array[0]);
cj13array[0]=IKcos(j13array[0]);
if( j13array[0] > IKPI )
{
    j13array[0]-=IK2PI;
}
else if( j13array[0] < -IKPI )
{    j13array[0]+=IK2PI;
}
j13valid[0] = true;
for(int ij13 = 0; ij13 < 1; ++ij13)
{
if( !j13valid[ij13] )
{
    continue;
}
_ij13[0] = ij13; _ij13[1] = -1;
for(int iij13 = ij13+1; iij13 < 1; ++iij13)
{
if( j13valid[iij13] && IKabs(cj13array[ij13]-cj13array[iij13]) < IKFAST_SOLUTION_THRESH && IKabs(sj13array[ij13]-sj13array[iij13]) < IKFAST_SOLUTION_THRESH )
{
    j13valid[iij13]=false; _ij13[1] = iij13; break; 
}
}
j13 = j13array[ij13]; cj13 = cj13array[ij13]; sj13 = sj13array[ij13];
{
IkReal evalcond[4];
IkReal x860=IKcos(j13);
IkReal x861=IKsin(j13);
IkReal x862=((IkReal(1.00000000000000))*(cj14));
IkReal x863=((IkReal(1.00000000000000))*(sj11));
IkReal x864=((sj14)*(sj16));
IkReal x865=((cj15)*(cj16));
IkReal x866=((r11)*(sj16));
IkReal x867=((cj16)*(sj14));
IkReal x868=((cj14)*(cj15));
IkReal x869=((r01)*(sj16));
IkReal x870=((cj11)*(x860));
IkReal x871=((IkReal(1.00000000000000))*(cj16)*(sj15));
IkReal x872=((cj11)*(x861));
IkReal x873=((x861)*(x863));
evalcond[0]=((((cj15)*(r02)))+(((IkReal(-1.00000000000000))*(r00)*(x871)))+(((IkReal(-1.00000000000000))*(x872)))+(((IkReal(-1.00000000000000))*(x860)*(x863)))+(((sj15)*(x869))));
evalcond[1]=((((cj15)*(r12)))+(((sj15)*(x866)))+(x870)+(((IkReal(-1.00000000000000))*(r10)*(x871)))+(((IkReal(-1.00000000000000))*(x873))));
evalcond[2]=((((x868)*(x869)))+(((r00)*(x864)))+(((r01)*(x867)))+(((IkReal(-1.00000000000000))*(r02)*(sj15)*(x862)))+(x870)+(((IkReal(-1.00000000000000))*(x873)))+(((IkReal(-1.00000000000000))*(r00)*(x862)*(x865))));
evalcond[3]=((((r10)*(x864)))+(((r11)*(x867)))+(((IkReal(-1.00000000000000))*(r10)*(x862)*(x865)))+(((sj11)*(x860)))+(((x866)*(x868)))+(x872)+(((IkReal(-1.00000000000000))*(r12)*(sj15)*(x862))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j11;
vinfos[0].indices[0] = _ij11[0];
vinfos[0].indices[1] = _ij11[1];
vinfos[0].maxsolutions = _nj11;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j12;
vinfos[1].indices[0] = _ij12[0];
vinfos[1].indices[1] = _ij12[1];
vinfos[1].maxsolutions = _nj12;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j13;
vinfos[2].indices[0] = _ij13[0];
vinfos[2].indices[1] = _ij13[1];
vinfos[2].maxsolutions = _nj13;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j14;
vinfos[3].indices[0] = _ij14[0];
vinfos[3].indices[1] = _ij14[1];
vinfos[3].maxsolutions = _nj14;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j15;
vinfos[4].indices[0] = _ij15[0];
vinfos[4].indices[1] = _ij15[1];
vinfos[4].maxsolutions = _nj15;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j16;
vinfos[5].indices[0] = _ij16[0];
vinfos[5].indices[1] = _ij16[1];
vinfos[5].maxsolutions = _nj16;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
IkReal x874=((cj15)*(cj16));
IkReal x875=((IkReal(0.210000000000000))*(sj14));
IkReal x876=((r22)*(sj15));
IkReal x877=((IkReal(1.00000000000000))*(sj14));
IkReal x878=((r02)*(sj15));
IkReal x879=((IkReal(0.000500000000000000))*(sj15));
IkReal x880=((cj16)*(r00));
IkReal x881=((IkReal(0.0159000000000000))*(cj14));
IkReal x882=((IkReal(0.0159000000000000))*(sj14));
IkReal x883=((cj16)*(r11));
IkReal x884=((r01)*(sj16));
IkReal x885=((cj15)*(sj16));
IkReal x886=((r12)*(sj15));
IkReal x887=((IkReal(0.000500000000000000))*(cj15));
IkReal x888=((r20)*(sj16));
IkReal x889=((IkReal(0.210000000000000))*(cj14));
IkReal x890=((cj16)*(r21));
IkReal x891=((r00)*(sj16));
IkReal x892=((IkReal(0.0182200000000000))*(sj16));
IkReal x893=((cj16)*(r01));
IkReal x894=((r10)*(sj16));
IkReal x895=((IkReal(1.00000000000000))*(cj14));
IkReal x896=((cj16)*(r20));
IkReal x897=((cj16)*(r10));
IkReal x898=((sj15)*(x875));
IkReal x899=((sj16)*(x895));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(3.14159265358979))+(j12)), IkReal(6.28318530717959))));
evalcond[1]=((((r21)*(sj14)*(x885)))+(((IkReal(-1.00000000000000))*(x876)*(x877)))+(((IkReal(-1.00000000000000))*(x888)*(x895)))+(((IkReal(-1.00000000000000))*(x890)*(x895)))+(((IkReal(-1.00000000000000))*(r20)*(x874)*(x877))));
evalcond[2]=((((r11)*(sj14)*(x885)))+(((IkReal(-1.00000000000000))*(x883)*(x895)))+(((IkReal(-1.00000000000000))*(r10)*(x874)*(x877)))+(cj11)+(((IkReal(-1.00000000000000))*(x877)*(x886)))+(((IkReal(-1.00000000000000))*(x894)*(x895))));
evalcond[3]=((((IkReal(-1.00000000000000))*(x877)*(x878)))+(((IkReal(-1.00000000000000))*(r00)*(x874)*(x877)))+(((cj15)*(sj14)*(x884)))+(((IkReal(-1.00000000000000))*(sj11)))+(((IkReal(-1.00000000000000))*(x893)*(x895)))+(((IkReal(-1.00000000000000))*(x891)*(x895))));
evalcond[4]=((((IkReal(-0.0136000000000000))*(r20)*(x874)))+(((r21)*(x875)*(x885)))+(((IkReal(-0.354900000000000))*(x890)))+(((IkReal(-1.00000000000000))*(x879)*(x896)))+(((IkReal(-0.354900000000000))*(x888)))+(((x882)*(x890)))+(((IkReal(-1.00000000000000))*(r20)*(x874)*(x881)))+(((IkReal(-0.0136000000000000))*(x876)))+(((x882)*(x888)))+(((IkReal(-1.00000000000000))*(x876)*(x881)))+(((IkReal(-1.00000000000000))*(pz)))+(((IkReal(-1.00000000000000))*(x889)*(x890)))+(((IkReal(0.0136000000000000))*(r21)*(x885)))+(((IkReal(-1.00000000000000))*(x888)*(x889)))+(((IkReal(-1.00000000000000))*(x875)*(x876)))+(((r21)*(x892)))+(((r22)*(x887)))+(((r21)*(x881)*(x885)))+(((IkReal(-1.00000000000000))*(r20)*(x874)*(x875)))+(((r21)*(sj16)*(x879)))+(((IkReal(-0.0182200000000000))*(x896))));
evalcond[5]=((((IkReal(-0.0182200000000000))*(x880)))+(((r02)*(x887)))+(((IkReal(-1.00000000000000))*(x879)*(x880)))+(((x879)*(x884)))+(((IkReal(-0.354900000000000))*(x891)))+(((IkReal(-0.354900000000000))*(x893)))+(((IkReal(-0.0136000000000000))*(r00)*(x874)))+(((cj15)*(x881)*(x884)))+(((x882)*(x893)))+(((x882)*(x891)))+(((IkReal(-0.0136000000000000))*(x878)))+(((IkReal(-1.00000000000000))*(px)))+(((IkReal(-1.00000000000000))*(x889)*(x893)))+(((IkReal(-1.00000000000000))*(x889)*(x891)))+(((IkReal(-1.00000000000000))*(r00)*(x874)*(x875)))+(((IkReal(-1.00000000000000))*(x875)*(x878)))+(((IkReal(0.0104000000000000))*(cj11)))+(((IkReal(0.0136000000000000))*(cj15)*(x884)))+(((IkReal(0.166600000000000))*(sj11)))+(((cj15)*(x875)*(x884)))+(((IkReal(-1.00000000000000))*(r00)*(x874)*(x881)))+(((IkReal(0.0182200000000000))*(x884)))+(((IkReal(-1.00000000000000))*(x878)*(x881))));
evalcond[6]=((((r11)*(x875)*(x885)))+(((IkReal(-0.0136000000000000))*(r10)*(x874)))+(((IkReal(-1.00000000000000))*(x883)*(x889)))+(((r11)*(x892)))+(((IkReal(-0.354900000000000))*(x894)))+(((IkReal(-1.00000000000000))*(x879)*(x897)))+(((IkReal(-0.166600000000000))*(cj11)))+(((IkReal(-0.354900000000000))*(x883)))+(((IkReal(-1.00000000000000))*(r10)*(x874)*(x875)))+(((x882)*(x894)))+(((x882)*(x883)))+(((IkReal(-1.00000000000000))*(r10)*(x874)*(x881)))+(((IkReal(-1.00000000000000))*(x881)*(x886)))+(((IkReal(-1.00000000000000))*(py)))+(((IkReal(-1.00000000000000))*(x889)*(x894)))+(((IkReal(-0.0136000000000000))*(x886)))+(((IkReal(0.0104000000000000))*(sj11)))+(((r11)*(sj16)*(x879)))+(((r11)*(x881)*(x885)))+(((IkReal(0.0136000000000000))*(r11)*(x885)))+(((IkReal(-1.00000000000000))*(x875)*(x886)))+(((r12)*(x887)))+(((IkReal(-0.0182200000000000))*(x897))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  )
{
{
IkReal j13array[1], cj13array[1], sj13array[1];
bool j13valid[1]={false};
_nj13 = 1;
IkReal x900=((cj14)*(cj15));
IkReal x901=((r21)*(sj16));
IkReal x902=((IkReal(1.00000000000000))*(cj16)*(r20));
if( IKabs(((((IkReal(-1.00000000000000))*(x900)*(x902)))+(((cj16)*(r21)*(sj14)))+(((IkReal(-1.00000000000000))*(cj14)*(r22)*(sj15)))+(((x900)*(x901)))+(((r20)*(sj14)*(sj16))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((sj15)*(x901)))+(((cj15)*(r22)))+(((IkReal(-1.00000000000000))*(sj15)*(x902))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((IkReal(-1.00000000000000))*(x900)*(x902)))+(((cj16)*(r21)*(sj14)))+(((IkReal(-1.00000000000000))*(cj14)*(r22)*(sj15)))+(((x900)*(x901)))+(((r20)*(sj14)*(sj16)))))+IKsqr(((((sj15)*(x901)))+(((cj15)*(r22)))+(((IkReal(-1.00000000000000))*(sj15)*(x902)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j13array[0]=IKatan2(((((IkReal(-1.00000000000000))*(x900)*(x902)))+(((cj16)*(r21)*(sj14)))+(((IkReal(-1.00000000000000))*(cj14)*(r22)*(sj15)))+(((x900)*(x901)))+(((r20)*(sj14)*(sj16)))), ((((sj15)*(x901)))+(((cj15)*(r22)))+(((IkReal(-1.00000000000000))*(sj15)*(x902)))));
sj13array[0]=IKsin(j13array[0]);
cj13array[0]=IKcos(j13array[0]);
if( j13array[0] > IKPI )
{
    j13array[0]-=IK2PI;
}
else if( j13array[0] < -IKPI )
{    j13array[0]+=IK2PI;
}
j13valid[0] = true;
for(int ij13 = 0; ij13 < 1; ++ij13)
{
if( !j13valid[ij13] )
{
    continue;
}
_ij13[0] = ij13; _ij13[1] = -1;
for(int iij13 = ij13+1; iij13 < 1; ++iij13)
{
if( j13valid[iij13] && IKabs(cj13array[ij13]-cj13array[iij13]) < IKFAST_SOLUTION_THRESH && IKabs(sj13array[ij13]-sj13array[iij13]) < IKFAST_SOLUTION_THRESH )
{
    j13valid[iij13]=false; _ij13[1] = iij13; break; 
}
}
j13 = j13array[ij13]; cj13 = cj13array[ij13]; sj13 = sj13array[ij13];
{
IkReal evalcond[6];
IkReal x903=IKsin(j13);
IkReal x904=IKcos(j13);
IkReal x905=((IkReal(1.00000000000000))*(cj14));
IkReal x906=((sj14)*(sj16));
IkReal x907=((cj15)*(cj16));
IkReal x908=((sj15)*(sj16));
IkReal x909=((cj16)*(sj14));
IkReal x910=((IkReal(1.00000000000000))*(x903));
IkReal x911=((IkReal(1.00000000000000))*(cj16)*(sj15));
IkReal x912=((cj14)*(cj15)*(sj16));
evalcond[0]=((((r21)*(x908)))+(((IkReal(-1.00000000000000))*(r20)*(x911)))+(((cj15)*(r22)))+(((IkReal(-1.00000000000000))*(x904))));
evalcond[1]=((((cj15)*(r02)))+(((r01)*(x908)))+(((IkReal(-1.00000000000000))*(cj11)*(x910)))+(((IkReal(-1.00000000000000))*(r00)*(x911))));
evalcond[2]=((((cj15)*(r12)))+(((r11)*(x908)))+(((IkReal(-1.00000000000000))*(sj11)*(x910)))+(((IkReal(-1.00000000000000))*(r10)*(x911))));
evalcond[3]=((((r21)*(x909)))+(((r20)*(x906)))+(((IkReal(-1.00000000000000))*(x910)))+(((IkReal(-1.00000000000000))*(r22)*(sj15)*(x905)))+(((r21)*(x912)))+(((IkReal(-1.00000000000000))*(r20)*(x905)*(x907))));
evalcond[4]=((((r00)*(x906)))+(((r01)*(x909)))+(((IkReal(-1.00000000000000))*(r02)*(sj15)*(x905)))+(((IkReal(-1.00000000000000))*(r00)*(x905)*(x907)))+(((cj11)*(x904)))+(((r01)*(x912))));
evalcond[5]=((((IkReal(-1.00000000000000))*(r12)*(sj15)*(x905)))+(((r11)*(x909)))+(((sj11)*(x904)))+(((r11)*(x912)))+(((IkReal(-1.00000000000000))*(r10)*(x905)*(x907)))+(((r10)*(x906))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j11;
vinfos[0].indices[0] = _ij11[0];
vinfos[0].indices[1] = _ij11[1];
vinfos[0].maxsolutions = _nj11;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j12;
vinfos[1].indices[0] = _ij12[0];
vinfos[1].indices[1] = _ij12[1];
vinfos[1].maxsolutions = _nj12;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j13;
vinfos[2].indices[0] = _ij13[0];
vinfos[2].indices[1] = _ij13[1];
vinfos[2].maxsolutions = _nj13;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j14;
vinfos[3].indices[0] = _ij14[0];
vinfos[3].indices[1] = _ij14[1];
vinfos[3].maxsolutions = _nj14;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j15;
vinfos[4].indices[0] = _ij15[0];
vinfos[4].indices[1] = _ij15[1];
vinfos[4].maxsolutions = _nj15;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j16;
vinfos[5].indices[0] = _ij16[0];
vinfos[5].indices[1] = _ij16[1];
vinfos[5].maxsolutions = _nj16;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

} else
{
IkReal x913=((cj15)*(cj16));
IkReal x914=((IkReal(0.210000000000000))*(sj14));
IkReal x915=((r22)*(sj15));
IkReal x916=((IkReal(1.00000000000000))*(sj14));
IkReal x917=((r02)*(sj15));
IkReal x918=((IkReal(0.000500000000000000))*(sj15));
IkReal x919=((cj16)*(r00));
IkReal x920=((IkReal(0.0159000000000000))*(cj14));
IkReal x921=((IkReal(0.0159000000000000))*(sj14));
IkReal x922=((cj16)*(r11));
IkReal x923=((r01)*(sj16));
IkReal x924=((cj15)*(sj16));
IkReal x925=((r12)*(sj15));
IkReal x926=((IkReal(0.000500000000000000))*(cj15));
IkReal x927=((r20)*(sj16));
IkReal x928=((IkReal(0.210000000000000))*(cj14));
IkReal x929=((cj16)*(r21));
IkReal x930=((r10)*(sj16));
IkReal x931=((r21)*(sj16));
IkReal x932=((cj16)*(r01));
IkReal x933=((r00)*(sj16));
IkReal x934=((IkReal(1.00000000000000))*(cj14));
IkReal x935=((cj16)*(r20));
IkReal x936=((r11)*(sj16));
IkReal x937=((cj16)*(r10));
IkReal x938=((sj15)*(x914));
IkReal x939=((sj16)*(x934));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(j12, IkReal(6.28318530717959))));
evalcond[1]=((((IkReal(-1.00000000000000))*(r20)*(x913)*(x916)))+(((r21)*(sj14)*(x924)))+(((IkReal(-1.00000000000000))*(x927)*(x934)))+(((IkReal(-1.00000000000000))*(x929)*(x934)))+(((IkReal(-1.00000000000000))*(x915)*(x916))));
evalcond[2]=((((IkReal(-1.00000000000000))*(x930)*(x934)))+(((IkReal(-1.00000000000000))*(r10)*(x913)*(x916)))+(((r11)*(sj14)*(x924)))+(((IkReal(-1.00000000000000))*(cj11)))+(((IkReal(-1.00000000000000))*(x916)*(x925)))+(((IkReal(-1.00000000000000))*(x922)*(x934))));
evalcond[3]=((((cj15)*(sj14)*(x923)))+(sj11)+(((IkReal(-1.00000000000000))*(r00)*(x913)*(x916)))+(((IkReal(-1.00000000000000))*(x932)*(x934)))+(((IkReal(-1.00000000000000))*(x933)*(x934)))+(((IkReal(-1.00000000000000))*(x916)*(x917))));
evalcond[4]=((((IkReal(-1.00000000000000))*(r20)*(x913)*(x914)))+(((IkReal(-1.00000000000000))*(r20)*(x913)*(x920)))+(((r22)*(x926)))+(((IkReal(-1.00000000000000))*(x928)*(x929)))+(((IkReal(-0.354900000000000))*(x927)))+(((IkReal(-0.354900000000000))*(x929)))+(((IkReal(0.0136000000000000))*(r21)*(x924)))+(((IkReal(-0.0136000000000000))*(x915)))+(((IkReal(-0.0182200000000000))*(x935)))+(((x921)*(x927)))+(((x921)*(x929)))+(((IkReal(-1.00000000000000))*(x927)*(x928)))+(((r21)*(x920)*(x924)))+(((IkReal(-1.00000000000000))*(pz)))+(((IkReal(-0.0136000000000000))*(r20)*(x913)))+(((IkReal(-1.00000000000000))*(x918)*(x935)))+(((IkReal(-1.00000000000000))*(x914)*(x915)))+(((IkReal(-1.00000000000000))*(x915)*(x920)))+(((IkReal(0.0182200000000000))*(x931)))+(((r21)*(x914)*(x924)))+(((x918)*(x931))));
evalcond[5]=((((cj15)*(x914)*(x923)))+(((x918)*(x923)))+(((IkReal(-0.0182200000000000))*(x919)))+(((IkReal(0.0136000000000000))*(cj15)*(x923)))+(((IkReal(-1.00000000000000))*(x918)*(x919)))+(((IkReal(-0.354900000000000))*(x933)))+(((IkReal(-0.354900000000000))*(x932)))+(((IkReal(-1.00000000000000))*(x928)*(x933)))+(((IkReal(-1.00000000000000))*(x928)*(x932)))+(((IkReal(-0.0136000000000000))*(r00)*(x913)))+(((IkReal(-0.0136000000000000))*(x917)))+(((x921)*(x933)))+(((x921)*(x932)))+(((IkReal(-1.00000000000000))*(r00)*(x913)*(x920)))+(((IkReal(-0.106600000000000))*(sj11)))+(((IkReal(-1.00000000000000))*(px)))+(((IkReal(-1.00000000000000))*(r00)*(x913)*(x914)))+(((IkReal(-1.00000000000000))*(x914)*(x917)))+(((IkReal(0.0104000000000000))*(cj11)))+(((IkReal(0.0182200000000000))*(x923)))+(((IkReal(-1.00000000000000))*(x917)*(x920)))+(((r02)*(x926)))+(((cj15)*(x920)*(x923))));
evalcond[6]=((((IkReal(-1.00000000000000))*(x914)*(x925)))+(((IkReal(-0.354900000000000))*(x930)))+(((IkReal(-1.00000000000000))*(x928)*(x930)))+(((r11)*(x920)*(x924)))+(((IkReal(-0.354900000000000))*(x922)))+(((IkReal(0.0136000000000000))*(r11)*(x924)))+(((IkReal(-1.00000000000000))*(x920)*(x925)))+(((IkReal(-0.0182200000000000))*(x937)))+(((x921)*(x922)))+(((x921)*(x930)))+(((IkReal(-1.00000000000000))*(py)))+(((IkReal(-1.00000000000000))*(r10)*(x913)*(x914)))+(((IkReal(-1.00000000000000))*(x918)*(x937)))+(((r12)*(x926)))+(((r11)*(x914)*(x924)))+(((IkReal(0.0104000000000000))*(sj11)))+(((IkReal(-1.00000000000000))*(r10)*(x913)*(x920)))+(((IkReal(0.0182200000000000))*(x936)))+(((IkReal(-0.0136000000000000))*(r10)*(x913)))+(((IkReal(0.106600000000000))*(cj11)))+(((IkReal(-0.0136000000000000))*(x925)))+(((x918)*(x936)))+(((IkReal(-1.00000000000000))*(x922)*(x928))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  )
{
{
IkReal j13array[1], cj13array[1], sj13array[1];
bool j13valid[1]={false};
_nj13 = 1;
IkReal x940=((cj16)*(r20));
IkReal x941=((cj14)*(cj15));
IkReal x942=((IkReal(1.00000000000000))*(sj14));
IkReal x943=((IkReal(1.00000000000000))*(r21)*(sj16));
if( IKabs(((((IkReal(-1.00000000000000))*(cj16)*(r21)*(x942)))+(((IkReal(-1.00000000000000))*(x941)*(x943)))+(((IkReal(-1.00000000000000))*(r20)*(sj16)*(x942)))+(((cj14)*(r22)*(sj15)))+(((x940)*(x941))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((sj15)*(x940)))+(((IkReal(-1.00000000000000))*(cj15)*(r22)))+(((IkReal(-1.00000000000000))*(sj15)*(x943))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((IkReal(-1.00000000000000))*(cj16)*(r21)*(x942)))+(((IkReal(-1.00000000000000))*(x941)*(x943)))+(((IkReal(-1.00000000000000))*(r20)*(sj16)*(x942)))+(((cj14)*(r22)*(sj15)))+(((x940)*(x941)))))+IKsqr(((((sj15)*(x940)))+(((IkReal(-1.00000000000000))*(cj15)*(r22)))+(((IkReal(-1.00000000000000))*(sj15)*(x943)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j13array[0]=IKatan2(((((IkReal(-1.00000000000000))*(cj16)*(r21)*(x942)))+(((IkReal(-1.00000000000000))*(x941)*(x943)))+(((IkReal(-1.00000000000000))*(r20)*(sj16)*(x942)))+(((cj14)*(r22)*(sj15)))+(((x940)*(x941)))), ((((sj15)*(x940)))+(((IkReal(-1.00000000000000))*(cj15)*(r22)))+(((IkReal(-1.00000000000000))*(sj15)*(x943)))));
sj13array[0]=IKsin(j13array[0]);
cj13array[0]=IKcos(j13array[0]);
if( j13array[0] > IKPI )
{
    j13array[0]-=IK2PI;
}
else if( j13array[0] < -IKPI )
{    j13array[0]+=IK2PI;
}
j13valid[0] = true;
for(int ij13 = 0; ij13 < 1; ++ij13)
{
if( !j13valid[ij13] )
{
    continue;
}
_ij13[0] = ij13; _ij13[1] = -1;
for(int iij13 = ij13+1; iij13 < 1; ++iij13)
{
if( j13valid[iij13] && IKabs(cj13array[ij13]-cj13array[iij13]) < IKFAST_SOLUTION_THRESH && IKabs(sj13array[ij13]-sj13array[iij13]) < IKFAST_SOLUTION_THRESH )
{
    j13valid[iij13]=false; _ij13[1] = iij13; break; 
}
}
j13 = j13array[ij13]; cj13 = cj13array[ij13]; sj13 = sj13array[ij13];
{
IkReal evalcond[6];
IkReal x944=IKsin(j13);
IkReal x945=IKcos(j13);
IkReal x946=((IkReal(1.00000000000000))*(cj14));
IkReal x947=((sj14)*(sj16));
IkReal x948=((cj15)*(cj16));
IkReal x949=((sj15)*(sj16));
IkReal x950=((cj16)*(sj14));
IkReal x951=((IkReal(1.00000000000000))*(x944));
IkReal x952=((IkReal(1.00000000000000))*(cj16)*(sj15));
IkReal x953=((cj14)*(cj15)*(sj16));
evalcond[0]=((((r21)*(x949)))+(((IkReal(-1.00000000000000))*(r20)*(x952)))+(((cj15)*(r22)))+(x945));
evalcond[1]=((((cj15)*(r02)))+(((IkReal(-1.00000000000000))*(r00)*(x952)))+(((r01)*(x949)))+(((IkReal(-1.00000000000000))*(cj11)*(x951))));
evalcond[2]=((((IkReal(-1.00000000000000))*(r10)*(x952)))+(((cj15)*(r12)))+(((r11)*(x949)))+(((IkReal(-1.00000000000000))*(sj11)*(x951))));
evalcond[3]=((((r21)*(x950)))+(((r21)*(x953)))+(((IkReal(-1.00000000000000))*(r20)*(x946)*(x948)))+(((IkReal(-1.00000000000000))*(r22)*(sj15)*(x946)))+(x944)+(((r20)*(x947))));
evalcond[4]=((((cj11)*(x945)))+(((IkReal(-1.00000000000000))*(r00)*(x946)*(x948)))+(((r01)*(x950)))+(((r01)*(x953)))+(((r00)*(x947)))+(((IkReal(-1.00000000000000))*(r02)*(sj15)*(x946))));
evalcond[5]=((((IkReal(-1.00000000000000))*(r10)*(x946)*(x948)))+(((r11)*(x953)))+(((r11)*(x950)))+(((IkReal(-1.00000000000000))*(r12)*(sj15)*(x946)))+(((sj11)*(x945)))+(((r10)*(x947))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j11;
vinfos[0].indices[0] = _ij11[0];
vinfos[0].indices[1] = _ij11[1];
vinfos[0].maxsolutions = _nj11;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j12;
vinfos[1].indices[0] = _ij12[0];
vinfos[1].indices[1] = _ij12[1];
vinfos[1].maxsolutions = _nj12;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j13;
vinfos[2].indices[0] = _ij13[0];
vinfos[2].indices[1] = _ij13[1];
vinfos[2].maxsolutions = _nj13;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j14;
vinfos[3].indices[0] = _ij14[0];
vinfos[3].indices[1] = _ij14[1];
vinfos[3].maxsolutions = _nj14;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j15;
vinfos[4].indices[0] = _ij15[0];
vinfos[4].indices[1] = _ij15[1];
vinfos[4].maxsolutions = _nj15;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j16;
vinfos[5].indices[0] = _ij16[0];
vinfos[5].indices[1] = _ij16[1];
vinfos[5].maxsolutions = _nj16;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

} else
{
if( 1 )
{
continue;

} else
{
}
}
}
}
}
}
}
}

} else
{
{
IkReal j13array[1], cj13array[1], sj13array[1];
bool j13valid[1]={false};
_nj13 = 1;
IkReal x954=((IKabs(cj12) != 0)?((IkReal)1/(cj12)):(IkReal)1.0e30);
IkReal x955=((IkReal(1.00000000000000))*(cj16));
IkReal x956=((r21)*(sj16));
IkReal x957=((cj15)*(r22));
IkReal x958=((cj12)*(sj15));
IkReal x959=((sj11)*(sj12)*(sj15));
if( IKabs(((x954)*(((IKabs(cj11) != 0)?((IkReal)1/(cj11)):(IkReal)1.0e30))*(((((cj12)*(cj15)*(r02)))+(((IkReal(-1.00000000000000))*(r20)*(x955)*(x959)))+(((x956)*(x959)))+(((r01)*(sj16)*(x958)))+(((IkReal(-1.00000000000000))*(r00)*(x955)*(x958)))+(((sj11)*(sj12)*(x957))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((x954)*(((((sj15)*(x956)))+(((IkReal(-1.00000000000000))*(r20)*(sj15)*(x955)))+(x957))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((x954)*(((IKabs(cj11) != 0)?((IkReal)1/(cj11)):(IkReal)1.0e30))*(((((cj12)*(cj15)*(r02)))+(((IkReal(-1.00000000000000))*(r20)*(x955)*(x959)))+(((x956)*(x959)))+(((r01)*(sj16)*(x958)))+(((IkReal(-1.00000000000000))*(r00)*(x955)*(x958)))+(((sj11)*(sj12)*(x957)))))))+IKsqr(((x954)*(((((sj15)*(x956)))+(((IkReal(-1.00000000000000))*(r20)*(sj15)*(x955)))+(x957)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j13array[0]=IKatan2(((x954)*(((IKabs(cj11) != 0)?((IkReal)1/(cj11)):(IkReal)1.0e30))*(((((cj12)*(cj15)*(r02)))+(((IkReal(-1.00000000000000))*(r20)*(x955)*(x959)))+(((x956)*(x959)))+(((r01)*(sj16)*(x958)))+(((IkReal(-1.00000000000000))*(r00)*(x955)*(x958)))+(((sj11)*(sj12)*(x957)))))), ((x954)*(((((sj15)*(x956)))+(((IkReal(-1.00000000000000))*(r20)*(sj15)*(x955)))+(x957)))));
sj13array[0]=IKsin(j13array[0]);
cj13array[0]=IKcos(j13array[0]);
if( j13array[0] > IKPI )
{
    j13array[0]-=IK2PI;
}
else if( j13array[0] < -IKPI )
{    j13array[0]+=IK2PI;
}
j13valid[0] = true;
for(int ij13 = 0; ij13 < 1; ++ij13)
{
if( !j13valid[ij13] )
{
    continue;
}
_ij13[0] = ij13; _ij13[1] = -1;
for(int iij13 = ij13+1; iij13 < 1; ++iij13)
{
if( j13valid[iij13] && IKabs(cj13array[ij13]-cj13array[iij13]) < IKFAST_SOLUTION_THRESH && IKabs(sj13array[ij13]-sj13array[iij13]) < IKFAST_SOLUTION_THRESH )
{
    j13valid[iij13]=false; _ij13[1] = iij13; break; 
}
}
j13 = j13array[ij13]; cj13 = cj13array[ij13]; sj13 = sj13array[ij13];
{
IkReal evalcond[6];
IkReal x960=IKcos(j13);
IkReal x961=IKsin(j13);
IkReal x962=((IkReal(1.00000000000000))*(cj14));
IkReal x963=((sj14)*(sj16));
IkReal x964=((cj11)*(sj12));
IkReal x965=((cj15)*(cj16));
IkReal x966=((sj15)*(sj16));
IkReal x967=((sj11)*(sj12));
IkReal x968=((cj16)*(sj14));
IkReal x969=((IkReal(1.00000000000000))*(x961));
IkReal x970=((IkReal(1.00000000000000))*(cj16)*(sj15));
IkReal x971=((cj14)*(cj15)*(sj16));
IkReal x972=((IkReal(1.00000000000000))*(x960));
evalcond[0]=((((IkReal(-1.00000000000000))*(r20)*(x970)))+(((IkReal(-1.00000000000000))*(cj12)*(x972)))+(((cj15)*(r22)))+(((r21)*(x966))));
evalcond[1]=((((cj15)*(r02)))+(((IkReal(-1.00000000000000))*(r00)*(x970)))+(((x960)*(x967)))+(((r01)*(x966)))+(((IkReal(-1.00000000000000))*(cj11)*(x969))));
evalcond[2]=((((cj15)*(r12)))+(((IkReal(-1.00000000000000))*(x964)*(x972)))+(((r11)*(x966)))+(((IkReal(-1.00000000000000))*(r10)*(x970)))+(((IkReal(-1.00000000000000))*(sj11)*(x969))));
evalcond[3]=((((r21)*(x971)))+(((IkReal(-1.00000000000000))*(cj12)*(x969)))+(((IkReal(-1.00000000000000))*(r20)*(x962)*(x965)))+(((r21)*(x968)))+(((r20)*(x963)))+(((IkReal(-1.00000000000000))*(r22)*(sj15)*(x962))));
evalcond[4]=((((IkReal(-1.00000000000000))*(r02)*(sj15)*(x962)))+(((cj11)*(x960)))+(((x961)*(x967)))+(((r01)*(x971)))+(((r00)*(x963)))+(((r01)*(x968)))+(((IkReal(-1.00000000000000))*(r00)*(x962)*(x965))));
evalcond[5]=((((sj11)*(x960)))+(((IkReal(-1.00000000000000))*(r10)*(x962)*(x965)))+(((IkReal(-1.00000000000000))*(x964)*(x969)))+(((r11)*(x968)))+(((IkReal(-1.00000000000000))*(r12)*(sj15)*(x962)))+(((r11)*(x971)))+(((r10)*(x963))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j11;
vinfos[0].indices[0] = _ij11[0];
vinfos[0].indices[1] = _ij11[1];
vinfos[0].maxsolutions = _nj11;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j12;
vinfos[1].indices[0] = _ij12[0];
vinfos[1].indices[1] = _ij12[1];
vinfos[1].maxsolutions = _nj12;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j13;
vinfos[2].indices[0] = _ij13[0];
vinfos[2].indices[1] = _ij13[1];
vinfos[2].maxsolutions = _nj13;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j14;
vinfos[3].indices[0] = _ij14[0];
vinfos[3].indices[1] = _ij14[1];
vinfos[3].maxsolutions = _nj14;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j15;
vinfos[4].indices[0] = _ij15[0];
vinfos[4].indices[1] = _ij15[1];
vinfos[4].maxsolutions = _nj15;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j16;
vinfos[5].indices[0] = _ij16[0];
vinfos[5].indices[1] = _ij16[1];
vinfos[5].maxsolutions = _nj16;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j13array[1], cj13array[1], sj13array[1];
bool j13valid[1]={false};
_nj13 = 1;
IkReal x973=(sj11)*(sj11);
IkReal x974=(cj11)*(cj11);
IkReal x975=((cj15)*(sj11));
IkReal x976=((cj11)*(cj15));
IkReal x977=((cj16)*(sj15));
IkReal x978=((IkReal(1.00000000000000))*(sj11));
IkReal x979=((IkReal(1.00000000000000))*(cj11));
IkReal x980=((r01)*(sj15)*(sj16));
IkReal x981=((r11)*(sj15)*(sj16));
if( IKabs(((((IKabs(((x973)+(x974))) != 0)?((IkReal)1/(((x973)+(x974)))):(IkReal)1.0e30))*(((((sj11)*(x981)))+(((cj11)*(x980)))+(((r12)*(x975)))+(((IkReal(-1.00000000000000))*(r00)*(x977)*(x979)))+(((r02)*(x976)))+(((IkReal(-1.00000000000000))*(r10)*(x977)*(x978))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((IKabs(((((sj12)*(x974)))+(((sj12)*(x973))))) != 0)?((IkReal)1/(((((sj12)*(x974)))+(((sj12)*(x973)))))):(IkReal)1.0e30))*(((((IkReal(-1.00000000000000))*(r02)*(x975)))+(((cj11)*(x981)))+(((r00)*(sj11)*(x977)))+(((IkReal(-1.00000000000000))*(x978)*(x980)))+(((r12)*(x976)))+(((IkReal(-1.00000000000000))*(r10)*(x977)*(x979))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((IKabs(((x973)+(x974))) != 0)?((IkReal)1/(((x973)+(x974)))):(IkReal)1.0e30))*(((((sj11)*(x981)))+(((cj11)*(x980)))+(((r12)*(x975)))+(((IkReal(-1.00000000000000))*(r00)*(x977)*(x979)))+(((r02)*(x976)))+(((IkReal(-1.00000000000000))*(r10)*(x977)*(x978)))))))+IKsqr(((((IKabs(((((sj12)*(x974)))+(((sj12)*(x973))))) != 0)?((IkReal)1/(((((sj12)*(x974)))+(((sj12)*(x973)))))):(IkReal)1.0e30))*(((((IkReal(-1.00000000000000))*(r02)*(x975)))+(((cj11)*(x981)))+(((r00)*(sj11)*(x977)))+(((IkReal(-1.00000000000000))*(x978)*(x980)))+(((r12)*(x976)))+(((IkReal(-1.00000000000000))*(r10)*(x977)*(x979)))))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j13array[0]=IKatan2(((((IKabs(((x973)+(x974))) != 0)?((IkReal)1/(((x973)+(x974)))):(IkReal)1.0e30))*(((((sj11)*(x981)))+(((cj11)*(x980)))+(((r12)*(x975)))+(((IkReal(-1.00000000000000))*(r00)*(x977)*(x979)))+(((r02)*(x976)))+(((IkReal(-1.00000000000000))*(r10)*(x977)*(x978)))))), ((((IKabs(((((sj12)*(x974)))+(((sj12)*(x973))))) != 0)?((IkReal)1/(((((sj12)*(x974)))+(((sj12)*(x973)))))):(IkReal)1.0e30))*(((((IkReal(-1.00000000000000))*(r02)*(x975)))+(((cj11)*(x981)))+(((r00)*(sj11)*(x977)))+(((IkReal(-1.00000000000000))*(x978)*(x980)))+(((r12)*(x976)))+(((IkReal(-1.00000000000000))*(r10)*(x977)*(x979)))))));
sj13array[0]=IKsin(j13array[0]);
cj13array[0]=IKcos(j13array[0]);
if( j13array[0] > IKPI )
{
    j13array[0]-=IK2PI;
}
else if( j13array[0] < -IKPI )
{    j13array[0]+=IK2PI;
}
j13valid[0] = true;
for(int ij13 = 0; ij13 < 1; ++ij13)
{
if( !j13valid[ij13] )
{
    continue;
}
_ij13[0] = ij13; _ij13[1] = -1;
for(int iij13 = ij13+1; iij13 < 1; ++iij13)
{
if( j13valid[iij13] && IKabs(cj13array[ij13]-cj13array[iij13]) < IKFAST_SOLUTION_THRESH && IKabs(sj13array[ij13]-sj13array[iij13]) < IKFAST_SOLUTION_THRESH )
{
    j13valid[iij13]=false; _ij13[1] = iij13; break; 
}
}
j13 = j13array[ij13]; cj13 = cj13array[ij13]; sj13 = sj13array[ij13];
{
IkReal evalcond[6];
IkReal x982=IKcos(j13);
IkReal x983=IKsin(j13);
IkReal x984=((IkReal(1.00000000000000))*(cj14));
IkReal x985=((sj14)*(sj16));
IkReal x986=((cj11)*(sj12));
IkReal x987=((cj15)*(cj16));
IkReal x988=((sj15)*(sj16));
IkReal x989=((sj11)*(sj12));
IkReal x990=((cj16)*(sj14));
IkReal x991=((IkReal(1.00000000000000))*(x983));
IkReal x992=((IkReal(1.00000000000000))*(cj16)*(sj15));
IkReal x993=((cj14)*(cj15)*(sj16));
IkReal x994=((IkReal(1.00000000000000))*(x982));
evalcond[0]=((((IkReal(-1.00000000000000))*(cj12)*(x994)))+(((cj15)*(r22)))+(((r21)*(x988)))+(((IkReal(-1.00000000000000))*(r20)*(x992))));
evalcond[1]=((((cj15)*(r02)))+(((IkReal(-1.00000000000000))*(cj11)*(x991)))+(((r01)*(x988)))+(((x982)*(x989)))+(((IkReal(-1.00000000000000))*(r00)*(x992))));
evalcond[2]=((((cj15)*(r12)))+(((IkReal(-1.00000000000000))*(r10)*(x992)))+(((IkReal(-1.00000000000000))*(sj11)*(x991)))+(((r11)*(x988)))+(((IkReal(-1.00000000000000))*(x986)*(x994))));
evalcond[3]=((((IkReal(-1.00000000000000))*(cj12)*(x991)))+(((IkReal(-1.00000000000000))*(r20)*(x984)*(x987)))+(((r21)*(x990)))+(((r21)*(x993)))+(((IkReal(-1.00000000000000))*(r22)*(sj15)*(x984)))+(((r20)*(x985))));
evalcond[4]=((((x983)*(x989)))+(((r01)*(x993)))+(((r01)*(x990)))+(((IkReal(-1.00000000000000))*(r00)*(x984)*(x987)))+(((cj11)*(x982)))+(((r00)*(x985)))+(((IkReal(-1.00000000000000))*(r02)*(sj15)*(x984))));
evalcond[5]=((((sj11)*(x982)))+(((r10)*(x985)))+(((IkReal(-1.00000000000000))*(x986)*(x991)))+(((IkReal(-1.00000000000000))*(r10)*(x984)*(x987)))+(((r11)*(x993)))+(((r11)*(x990)))+(((IkReal(-1.00000000000000))*(r12)*(sj15)*(x984))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j11;
vinfos[0].indices[0] = _ij11[0];
vinfos[0].indices[1] = _ij11[1];
vinfos[0].maxsolutions = _nj11;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j12;
vinfos[1].indices[0] = _ij12[0];
vinfos[1].indices[1] = _ij12[1];
vinfos[1].maxsolutions = _nj12;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j13;
vinfos[2].indices[0] = _ij13[0];
vinfos[2].indices[1] = _ij13[1];
vinfos[2].maxsolutions = _nj13;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j14;
vinfos[3].indices[0] = _ij14[0];
vinfos[3].indices[1] = _ij14[1];
vinfos[3].maxsolutions = _nj14;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j15;
vinfos[4].indices[0] = _ij15[0];
vinfos[4].indices[1] = _ij15[1];
vinfos[4].maxsolutions = _nj15;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j16;
vinfos[5].indices[0] = _ij16[0];
vinfos[5].indices[1] = _ij16[1];
vinfos[5].maxsolutions = _nj16;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j13array[1], cj13array[1], sj13array[1];
bool j13valid[1]={false};
_nj13 = 1;
IkReal x995=((cj14)*(cj15));
IkReal x996=((r21)*(sj16));
IkReal x997=((IkReal(1.00000000000000))*(cj16)*(r20));
if( IKabs(((gconst2)*(((((cj16)*(r21)*(sj14)))+(((IkReal(-1.00000000000000))*(cj14)*(r22)*(sj15)))+(((IkReal(-1.00000000000000))*(x995)*(x997)))+(((r20)*(sj14)*(sj16)))+(((x995)*(x996))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst2)*(((((IkReal(-1.00000000000000))*(sj15)*(x997)))+(((cj15)*(r22)))+(((sj15)*(x996))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j13array[0]=IKatan2(((gconst2)*(((((cj16)*(r21)*(sj14)))+(((IkReal(-1.00000000000000))*(cj14)*(r22)*(sj15)))+(((IkReal(-1.00000000000000))*(x995)*(x997)))+(((r20)*(sj14)*(sj16)))+(((x995)*(x996)))))), ((gconst2)*(((((IkReal(-1.00000000000000))*(sj15)*(x997)))+(((cj15)*(r22)))+(((sj15)*(x996)))))));
sj13array[0]=IKsin(j13array[0]);
cj13array[0]=IKcos(j13array[0]);
if( j13array[0] > IKPI )
{
    j13array[0]-=IK2PI;
}
else if( j13array[0] < -IKPI )
{    j13array[0]+=IK2PI;
}
j13valid[0] = true;
for(int ij13 = 0; ij13 < 1; ++ij13)
{
if( !j13valid[ij13] )
{
    continue;
}
_ij13[0] = ij13; _ij13[1] = -1;
for(int iij13 = ij13+1; iij13 < 1; ++iij13)
{
if( j13valid[iij13] && IKabs(cj13array[ij13]-cj13array[iij13]) < IKFAST_SOLUTION_THRESH && IKabs(sj13array[ij13]-sj13array[iij13]) < IKFAST_SOLUTION_THRESH )
{
    j13valid[iij13]=false; _ij13[1] = iij13; break; 
}
}
j13 = j13array[ij13]; cj13 = cj13array[ij13]; sj13 = sj13array[ij13];
{
IkReal evalcond[6];
IkReal x998=IKcos(j13);
IkReal x999=IKsin(j13);
IkReal x1000=((IkReal(1.00000000000000))*(cj14));
IkReal x1001=((sj14)*(sj16));
IkReal x1002=((cj11)*(sj12));
IkReal x1003=((cj15)*(cj16));
IkReal x1004=((sj15)*(sj16));
IkReal x1005=((sj11)*(sj12));
IkReal x1006=((cj16)*(sj14));
IkReal x1007=((IkReal(1.00000000000000))*(x999));
IkReal x1008=((IkReal(1.00000000000000))*(cj16)*(sj15));
IkReal x1009=((cj14)*(cj15)*(sj16));
IkReal x1010=((IkReal(1.00000000000000))*(x998));
evalcond[0]=((((cj15)*(r22)))+(((IkReal(-1.00000000000000))*(r20)*(x1008)))+(((IkReal(-1.00000000000000))*(cj12)*(x1010)))+(((r21)*(x1004))));
evalcond[1]=((((r01)*(x1004)))+(((cj15)*(r02)))+(((IkReal(-1.00000000000000))*(cj11)*(x1007)))+(((IkReal(-1.00000000000000))*(r00)*(x1008)))+(((x1005)*(x998))));
evalcond[2]=((((IkReal(-1.00000000000000))*(sj11)*(x1007)))+(((IkReal(-1.00000000000000))*(r10)*(x1008)))+(((cj15)*(r12)))+(((r11)*(x1004)))+(((IkReal(-1.00000000000000))*(x1002)*(x1010))));
evalcond[3]=((((r21)*(x1006)))+(((r21)*(x1009)))+(((IkReal(-1.00000000000000))*(cj12)*(x1007)))+(((r20)*(x1001)))+(((IkReal(-1.00000000000000))*(r20)*(x1000)*(x1003)))+(((IkReal(-1.00000000000000))*(r22)*(sj15)*(x1000))));
evalcond[4]=((((r01)*(x1009)))+(((r01)*(x1006)))+(((cj11)*(x998)))+(((IkReal(-1.00000000000000))*(r02)*(sj15)*(x1000)))+(((IkReal(-1.00000000000000))*(r00)*(x1000)*(x1003)))+(((x1005)*(x999)))+(((r00)*(x1001))));
evalcond[5]=((((IkReal(-1.00000000000000))*(r10)*(x1000)*(x1003)))+(((sj11)*(x998)))+(((IkReal(-1.00000000000000))*(r12)*(sj15)*(x1000)))+(((r11)*(x1009)))+(((r11)*(x1006)))+(((IkReal(-1.00000000000000))*(x1002)*(x1007)))+(((r10)*(x1001))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j11;
vinfos[0].indices[0] = _ij11[0];
vinfos[0].indices[1] = _ij11[1];
vinfos[0].maxsolutions = _nj11;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j12;
vinfos[1].indices[0] = _ij12[0];
vinfos[1].indices[1] = _ij12[1];
vinfos[1].maxsolutions = _nj12;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j13;
vinfos[2].indices[0] = _ij13[0];
vinfos[2].indices[1] = _ij13[1];
vinfos[2].maxsolutions = _nj13;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j14;
vinfos[3].indices[0] = _ij14[0];
vinfos[3].indices[1] = _ij14[1];
vinfos[3].maxsolutions = _nj14;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j15;
vinfos[4].indices[0] = _ij15[0];
vinfos[4].indices[1] = _ij15[1];
vinfos[4].maxsolutions = _nj15;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j16;
vinfos[5].indices[0] = _ij16[0];
vinfos[5].indices[1] = _ij16[1];
vinfos[5].maxsolutions = _nj16;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
}
}

}

}

} else
{
{
IkReal j11array[1], cj11array[1], sj11array[1];
bool j11valid[1]={false};
_nj11 = 1;
IkReal x1011=((IkReal(1.00000000000000))*(r00));
IkReal x1012=((cj14)*(sj16));
IkReal x1013=((cj14)*(cj16));
IkReal x1014=((IkReal(1.00000000000000))*(sj14));
IkReal x1015=((cj15)*(sj16));
IkReal x1016=((cj15)*(cj16)*(sj14));
if( IKabs(((gconst0)*(((((IkReal(-1.00000000000000))*(x1011)*(x1016)))+(((IkReal(-1.00000000000000))*(x1011)*(x1012)))+(((r01)*(sj14)*(x1015)))+(((IkReal(-1.00000000000000))*(r01)*(x1013)))+(((IkReal(-1.00000000000000))*(r02)*(sj15)*(x1014))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst0)*(((((r12)*(sj14)*(sj15)))+(((IkReal(-1.00000000000000))*(r11)*(x1014)*(x1015)))+(((r10)*(x1012)))+(((r10)*(x1016)))+(((r11)*(x1013))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j11array[0]=IKatan2(((gconst0)*(((((IkReal(-1.00000000000000))*(x1011)*(x1016)))+(((IkReal(-1.00000000000000))*(x1011)*(x1012)))+(((r01)*(sj14)*(x1015)))+(((IkReal(-1.00000000000000))*(r01)*(x1013)))+(((IkReal(-1.00000000000000))*(r02)*(sj15)*(x1014)))))), ((gconst0)*(((((r12)*(sj14)*(sj15)))+(((IkReal(-1.00000000000000))*(r11)*(x1014)*(x1015)))+(((r10)*(x1012)))+(((r10)*(x1016)))+(((r11)*(x1013)))))));
sj11array[0]=IKsin(j11array[0]);
cj11array[0]=IKcos(j11array[0]);
if( j11array[0] > IKPI )
{
    j11array[0]-=IK2PI;
}
else if( j11array[0] < -IKPI )
{    j11array[0]+=IK2PI;
}
j11valid[0] = true;
for(int ij11 = 0; ij11 < 1; ++ij11)
{
if( !j11valid[ij11] )
{
    continue;
}
_ij11[0] = ij11; _ij11[1] = -1;
for(int iij11 = ij11+1; iij11 < 1; ++iij11)
{
if( j11valid[iij11] && IKabs(cj11array[ij11]-cj11array[iij11]) < IKFAST_SOLUTION_THRESH && IKabs(sj11array[ij11]-sj11array[iij11]) < IKFAST_SOLUTION_THRESH )
{
    j11valid[iij11]=false; _ij11[1] = iij11; break; 
}
}
j11 = j11array[ij11]; cj11 = cj11array[ij11]; sj11 = sj11array[ij11];
{
IkReal evalcond[4];
IkReal x1017=IKsin(j11);
IkReal x1018=IKcos(j11);
IkReal x1019=((cj15)*(cj16));
IkReal x1020=((cj16)*(r00));
IkReal x1021=((IkReal(0.000500000000000000))*(sj15));
IkReal x1022=((IkReal(0.0159000000000000))*(cj14));
IkReal x1023=((r01)*(sj16));
IkReal x1024=((IkReal(0.0136000000000000))*(sj15));
IkReal x1025=((IkReal(0.000500000000000000))*(cj15));
IkReal x1026=((IkReal(0.210000000000000))*(sj14));
IkReal x1027=((r10)*(sj14));
IkReal x1028=((cj14)*(cj16));
IkReal x1029=((IkReal(0.354900000000000))*(cj16));
IkReal x1030=((IkReal(0.0159000000000000))*(sj16));
IkReal x1031=((r00)*(sj14));
IkReal x1032=((IkReal(0.354900000000000))*(sj16));
IkReal x1033=((r11)*(sj16));
IkReal x1034=((cj16)*(r10));
IkReal x1035=((sj15)*(x1026));
IkReal x1036=((IkReal(1.00000000000000))*(cj14)*(sj16));
IkReal x1037=((IkReal(1.00000000000000))*(sj14)*(sj15));
IkReal x1038=((IkReal(0.0159000000000000))*(cj16)*(sj14));
IkReal x1039=((cj12)*(x1017));
IkReal x1040=((cj15)*(x1033));
IkReal x1041=((cj12)*(x1018));
IkReal x1042=((IkReal(0.210000000000000))*(cj14)*(sj16));
evalcond[0]=((((IkReal(-1.00000000000000))*(r10)*(x1036)))+(x1041)+(((IkReal(-1.00000000000000))*(x1019)*(x1027)))+(((IkReal(-1.00000000000000))*(r11)*(x1028)))+(((IkReal(-1.00000000000000))*(r12)*(x1037)))+(((sj14)*(x1040))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x1039)))+(((cj15)*(sj14)*(x1023)))+(((IkReal(-1.00000000000000))*(r01)*(x1028)))+(((IkReal(-1.00000000000000))*(r02)*(x1037)))+(((IkReal(-1.00000000000000))*(x1019)*(x1031)))+(((IkReal(-1.00000000000000))*(r00)*(x1036))));
evalcond[2]=((((IkReal(-1.00000000000000))*(r00)*(x1019)*(x1022)))+(((IkReal(-1.00000000000000))*(r00)*(x1019)*(x1026)))+(((IkReal(-0.0136000000000000))*(r00)*(x1019)))+(((x1030)*(x1031)))+(((IkReal(-1.00000000000000))*(r00)*(x1042)))+(((IkReal(0.0104000000000000))*(x1018)))+(((IkReal(-1.00000000000000))*(x1020)*(x1021)))+(((IkReal(-1.00000000000000))*(r02)*(x1035)))+(((cj15)*(x1023)*(x1026)))+(((IkReal(-0.0182200000000000))*(x1020)))+(((IkReal(-1.00000000000000))*(px)))+(((cj15)*(x1022)*(x1023)))+(((IkReal(0.0136000000000000))*(cj15)*(x1023)))+(((IkReal(0.0300000000000000))*(x1017)))+(((x1021)*(x1023)))+(((IkReal(0.136600000000000))*(x1039)))+(((IkReal(-1.00000000000000))*(r02)*(sj15)*(x1022)))+(((IkReal(-1.00000000000000))*(r02)*(x1024)))+(((r02)*(x1025)))+(((IkReal(-1.00000000000000))*(r01)*(x1029)))+(((IkReal(0.0182200000000000))*(x1023)))+(((IkReal(-0.210000000000000))*(r01)*(x1028)))+(((IkReal(-1.00000000000000))*(r00)*(x1032)))+(((r01)*(x1038))));
evalcond[3]=((((x1026)*(x1040)))+(((IkReal(-1.00000000000000))*(r12)*(x1024)))+(((IkReal(-1.00000000000000))*(r10)*(x1032)))+(((x1022)*(x1040)))+(((x1021)*(x1033)))+(((IkReal(-1.00000000000000))*(r11)*(x1029)))+(((IkReal(-1.00000000000000))*(x1021)*(x1034)))+(((IkReal(-1.00000000000000))*(r10)*(x1042)))+(((IkReal(0.0104000000000000))*(x1017)))+(((r12)*(x1025)))+(((IkReal(-0.210000000000000))*(r11)*(x1028)))+(((IkReal(-1.00000000000000))*(py)))+(((IkReal(-0.136600000000000))*(x1041)))+(((IkReal(-1.00000000000000))*(r12)*(sj15)*(x1022)))+(((x1027)*(x1030)))+(((IkReal(-1.00000000000000))*(r12)*(x1035)))+(((r11)*(x1038)))+(((IkReal(-0.0182200000000000))*(x1034)))+(((IkReal(0.0136000000000000))*(x1040)))+(((IkReal(-0.0136000000000000))*(r10)*(x1019)))+(((IkReal(-1.00000000000000))*(r10)*(x1019)*(x1022)))+(((IkReal(-1.00000000000000))*(r10)*(x1019)*(x1026)))+(((IkReal(0.0182200000000000))*(x1033)))+(((IkReal(-0.0300000000000000))*(x1018))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
IkReal dummyeval[1];
IkReal gconst2;
gconst2=IKsign(cj12);
dummyeval[0]=cj12;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[2];
IkReal x1043=(sj11)*(sj11);
IkReal x1044=(cj11)*(cj11);
dummyeval[0]=((x1043)+(x1044));
dummyeval[1]=((((sj12)*(x1044)))+(((sj12)*(x1043))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  || IKabs(dummyeval[1]) < 0.0000010000000000  )
{
{
IkReal dummyeval[2];
dummyeval[0]=cj11;
dummyeval[1]=cj12;
if( IKabs(dummyeval[0]) < 0.0000010000000000  || IKabs(dummyeval[1]) < 0.0000010000000000  )
{
{
IkReal evalcond[9];
IkReal x1045=((cj15)*(cj16));
IkReal x1046=((IkReal(0.210000000000000))*(sj14));
IkReal x1047=((r22)*(sj15));
IkReal x1048=((IkReal(1.00000000000000))*(sj14));
IkReal x1049=((r02)*(sj15));
IkReal x1050=((IkReal(0.000500000000000000))*(sj15));
IkReal x1051=((cj16)*(r00));
IkReal x1052=((IkReal(0.0159000000000000))*(cj14));
IkReal x1053=((IkReal(0.0159000000000000))*(sj14));
IkReal x1054=((cj16)*(r11));
IkReal x1055=((r01)*(sj16));
IkReal x1056=((cj15)*(sj16));
IkReal x1057=((r12)*(sj15));
IkReal x1058=((IkReal(0.000500000000000000))*(cj15));
IkReal x1059=((r20)*(sj16));
IkReal x1060=((IkReal(0.210000000000000))*(cj14));
IkReal x1061=((cj16)*(r21));
IkReal x1062=((r10)*(sj16));
IkReal x1063=((r21)*(sj16));
IkReal x1064=((cj16)*(r01));
IkReal x1065=((r00)*(sj16));
IkReal x1066=((IkReal(1.00000000000000))*(cj14));
IkReal x1067=((r11)*(sj16));
IkReal x1068=((cj16)*(r20));
IkReal x1069=((cj16)*(r10));
IkReal x1070=((sj15)*(x1046));
IkReal x1071=((sj16)*(x1066));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(1.57079632679490))+(j11)), IkReal(6.28318530717959))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x1059)*(x1066)))+(((IkReal(-1.00000000000000))*(r20)*(x1045)*(x1048)))+(((IkReal(-1.00000000000000))*(x1061)*(x1066)))+(((IkReal(-1.00000000000000))*(sj12)))+(((r21)*(sj14)*(x1056)))+(((IkReal(-1.00000000000000))*(x1047)*(x1048))));
evalcond[2]=((((r11)*(sj14)*(x1056)))+(((IkReal(-1.00000000000000))*(x1062)*(x1066)))+(((IkReal(-1.00000000000000))*(r10)*(x1045)*(x1048)))+(((IkReal(-1.00000000000000))*(x1048)*(x1057)))+(((IkReal(-1.00000000000000))*(x1054)*(x1066))));
evalcond[3]=((((IkReal(-1.00000000000000))*(r00)*(x1045)*(x1048)))+(((IkReal(-1.00000000000000))*(x1048)*(x1049)))+(((cj15)*(sj14)*(x1055)))+(((IkReal(-1.00000000000000))*(cj12)))+(((IkReal(-1.00000000000000))*(x1064)*(x1066)))+(((IkReal(-1.00000000000000))*(x1065)*(x1066))));
evalcond[4]=((((IkReal(-1.00000000000000))*(x1046)*(x1047)))+(((IkReal(-1.00000000000000))*(x1060)*(x1061)))+(((IkReal(-0.354900000000000))*(x1059)))+(((IkReal(-0.354900000000000))*(x1061)))+(((IkReal(0.0182200000000000))*(x1063)))+(((IkReal(0.136600000000000))*(sj12)))+(((IkReal(-1.00000000000000))*(x1059)*(x1060)))+(((IkReal(-1.00000000000000))*(r20)*(x1045)*(x1052)))+(((IkReal(-1.00000000000000))*(r20)*(x1045)*(x1046)))+(((r21)*(x1046)*(x1056)))+(((x1053)*(x1059)))+(((x1050)*(x1063)))+(((r21)*(x1052)*(x1056)))+(((IkReal(-1.00000000000000))*(pz)))+(((IkReal(0.0136000000000000))*(r21)*(x1056)))+(((x1053)*(x1061)))+(((r22)*(x1058)))+(((IkReal(-0.0136000000000000))*(x1047)))+(((IkReal(-0.0136000000000000))*(r20)*(x1045)))+(((IkReal(-1.00000000000000))*(x1047)*(x1052)))+(((IkReal(-1.00000000000000))*(x1050)*(x1068)))+(((IkReal(-0.0182200000000000))*(x1068))));
evalcond[5]=((IkReal(0.0300000000000000))+(((IkReal(-1.00000000000000))*(x1046)*(x1049)))+(((IkReal(-1.00000000000000))*(x1060)*(x1064)))+(((IkReal(-1.00000000000000))*(x1060)*(x1065)))+(((IkReal(-0.354900000000000))*(x1065)))+(((IkReal(-0.354900000000000))*(x1064)))+(((r02)*(x1058)))+(((IkReal(0.0136000000000000))*(cj15)*(x1055)))+(((cj15)*(x1046)*(x1055)))+(((IkReal(0.0182200000000000))*(x1055)))+(((IkReal(-1.00000000000000))*(r00)*(x1045)*(x1046)))+(((x1050)*(x1055)))+(((cj15)*(x1052)*(x1055)))+(((IkReal(-1.00000000000000))*(r00)*(x1045)*(x1052)))+(((IkReal(-1.00000000000000))*(px)))+(((x1053)*(x1064)))+(((x1053)*(x1065)))+(((IkReal(-0.0136000000000000))*(r00)*(x1045)))+(((IkReal(-0.0136000000000000))*(x1049)))+(((IkReal(-1.00000000000000))*(x1050)*(x1051)))+(((IkReal(-1.00000000000000))*(x1049)*(x1052)))+(((IkReal(0.136600000000000))*(cj12)))+(((IkReal(-0.0182200000000000))*(x1051))));
evalcond[6]=((IkReal(0.0104000000000000))+(((r11)*(x1052)*(x1056)))+(((r12)*(x1058)))+(((IkReal(-1.00000000000000))*(x1052)*(x1057)))+(((IkReal(-1.00000000000000))*(x1060)*(x1062)))+(((IkReal(-0.354900000000000))*(x1054)))+(((IkReal(-1.00000000000000))*(x1046)*(x1057)))+(((IkReal(-0.354900000000000))*(x1062)))+(((IkReal(0.0182200000000000))*(x1067)))+(((x1053)*(x1054)))+(((x1050)*(x1067)))+(((IkReal(-1.00000000000000))*(py)))+(((x1053)*(x1062)))+(((IkReal(-0.0136000000000000))*(r10)*(x1045)))+(((IkReal(-1.00000000000000))*(r10)*(x1045)*(x1046)))+(((IkReal(0.0136000000000000))*(r11)*(x1056)))+(((IkReal(-1.00000000000000))*(r10)*(x1045)*(x1052)))+(((IkReal(-1.00000000000000))*(x1054)*(x1060)))+(((IkReal(-0.0136000000000000))*(x1057)))+(((r11)*(x1046)*(x1056)))+(((IkReal(-1.00000000000000))*(x1050)*(x1069)))+(((IkReal(-0.0182200000000000))*(x1069))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  )
{
{
IkReal j13array[1], cj13array[1], sj13array[1];
bool j13valid[1]={false};
_nj13 = 1;
IkReal x1072=((cj16)*(r10));
IkReal x1073=((r11)*(sj16));
IkReal x1074=((cj14)*(cj15));
IkReal x1075=((IkReal(1.00000000000000))*(sj14));
if( IKabs(((((sj15)*(x1073)))+(((cj15)*(r12)))+(((IkReal(-1.00000000000000))*(sj15)*(x1072))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((IkReal(-1.00000000000000))*(r10)*(sj16)*(x1075)))+(((IkReal(-1.00000000000000))*(cj16)*(r11)*(x1075)))+(((x1072)*(x1074)))+(((IkReal(-1.00000000000000))*(x1073)*(x1074)))+(((cj14)*(r12)*(sj15))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((sj15)*(x1073)))+(((cj15)*(r12)))+(((IkReal(-1.00000000000000))*(sj15)*(x1072)))))+IKsqr(((((IkReal(-1.00000000000000))*(r10)*(sj16)*(x1075)))+(((IkReal(-1.00000000000000))*(cj16)*(r11)*(x1075)))+(((x1072)*(x1074)))+(((IkReal(-1.00000000000000))*(x1073)*(x1074)))+(((cj14)*(r12)*(sj15)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j13array[0]=IKatan2(((((sj15)*(x1073)))+(((cj15)*(r12)))+(((IkReal(-1.00000000000000))*(sj15)*(x1072)))), ((((IkReal(-1.00000000000000))*(r10)*(sj16)*(x1075)))+(((IkReal(-1.00000000000000))*(cj16)*(r11)*(x1075)))+(((x1072)*(x1074)))+(((IkReal(-1.00000000000000))*(x1073)*(x1074)))+(((cj14)*(r12)*(sj15)))));
sj13array[0]=IKsin(j13array[0]);
cj13array[0]=IKcos(j13array[0]);
if( j13array[0] > IKPI )
{
    j13array[0]-=IK2PI;
}
else if( j13array[0] < -IKPI )
{    j13array[0]+=IK2PI;
}
j13valid[0] = true;
for(int ij13 = 0; ij13 < 1; ++ij13)
{
if( !j13valid[ij13] )
{
    continue;
}
_ij13[0] = ij13; _ij13[1] = -1;
for(int iij13 = ij13+1; iij13 < 1; ++iij13)
{
if( j13valid[iij13] && IKabs(cj13array[ij13]-cj13array[iij13]) < IKFAST_SOLUTION_THRESH && IKabs(sj13array[ij13]-sj13array[iij13]) < IKFAST_SOLUTION_THRESH )
{
    j13valid[iij13]=false; _ij13[1] = iij13; break; 
}
}
j13 = j13array[ij13]; cj13 = cj13array[ij13]; sj13 = sj13array[ij13];
{
IkReal evalcond[6];
IkReal x1076=IKcos(j13);
IkReal x1077=IKsin(j13);
IkReal x1078=((IkReal(1.00000000000000))*(cj14));
IkReal x1079=((sj14)*(sj16));
IkReal x1080=((cj15)*(cj16));
IkReal x1081=((sj15)*(sj16));
IkReal x1082=((cj16)*(sj14));
IkReal x1083=((IkReal(1.00000000000000))*(cj16)*(sj15));
IkReal x1084=((IkReal(1.00000000000000))*(x1077));
IkReal x1085=((cj14)*(cj15)*(sj16));
evalcond[0]=((((IkReal(-1.00000000000000))*(cj12)*(x1076)))+(((cj15)*(r22)))+(((IkReal(-1.00000000000000))*(r20)*(x1083)))+(((r21)*(x1081))));
evalcond[1]=((((cj15)*(r02)))+(((r01)*(x1081)))+(((IkReal(-1.00000000000000))*(r00)*(x1083)))+(((sj12)*(x1076))));
evalcond[2]=((((cj15)*(r12)))+(((IkReal(-1.00000000000000))*(r10)*(x1083)))+(((r11)*(x1081)))+(((IkReal(-1.00000000000000))*(x1084))));
evalcond[3]=((((IkReal(-1.00000000000000))*(r22)*(sj15)*(x1078)))+(((IkReal(-1.00000000000000))*(cj12)*(x1084)))+(((r20)*(x1079)))+(((IkReal(-1.00000000000000))*(r20)*(x1078)*(x1080)))+(((r21)*(x1082)))+(((r21)*(x1085))));
evalcond[4]=((((r01)*(x1082)))+(((r01)*(x1085)))+(((IkReal(-1.00000000000000))*(r02)*(sj15)*(x1078)))+(((IkReal(-1.00000000000000))*(r00)*(x1078)*(x1080)))+(((sj12)*(x1077)))+(((r00)*(x1079))));
evalcond[5]=((x1076)+(((r11)*(x1085)))+(((r11)*(x1082)))+(((IkReal(-1.00000000000000))*(r10)*(x1078)*(x1080)))+(((r10)*(x1079)))+(((IkReal(-1.00000000000000))*(r12)*(sj15)*(x1078))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j11;
vinfos[0].indices[0] = _ij11[0];
vinfos[0].indices[1] = _ij11[1];
vinfos[0].maxsolutions = _nj11;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j12;
vinfos[1].indices[0] = _ij12[0];
vinfos[1].indices[1] = _ij12[1];
vinfos[1].maxsolutions = _nj12;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j13;
vinfos[2].indices[0] = _ij13[0];
vinfos[2].indices[1] = _ij13[1];
vinfos[2].maxsolutions = _nj13;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j14;
vinfos[3].indices[0] = _ij14[0];
vinfos[3].indices[1] = _ij14[1];
vinfos[3].maxsolutions = _nj14;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j15;
vinfos[4].indices[0] = _ij15[0];
vinfos[4].indices[1] = _ij15[1];
vinfos[4].maxsolutions = _nj15;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j16;
vinfos[5].indices[0] = _ij16[0];
vinfos[5].indices[1] = _ij16[1];
vinfos[5].maxsolutions = _nj16;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

} else
{
IkReal x1086=((cj15)*(cj16));
IkReal x1087=((IkReal(0.210000000000000))*(sj14));
IkReal x1088=((r22)*(sj15));
IkReal x1089=((IkReal(1.00000000000000))*(sj14));
IkReal x1090=((r02)*(sj15));
IkReal x1091=((IkReal(0.000500000000000000))*(sj15));
IkReal x1092=((cj16)*(r00));
IkReal x1093=((IkReal(0.0159000000000000))*(cj14));
IkReal x1094=((IkReal(0.0159000000000000))*(sj14));
IkReal x1095=((cj16)*(r11));
IkReal x1096=((r01)*(sj16));
IkReal x1097=((cj15)*(sj16));
IkReal x1098=((r12)*(sj15));
IkReal x1099=((IkReal(0.000500000000000000))*(cj15));
IkReal x1100=((r20)*(sj16));
IkReal x1101=((IkReal(0.210000000000000))*(cj14));
IkReal x1102=((cj16)*(r21));
IkReal x1103=((r10)*(sj16));
IkReal x1104=((r21)*(sj16));
IkReal x1105=((cj16)*(r01));
IkReal x1106=((r00)*(sj16));
IkReal x1107=((IkReal(1.00000000000000))*(cj14));
IkReal x1108=((r11)*(sj16));
IkReal x1109=((cj16)*(r20));
IkReal x1110=((cj16)*(r10));
IkReal x1111=((sj15)*(x1087));
IkReal x1112=((sj16)*(x1107));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(4.71238898038469))+(j11)), IkReal(6.28318530717959))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x1088)*(x1089)))+(((IkReal(-1.00000000000000))*(sj12)))+(((IkReal(-1.00000000000000))*(r20)*(x1086)*(x1089)))+(((IkReal(-1.00000000000000))*(x1100)*(x1107)))+(((r21)*(sj14)*(x1097)))+(((IkReal(-1.00000000000000))*(x1102)*(x1107))));
evalcond[2]=((((IkReal(-1.00000000000000))*(x1103)*(x1107)))+(((IkReal(-1.00000000000000))*(r10)*(x1086)*(x1089)))+(((IkReal(-1.00000000000000))*(x1089)*(x1098)))+(((r11)*(sj14)*(x1097)))+(((IkReal(-1.00000000000000))*(x1095)*(x1107))));
evalcond[3]=((((IkReal(-1.00000000000000))*(r00)*(x1086)*(x1089)))+(((IkReal(-1.00000000000000))*(x1089)*(x1090)))+(cj12)+(((IkReal(-1.00000000000000))*(x1106)*(x1107)))+(((cj15)*(sj14)*(x1096)))+(((IkReal(-1.00000000000000))*(x1105)*(x1107))));
evalcond[4]=((((IkReal(-1.00000000000000))*(x1091)*(x1109)))+(((IkReal(-1.00000000000000))*(r20)*(x1086)*(x1093)))+(((x1094)*(x1100)))+(((x1094)*(x1102)))+(((IkReal(0.0136000000000000))*(r21)*(x1097)))+(((IkReal(-0.354900000000000))*(x1100)))+(((IkReal(-0.354900000000000))*(x1102)))+(((IkReal(0.136600000000000))*(sj12)))+(((IkReal(-1.00000000000000))*(x1088)*(x1093)))+(((IkReal(0.0182200000000000))*(x1104)))+(((r22)*(x1099)))+(((x1091)*(x1104)))+(((IkReal(-1.00000000000000))*(pz)))+(((IkReal(-0.0136000000000000))*(r20)*(x1086)))+(((IkReal(-1.00000000000000))*(x1087)*(x1088)))+(((IkReal(-0.0136000000000000))*(x1088)))+(((r21)*(x1087)*(x1097)))+(((IkReal(-1.00000000000000))*(r20)*(x1086)*(x1087)))+(((IkReal(-1.00000000000000))*(x1100)*(x1101)))+(((IkReal(-0.0182200000000000))*(x1109)))+(((r21)*(x1093)*(x1097)))+(((IkReal(-1.00000000000000))*(x1101)*(x1102))));
evalcond[5]=((IkReal(-0.0300000000000000))+(((x1094)*(x1105)))+(((x1094)*(x1106)))+(((IkReal(-1.00000000000000))*(x1091)*(x1092)))+(((IkReal(-0.354900000000000))*(x1106)))+(((IkReal(-0.354900000000000))*(x1105)))+(((IkReal(-1.00000000000000))*(r00)*(x1086)*(x1087)))+(((IkReal(-0.0136000000000000))*(x1090)))+(((IkReal(-1.00000000000000))*(x1090)*(x1093)))+(((IkReal(-0.136600000000000))*(cj12)))+(((IkReal(0.0136000000000000))*(cj15)*(x1096)))+(((r02)*(x1099)))+(((IkReal(-1.00000000000000))*(px)))+(((cj15)*(x1087)*(x1096)))+(((IkReal(-0.0182200000000000))*(x1092)))+(((IkReal(-1.00000000000000))*(x1087)*(x1090)))+(((IkReal(0.0182200000000000))*(x1096)))+(((cj15)*(x1093)*(x1096)))+(((IkReal(-0.0136000000000000))*(r00)*(x1086)))+(((IkReal(-1.00000000000000))*(r00)*(x1086)*(x1093)))+(((x1091)*(x1096)))+(((IkReal(-1.00000000000000))*(x1101)*(x1106)))+(((IkReal(-1.00000000000000))*(x1101)*(x1105))));
evalcond[6]=((IkReal(-0.0104000000000000))+(((IkReal(-1.00000000000000))*(x1091)*(x1110)))+(((r11)*(x1093)*(x1097)))+(((x1094)*(x1103)))+(((IkReal(-0.354900000000000))*(x1103)))+(((IkReal(-1.00000000000000))*(r10)*(x1086)*(x1087)))+(((IkReal(-0.0136000000000000))*(x1098)))+(((IkReal(0.0182200000000000))*(x1108)))+(((IkReal(0.0136000000000000))*(r11)*(x1097)))+(((x1094)*(x1095)))+(((x1091)*(x1108)))+(((IkReal(-1.00000000000000))*(py)))+(((IkReal(-1.00000000000000))*(r10)*(x1086)*(x1093)))+(((IkReal(-1.00000000000000))*(x1087)*(x1098)))+(((IkReal(-0.0182200000000000))*(x1110)))+(((r12)*(x1099)))+(((IkReal(-0.0136000000000000))*(r10)*(x1086)))+(((IkReal(-0.354900000000000))*(x1095)))+(((IkReal(-1.00000000000000))*(x1093)*(x1098)))+(((IkReal(-1.00000000000000))*(x1095)*(x1101)))+(((r11)*(x1087)*(x1097)))+(((IkReal(-1.00000000000000))*(x1101)*(x1103))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  )
{
{
IkReal j13array[1], cj13array[1], sj13array[1];
bool j13valid[1]={false};
_nj13 = 1;
IkReal x1113=((IkReal(1.00000000000000))*(sj15));
IkReal x1114=((r11)*(sj16));
IkReal x1115=((cj14)*(cj15));
IkReal x1116=((cj16)*(r10));
if( IKabs(((((IkReal(-1.00000000000000))*(x1113)*(x1114)))+(((sj15)*(x1116)))+(((IkReal(-1.00000000000000))*(cj15)*(r12))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((x1114)*(x1115)))+(((cj16)*(r11)*(sj14)))+(((IkReal(-1.00000000000000))*(x1115)*(x1116)))+(((r10)*(sj14)*(sj16)))+(((IkReal(-1.00000000000000))*(cj14)*(r12)*(x1113))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((IkReal(-1.00000000000000))*(x1113)*(x1114)))+(((sj15)*(x1116)))+(((IkReal(-1.00000000000000))*(cj15)*(r12)))))+IKsqr(((((x1114)*(x1115)))+(((cj16)*(r11)*(sj14)))+(((IkReal(-1.00000000000000))*(x1115)*(x1116)))+(((r10)*(sj14)*(sj16)))+(((IkReal(-1.00000000000000))*(cj14)*(r12)*(x1113)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j13array[0]=IKatan2(((((IkReal(-1.00000000000000))*(x1113)*(x1114)))+(((sj15)*(x1116)))+(((IkReal(-1.00000000000000))*(cj15)*(r12)))), ((((x1114)*(x1115)))+(((cj16)*(r11)*(sj14)))+(((IkReal(-1.00000000000000))*(x1115)*(x1116)))+(((r10)*(sj14)*(sj16)))+(((IkReal(-1.00000000000000))*(cj14)*(r12)*(x1113)))));
sj13array[0]=IKsin(j13array[0]);
cj13array[0]=IKcos(j13array[0]);
if( j13array[0] > IKPI )
{
    j13array[0]-=IK2PI;
}
else if( j13array[0] < -IKPI )
{    j13array[0]+=IK2PI;
}
j13valid[0] = true;
for(int ij13 = 0; ij13 < 1; ++ij13)
{
if( !j13valid[ij13] )
{
    continue;
}
_ij13[0] = ij13; _ij13[1] = -1;
for(int iij13 = ij13+1; iij13 < 1; ++iij13)
{
if( j13valid[iij13] && IKabs(cj13array[ij13]-cj13array[iij13]) < IKFAST_SOLUTION_THRESH && IKabs(sj13array[ij13]-sj13array[iij13]) < IKFAST_SOLUTION_THRESH )
{
    j13valid[iij13]=false; _ij13[1] = iij13; break; 
}
}
j13 = j13array[ij13]; cj13 = cj13array[ij13]; sj13 = sj13array[ij13];
{
IkReal evalcond[6];
IkReal x1117=IKcos(j13);
IkReal x1118=IKsin(j13);
IkReal x1119=((IkReal(1.00000000000000))*(cj14));
IkReal x1120=((sj14)*(sj16));
IkReal x1121=((cj15)*(cj16));
IkReal x1122=((IkReal(1.00000000000000))*(sj12));
IkReal x1123=((sj15)*(sj16));
IkReal x1124=((cj16)*(sj14));
IkReal x1125=((IkReal(1.00000000000000))*(cj16)*(sj15));
IkReal x1126=((IkReal(1.00000000000000))*(x1117));
IkReal x1127=((cj14)*(cj15)*(sj16));
evalcond[0]=((((IkReal(-1.00000000000000))*(cj12)*(x1126)))+(((cj15)*(r22)))+(((r21)*(x1123)))+(((IkReal(-1.00000000000000))*(r20)*(x1125))));
evalcond[1]=((((cj15)*(r02)))+(((r01)*(x1123)))+(((IkReal(-1.00000000000000))*(x1117)*(x1122)))+(((IkReal(-1.00000000000000))*(r00)*(x1125))));
evalcond[2]=((x1118)+(((cj15)*(r12)))+(((IkReal(-1.00000000000000))*(r10)*(x1125)))+(((r11)*(x1123))));
evalcond[3]=((((IkReal(-1.00000000000000))*(r22)*(sj15)*(x1119)))+(((r21)*(x1127)))+(((r21)*(x1124)))+(((IkReal(-1.00000000000000))*(r20)*(x1119)*(x1121)))+(((IkReal(-1.00000000000000))*(cj12)*(x1118)))+(((r20)*(x1120))));
evalcond[4]=((((r00)*(x1120)))+(((r01)*(x1124)))+(((r01)*(x1127)))+(((IkReal(-1.00000000000000))*(r02)*(sj15)*(x1119)))+(((IkReal(-1.00000000000000))*(r00)*(x1119)*(x1121)))+(((IkReal(-1.00000000000000))*(x1118)*(x1122))));
evalcond[5]=((((r10)*(x1120)))+(((IkReal(-1.00000000000000))*(r10)*(x1119)*(x1121)))+(((IkReal(-1.00000000000000))*(x1126)))+(((IkReal(-1.00000000000000))*(r12)*(sj15)*(x1119)))+(((r11)*(x1124)))+(((r11)*(x1127))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j11;
vinfos[0].indices[0] = _ij11[0];
vinfos[0].indices[1] = _ij11[1];
vinfos[0].maxsolutions = _nj11;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j12;
vinfos[1].indices[0] = _ij12[0];
vinfos[1].indices[1] = _ij12[1];
vinfos[1].maxsolutions = _nj12;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j13;
vinfos[2].indices[0] = _ij13[0];
vinfos[2].indices[1] = _ij13[1];
vinfos[2].maxsolutions = _nj13;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j14;
vinfos[3].indices[0] = _ij14[0];
vinfos[3].indices[1] = _ij14[1];
vinfos[3].maxsolutions = _nj14;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j15;
vinfos[4].indices[0] = _ij15[0];
vinfos[4].indices[1] = _ij15[1];
vinfos[4].maxsolutions = _nj15;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j16;
vinfos[5].indices[0] = _ij16[0];
vinfos[5].indices[1] = _ij16[1];
vinfos[5].maxsolutions = _nj16;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

} else
{
IkReal x1128=((IkReal(0.0159000000000000))*(sj16));
IkReal x1129=((cj15)*(r11));
IkReal x1130=((r22)*(sj15));
IkReal x1131=((r00)*(sj14));
IkReal x1132=((IkReal(0.000500000000000000))*(sj15));
IkReal x1133=((r01)*(sj16));
IkReal x1134=((r20)*(sj14));
IkReal x1135=((IkReal(0.210000000000000))*(sj16));
IkReal x1136=((cj15)*(r21));
IkReal x1137=((cj16)*(r21));
IkReal x1138=((cj15)*(cj16));
IkReal x1139=((r10)*(sj14));
IkReal x1140=((cj14)*(r00));
IkReal x1141=((IkReal(0.354900000000000))*(sj16));
IkReal x1142=((sj14)*(sj16));
IkReal x1143=((cj16)*(r00));
IkReal x1144=((IkReal(0.0159000000000000))*(cj14));
IkReal x1145=((r02)*(sj15));
IkReal x1146=((IkReal(1.00000000000000))*(sj16));
IkReal x1147=((cj14)*(r20));
IkReal x1148=((cj14)*(r10));
IkReal x1149=((IkReal(0.000500000000000000))*(cj15));
IkReal x1150=((IkReal(1.00000000000000))*(cj14));
IkReal x1151=((IkReal(0.210000000000000))*(sj14));
IkReal x1152=((cj16)*(r10));
IkReal x1153=((IkReal(1.00000000000000))*(sj14));
IkReal x1154=((IkReal(0.0159000000000000))*(sj14));
IkReal x1155=((cj16)*(r11));
IkReal x1156=((r12)*(sj15));
IkReal x1157=((r21)*(sj16));
IkReal x1158=((cj16)*(r01));
IkReal x1159=((cj16)*(r20));
IkReal x1160=((r11)*(sj16));
IkReal x1161=((IkReal(0.0136000000000000))*(sj16));
IkReal x1162=((sj14)*(x1156));
IkReal x1163=((IkReal(0.210000000000000))*(cj14)*(cj16));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(1.57079632679490))+(j12)), IkReal(6.28318530717959))));
evalcond[1]=((((cj15)*(r22)))+(((IkReal(-1.00000000000000))*(sj15)*(x1159)))+(((sj15)*(x1157))));
evalcond[2]=((IkReal(-1.00000000000000))+(((IkReal(-1.00000000000000))*(x1134)*(x1138)))+(((IkReal(-1.00000000000000))*(x1146)*(x1147)))+(((IkReal(-1.00000000000000))*(x1130)*(x1153)))+(((IkReal(-1.00000000000000))*(x1137)*(x1150)))+(((x1136)*(x1142))));
evalcond[3]=((((IkReal(-1.00000000000000))*(x1138)*(x1147)))+(((IkReal(-1.00000000000000))*(x1130)*(x1150)))+(((sj14)*(x1137)))+(((cj14)*(sj16)*(x1136)))+(((sj16)*(x1134))));
evalcond[4]=((((IkReal(-1.00000000000000))*(x1146)*(x1148)))+(((x1129)*(x1142)))+(((IkReal(-1.00000000000000))*(x1138)*(x1139)))+(((IkReal(-1.00000000000000))*(x1153)*(x1156)))+(((IkReal(-1.00000000000000))*(x1150)*(x1155))));
evalcond[5]=((((IkReal(-1.00000000000000))*(x1140)*(x1146)))+(((IkReal(-1.00000000000000))*(x1131)*(x1138)))+(((cj15)*(sj14)*(x1133)))+(((IkReal(-1.00000000000000))*(x1145)*(x1153)))+(((IkReal(-1.00000000000000))*(x1150)*(x1158))));
evalcond[6]=((IkReal(0.136600000000000))+(((IkReal(-1.00000000000000))*(x1135)*(x1147)))+(((IkReal(-0.0136000000000000))*(r20)*(x1138)))+(((cj14)*(x1128)*(x1136)))+(((IkReal(-1.00000000000000))*(x1132)*(x1159)))+(((x1137)*(x1154)))+(((r22)*(x1149)))+(((x1132)*(x1157)))+(((IkReal(-1.00000000000000))*(r20)*(x1138)*(x1144)))+(((IkReal(-1.00000000000000))*(pz)))+(((x1136)*(x1161)))+(((IkReal(-1.00000000000000))*(x1130)*(x1151)))+(((IkReal(-1.00000000000000))*(r20)*(x1141)))+(((IkReal(-0.210000000000000))*(x1134)*(x1138)))+(((IkReal(-0.210000000000000))*(cj14)*(x1137)))+(((IkReal(0.0182200000000000))*(x1157)))+(((sj14)*(x1135)*(x1136)))+(((IkReal(-0.0136000000000000))*(x1130)))+(((x1128)*(x1134)))+(((IkReal(-1.00000000000000))*(x1130)*(x1144)))+(((IkReal(-0.354900000000000))*(x1137)))+(((IkReal(-0.0182200000000000))*(x1159))));
evalcond[7]=((((IkReal(-1.00000000000000))*(x1135)*(x1140)))+(((cj15)*(x1133)*(x1151)))+(((IkReal(-1.00000000000000))*(r00)*(x1141)))+(((IkReal(-0.210000000000000))*(cj14)*(x1158)))+(((IkReal(0.0136000000000000))*(cj15)*(x1133)))+(((IkReal(-0.210000000000000))*(x1131)*(x1138)))+(((IkReal(-0.354900000000000))*(x1158)))+(((IkReal(-1.00000000000000))*(x1132)*(x1143)))+(((r02)*(x1149)))+(((IkReal(-0.0136000000000000))*(x1145)))+(((IkReal(-1.00000000000000))*(px)))+(((IkReal(0.0182200000000000))*(x1133)))+(((x1128)*(x1131)))+(((IkReal(0.0300000000000000))*(sj11)))+(((IkReal(0.0104000000000000))*(cj11)))+(((IkReal(-0.0182200000000000))*(x1143)))+(((cj14)*(cj15)*(r01)*(x1128)))+(((IkReal(-0.0136000000000000))*(r00)*(x1138)))+(((IkReal(-1.00000000000000))*(x1144)*(x1145)))+(((IkReal(-1.00000000000000))*(x1145)*(x1151)))+(((x1154)*(x1158)))+(((IkReal(-0.0159000000000000))*(x1138)*(x1140)))+(((x1132)*(x1133))));
evalcond[8]=((((IkReal(-1.00000000000000))*(x1135)*(x1148)))+(((IkReal(-1.00000000000000))*(x1144)*(x1156)))+(((x1129)*(x1161)))+(((IkReal(-0.210000000000000))*(cj14)*(x1155)))+(((IkReal(-1.00000000000000))*(x1132)*(x1152)))+(((IkReal(-0.354900000000000))*(x1155)))+(((cj14)*(x1128)*(x1129)))+(((IkReal(-0.0136000000000000))*(x1156)))+(((IkReal(0.0182200000000000))*(x1160)))+(((IkReal(-1.00000000000000))*(r10)*(x1141)))+(((IkReal(-1.00000000000000))*(py)))+(((IkReal(-0.210000000000000))*(x1138)*(x1139)))+(((x1128)*(x1139)))+(((IkReal(0.0104000000000000))*(sj11)))+(((x1132)*(x1160)))+(((IkReal(-1.00000000000000))*(r10)*(x1138)*(x1144)))+(((sj14)*(x1129)*(x1135)))+(((IkReal(-1.00000000000000))*(x1151)*(x1156)))+(((x1154)*(x1155)))+(((IkReal(-0.0182200000000000))*(x1152)))+(((IkReal(-0.0300000000000000))*(cj11)))+(((r12)*(x1149)))+(((IkReal(-0.0136000000000000))*(r10)*(x1138))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  && IKabs(evalcond[7]) < 0.0000010000000000  && IKabs(evalcond[8]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst3;
gconst3=IKsign((((sj11)*(sj11))+((cj11)*(cj11))));
dummyeval[0]=(((sj11)*(sj11))+((cj11)*(cj11)));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst4;
gconst4=IKsign((((sj11)*(sj11))+((cj11)*(cj11))));
dummyeval[0]=(((sj11)*(sj11))+((cj11)*(cj11)));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j13array[1], cj13array[1], sj13array[1];
bool j13valid[1]={false};
_nj13 = 1;
IkReal x1164=((IkReal(1.00000000000000))*(cj15));
IkReal x1165=((IkReal(1.00000000000000))*(sj14));
IkReal x1166=((sj11)*(sj16));
IkReal x1167=((cj16)*(r01));
IkReal x1168=((cj11)*(cj15));
IkReal x1169=((IkReal(1.00000000000000))*(sj15));
IkReal x1170=((cj16)*(r00));
IkReal x1171=((cj11)*(r01)*(sj16));
IkReal x1172=((cj14)*(r02)*(sj15));
IkReal x1173=((sj11)*(x1170));
if( IKabs(((gconst4)*(((((cj14)*(cj15)*(x1173)))+(((r02)*(x1168)))+(((sj11)*(x1172)))+(((IkReal(-1.00000000000000))*(cj11)*(x1169)*(x1170)))+(((IkReal(-1.00000000000000))*(cj14)*(r01)*(x1164)*(x1166)))+(((sj15)*(x1171)))+(((IkReal(-1.00000000000000))*(r00)*(x1165)*(x1166)))+(((IkReal(-1.00000000000000))*(sj11)*(x1165)*(x1167))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst4)*(((((IkReal(-1.00000000000000))*(r02)*(sj11)*(x1164)))+(((cj11)*(x1172)))+(((IkReal(-1.00000000000000))*(cj11)*(x1165)*(x1167)))+(((cj14)*(x1168)*(x1170)))+(((IkReal(-1.00000000000000))*(cj14)*(x1164)*(x1171)))+(((sj15)*(x1173)))+(((IkReal(-1.00000000000000))*(cj11)*(r00)*(sj16)*(x1165)))+(((IkReal(-1.00000000000000))*(r01)*(x1166)*(x1169))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j13array[0]=IKatan2(((gconst4)*(((((cj14)*(cj15)*(x1173)))+(((r02)*(x1168)))+(((sj11)*(x1172)))+(((IkReal(-1.00000000000000))*(cj11)*(x1169)*(x1170)))+(((IkReal(-1.00000000000000))*(cj14)*(r01)*(x1164)*(x1166)))+(((sj15)*(x1171)))+(((IkReal(-1.00000000000000))*(r00)*(x1165)*(x1166)))+(((IkReal(-1.00000000000000))*(sj11)*(x1165)*(x1167)))))), ((gconst4)*(((((IkReal(-1.00000000000000))*(r02)*(sj11)*(x1164)))+(((cj11)*(x1172)))+(((IkReal(-1.00000000000000))*(cj11)*(x1165)*(x1167)))+(((cj14)*(x1168)*(x1170)))+(((IkReal(-1.00000000000000))*(cj14)*(x1164)*(x1171)))+(((sj15)*(x1173)))+(((IkReal(-1.00000000000000))*(cj11)*(r00)*(sj16)*(x1165)))+(((IkReal(-1.00000000000000))*(r01)*(x1166)*(x1169)))))));
sj13array[0]=IKsin(j13array[0]);
cj13array[0]=IKcos(j13array[0]);
if( j13array[0] > IKPI )
{
    j13array[0]-=IK2PI;
}
else if( j13array[0] < -IKPI )
{    j13array[0]+=IK2PI;
}
j13valid[0] = true;
for(int ij13 = 0; ij13 < 1; ++ij13)
{
if( !j13valid[ij13] )
{
    continue;
}
_ij13[0] = ij13; _ij13[1] = -1;
for(int iij13 = ij13+1; iij13 < 1; ++iij13)
{
if( j13valid[iij13] && IKabs(cj13array[ij13]-cj13array[iij13]) < IKFAST_SOLUTION_THRESH && IKabs(sj13array[ij13]-sj13array[iij13]) < IKFAST_SOLUTION_THRESH )
{
    j13valid[iij13]=false; _ij13[1] = iij13; break; 
}
}
j13 = j13array[ij13]; cj13 = cj13array[ij13]; sj13 = sj13array[ij13];
{
IkReal evalcond[4];
IkReal x1174=IKcos(j13);
IkReal x1175=IKsin(j13);
IkReal x1176=((IkReal(1.00000000000000))*(cj14));
IkReal x1177=((sj14)*(sj16));
IkReal x1178=((IkReal(1.00000000000000))*(cj11));
IkReal x1179=((cj15)*(cj16));
IkReal x1180=((r11)*(sj16));
IkReal x1181=((cj14)*(cj15));
IkReal x1182=((cj16)*(sj14));
IkReal x1183=((r01)*(sj16));
IkReal x1184=((sj11)*(x1174));
IkReal x1185=((sj11)*(x1175));
IkReal x1186=((IkReal(1.00000000000000))*(cj16)*(sj15));
IkReal x1187=((x1175)*(x1178));
evalcond[0]=((x1184)+(((cj15)*(r02)))+(((sj15)*(x1183)))+(((IkReal(-1.00000000000000))*(x1187)))+(((IkReal(-1.00000000000000))*(r00)*(x1186))));
evalcond[1]=((((cj15)*(r12)))+(((sj15)*(x1180)))+(((IkReal(-1.00000000000000))*(r10)*(x1186)))+(((IkReal(-1.00000000000000))*(x1185)))+(((IkReal(-1.00000000000000))*(x1174)*(x1178))));
evalcond[2]=((x1185)+(((IkReal(-1.00000000000000))*(r02)*(sj15)*(x1176)))+(((IkReal(-1.00000000000000))*(r00)*(x1176)*(x1179)))+(((r00)*(x1177)))+(((r01)*(x1182)))+(((cj11)*(x1174)))+(((x1181)*(x1183))));
evalcond[3]=((x1184)+(((x1180)*(x1181)))+(((r10)*(x1177)))+(((IkReal(-1.00000000000000))*(r12)*(sj15)*(x1176)))+(((IkReal(-1.00000000000000))*(x1187)))+(((IkReal(-1.00000000000000))*(r10)*(x1176)*(x1179)))+(((r11)*(x1182))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j11;
vinfos[0].indices[0] = _ij11[0];
vinfos[0].indices[1] = _ij11[1];
vinfos[0].maxsolutions = _nj11;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j12;
vinfos[1].indices[0] = _ij12[0];
vinfos[1].indices[1] = _ij12[1];
vinfos[1].maxsolutions = _nj12;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j13;
vinfos[2].indices[0] = _ij13[0];
vinfos[2].indices[1] = _ij13[1];
vinfos[2].maxsolutions = _nj13;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j14;
vinfos[3].indices[0] = _ij14[0];
vinfos[3].indices[1] = _ij14[1];
vinfos[3].maxsolutions = _nj14;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j15;
vinfos[4].indices[0] = _ij15[0];
vinfos[4].indices[1] = _ij15[1];
vinfos[4].maxsolutions = _nj15;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j16;
vinfos[5].indices[0] = _ij16[0];
vinfos[5].indices[1] = _ij16[1];
vinfos[5].maxsolutions = _nj16;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j13array[1], cj13array[1], sj13array[1];
bool j13valid[1]={false};
_nj13 = 1;
IkReal x1188=((cj15)*(sj11));
IkReal x1189=((cj11)*(cj15));
IkReal x1190=((cj16)*(sj15));
IkReal x1191=((IkReal(1.00000000000000))*(sj11));
IkReal x1192=((IkReal(1.00000000000000))*(cj11));
IkReal x1193=((r01)*(sj15)*(sj16));
IkReal x1194=((r11)*(sj15)*(sj16));
if( IKabs(((gconst3)*(((((IkReal(-1.00000000000000))*(r10)*(x1190)*(x1191)))+(((IkReal(-1.00000000000000))*(r00)*(x1190)*(x1192)))+(((cj11)*(x1193)))+(((sj11)*(x1194)))+(((r02)*(x1189)))+(((r12)*(x1188))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst3)*(((((r00)*(sj11)*(x1190)))+(((IkReal(-1.00000000000000))*(x1191)*(x1193)))+(((IkReal(-1.00000000000000))*(r10)*(x1190)*(x1192)))+(((cj11)*(x1194)))+(((IkReal(-1.00000000000000))*(r02)*(x1188)))+(((r12)*(x1189))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j13array[0]=IKatan2(((gconst3)*(((((IkReal(-1.00000000000000))*(r10)*(x1190)*(x1191)))+(((IkReal(-1.00000000000000))*(r00)*(x1190)*(x1192)))+(((cj11)*(x1193)))+(((sj11)*(x1194)))+(((r02)*(x1189)))+(((r12)*(x1188)))))), ((gconst3)*(((((r00)*(sj11)*(x1190)))+(((IkReal(-1.00000000000000))*(x1191)*(x1193)))+(((IkReal(-1.00000000000000))*(r10)*(x1190)*(x1192)))+(((cj11)*(x1194)))+(((IkReal(-1.00000000000000))*(r02)*(x1188)))+(((r12)*(x1189)))))));
sj13array[0]=IKsin(j13array[0]);
cj13array[0]=IKcos(j13array[0]);
if( j13array[0] > IKPI )
{
    j13array[0]-=IK2PI;
}
else if( j13array[0] < -IKPI )
{    j13array[0]+=IK2PI;
}
j13valid[0] = true;
for(int ij13 = 0; ij13 < 1; ++ij13)
{
if( !j13valid[ij13] )
{
    continue;
}
_ij13[0] = ij13; _ij13[1] = -1;
for(int iij13 = ij13+1; iij13 < 1; ++iij13)
{
if( j13valid[iij13] && IKabs(cj13array[ij13]-cj13array[iij13]) < IKFAST_SOLUTION_THRESH && IKabs(sj13array[ij13]-sj13array[iij13]) < IKFAST_SOLUTION_THRESH )
{
    j13valid[iij13]=false; _ij13[1] = iij13; break; 
}
}
j13 = j13array[ij13]; cj13 = cj13array[ij13]; sj13 = sj13array[ij13];
{
IkReal evalcond[4];
IkReal x1195=IKcos(j13);
IkReal x1196=IKsin(j13);
IkReal x1197=((IkReal(1.00000000000000))*(cj14));
IkReal x1198=((sj14)*(sj16));
IkReal x1199=((IkReal(1.00000000000000))*(cj11));
IkReal x1200=((cj15)*(cj16));
IkReal x1201=((r11)*(sj16));
IkReal x1202=((cj14)*(cj15));
IkReal x1203=((cj16)*(sj14));
IkReal x1204=((r01)*(sj16));
IkReal x1205=((sj11)*(x1195));
IkReal x1206=((sj11)*(x1196));
IkReal x1207=((IkReal(1.00000000000000))*(cj16)*(sj15));
IkReal x1208=((x1196)*(x1199));
evalcond[0]=((x1205)+(((cj15)*(r02)))+(((IkReal(-1.00000000000000))*(r00)*(x1207)))+(((IkReal(-1.00000000000000))*(x1208)))+(((sj15)*(x1204))));
evalcond[1]=((((cj15)*(r12)))+(((IkReal(-1.00000000000000))*(r10)*(x1207)))+(((IkReal(-1.00000000000000))*(x1195)*(x1199)))+(((IkReal(-1.00000000000000))*(x1206)))+(((sj15)*(x1201))));
evalcond[2]=((x1206)+(((IkReal(-1.00000000000000))*(r02)*(sj15)*(x1197)))+(((r00)*(x1198)))+(((x1202)*(x1204)))+(((cj11)*(x1195)))+(((r01)*(x1203)))+(((IkReal(-1.00000000000000))*(r00)*(x1197)*(x1200))));
evalcond[3]=((x1205)+(((r10)*(x1198)))+(((IkReal(-1.00000000000000))*(r12)*(sj15)*(x1197)))+(((r11)*(x1203)))+(((IkReal(-1.00000000000000))*(r10)*(x1197)*(x1200)))+(((x1201)*(x1202)))+(((IkReal(-1.00000000000000))*(x1208))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j11;
vinfos[0].indices[0] = _ij11[0];
vinfos[0].indices[1] = _ij11[1];
vinfos[0].maxsolutions = _nj11;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j12;
vinfos[1].indices[0] = _ij12[0];
vinfos[1].indices[1] = _ij12[1];
vinfos[1].maxsolutions = _nj12;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j13;
vinfos[2].indices[0] = _ij13[0];
vinfos[2].indices[1] = _ij13[1];
vinfos[2].maxsolutions = _nj13;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j14;
vinfos[3].indices[0] = _ij14[0];
vinfos[3].indices[1] = _ij14[1];
vinfos[3].maxsolutions = _nj14;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j15;
vinfos[4].indices[0] = _ij15[0];
vinfos[4].indices[1] = _ij15[1];
vinfos[4].maxsolutions = _nj15;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j16;
vinfos[5].indices[0] = _ij16[0];
vinfos[5].indices[1] = _ij16[1];
vinfos[5].maxsolutions = _nj16;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
IkReal x1209=((IkReal(0.0159000000000000))*(sj16));
IkReal x1210=((cj15)*(r11));
IkReal x1211=((r22)*(sj15));
IkReal x1212=((r00)*(sj14));
IkReal x1213=((IkReal(0.000500000000000000))*(sj15));
IkReal x1214=((r01)*(sj16));
IkReal x1215=((r20)*(sj14));
IkReal x1216=((IkReal(0.210000000000000))*(sj16));
IkReal x1217=((cj15)*(r21));
IkReal x1218=((cj16)*(r21));
IkReal x1219=((cj15)*(cj16));
IkReal x1220=((r10)*(sj14));
IkReal x1221=((cj14)*(r00));
IkReal x1222=((IkReal(0.354900000000000))*(sj16));
IkReal x1223=((sj14)*(sj16));
IkReal x1224=((cj16)*(r00));
IkReal x1225=((IkReal(0.0159000000000000))*(cj14));
IkReal x1226=((r02)*(sj15));
IkReal x1227=((IkReal(1.00000000000000))*(sj16));
IkReal x1228=((cj14)*(r20));
IkReal x1229=((cj14)*(r10));
IkReal x1230=((IkReal(0.000500000000000000))*(cj15));
IkReal x1231=((IkReal(1.00000000000000))*(cj14));
IkReal x1232=((IkReal(0.210000000000000))*(sj14));
IkReal x1233=((cj16)*(r10));
IkReal x1234=((IkReal(1.00000000000000))*(sj14));
IkReal x1235=((IkReal(0.0159000000000000))*(sj14));
IkReal x1236=((cj16)*(r11));
IkReal x1237=((r12)*(sj15));
IkReal x1238=((r21)*(sj16));
IkReal x1239=((cj16)*(r01));
IkReal x1240=((cj16)*(r20));
IkReal x1241=((r11)*(sj16));
IkReal x1242=((IkReal(0.0136000000000000))*(sj16));
IkReal x1243=((sj14)*(x1237));
IkReal x1244=((IkReal(0.210000000000000))*(cj14)*(cj16));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(4.71238898038469))+(j12)), IkReal(6.28318530717959))));
evalcond[1]=((((IkReal(-1.00000000000000))*(sj15)*(x1240)))+(((cj15)*(r22)))+(((sj15)*(x1238))));
evalcond[2]=((IkReal(1.00000000000000))+(((x1217)*(x1223)))+(((IkReal(-1.00000000000000))*(x1218)*(x1231)))+(((IkReal(-1.00000000000000))*(x1227)*(x1228)))+(((IkReal(-1.00000000000000))*(x1215)*(x1219)))+(((IkReal(-1.00000000000000))*(x1211)*(x1234))));
evalcond[3]=((((IkReal(-1.00000000000000))*(x1219)*(x1228)))+(((cj14)*(sj16)*(x1217)))+(((sj14)*(x1218)))+(((sj16)*(x1215)))+(((IkReal(-1.00000000000000))*(x1211)*(x1231))));
evalcond[4]=((((IkReal(-1.00000000000000))*(x1219)*(x1220)))+(((IkReal(-1.00000000000000))*(x1227)*(x1229)))+(((IkReal(-1.00000000000000))*(x1234)*(x1237)))+(((x1210)*(x1223)))+(((IkReal(-1.00000000000000))*(x1231)*(x1236))));
evalcond[5]=((((IkReal(-1.00000000000000))*(x1212)*(x1219)))+(((IkReal(-1.00000000000000))*(x1226)*(x1234)))+(((IkReal(-1.00000000000000))*(x1221)*(x1227)))+(((cj15)*(sj14)*(x1214)))+(((IkReal(-1.00000000000000))*(x1231)*(x1239))));
evalcond[6]=((IkReal(-0.136600000000000))+(((IkReal(-0.354900000000000))*(x1218)))+(((IkReal(-0.210000000000000))*(x1215)*(x1219)))+(((IkReal(-0.0136000000000000))*(x1211)))+(((IkReal(-1.00000000000000))*(x1213)*(x1240)))+(((cj14)*(x1209)*(x1217)))+(((IkReal(0.0182200000000000))*(x1238)))+(((IkReal(-1.00000000000000))*(r20)*(x1222)))+(((x1217)*(x1242)))+(((IkReal(-0.0182200000000000))*(x1240)))+(((IkReal(-1.00000000000000))*(pz)))+(((r22)*(x1230)))+(((sj14)*(x1216)*(x1217)))+(((IkReal(-0.210000000000000))*(cj14)*(x1218)))+(((x1218)*(x1235)))+(((IkReal(-1.00000000000000))*(r20)*(x1219)*(x1225)))+(((IkReal(-1.00000000000000))*(x1216)*(x1228)))+(((x1209)*(x1215)))+(((x1213)*(x1238)))+(((IkReal(-1.00000000000000))*(x1211)*(x1232)))+(((IkReal(-1.00000000000000))*(x1211)*(x1225)))+(((IkReal(-0.0136000000000000))*(r20)*(x1219))));
evalcond[7]=((((IkReal(-1.00000000000000))*(x1213)*(x1224)))+(((IkReal(-1.00000000000000))*(r00)*(x1222)))+(((IkReal(-1.00000000000000))*(x1225)*(x1226)))+(((x1213)*(x1214)))+(((cj14)*(cj15)*(r01)*(x1209)))+(((x1235)*(x1239)))+(((cj15)*(x1214)*(x1232)))+(((IkReal(-1.00000000000000))*(x1226)*(x1232)))+(((IkReal(-0.354900000000000))*(x1239)))+(((IkReal(-0.210000000000000))*(cj14)*(x1239)))+(((IkReal(-0.0159000000000000))*(x1219)*(x1221)))+(((IkReal(-1.00000000000000))*(px)))+(((IkReal(-0.210000000000000))*(x1212)*(x1219)))+(((r02)*(x1230)))+(((IkReal(-1.00000000000000))*(x1216)*(x1221)))+(((IkReal(-0.0136000000000000))*(x1226)))+(((IkReal(-0.0182200000000000))*(x1224)))+(((IkReal(-0.0136000000000000))*(r00)*(x1219)))+(((IkReal(0.0300000000000000))*(sj11)))+(((x1209)*(x1212)))+(((IkReal(0.0104000000000000))*(cj11)))+(((IkReal(0.0182200000000000))*(x1214)))+(((IkReal(0.0136000000000000))*(cj15)*(x1214))));
evalcond[8]=((((IkReal(0.0182200000000000))*(x1241)))+(((IkReal(-1.00000000000000))*(x1225)*(x1237)))+(((IkReal(-1.00000000000000))*(x1213)*(x1233)))+(((x1235)*(x1236)))+(((cj14)*(x1209)*(x1210)))+(((IkReal(-0.0136000000000000))*(r10)*(x1219)))+(((IkReal(-0.354900000000000))*(x1236)))+(((IkReal(-0.210000000000000))*(cj14)*(x1236)))+(((sj14)*(x1210)*(x1216)))+(((IkReal(-1.00000000000000))*(py)))+(((IkReal(-1.00000000000000))*(r10)*(x1219)*(x1225)))+(((x1210)*(x1242)))+(((x1213)*(x1241)))+(((IkReal(-1.00000000000000))*(r10)*(x1222)))+(((IkReal(-0.0136000000000000))*(x1237)))+(((IkReal(-0.210000000000000))*(x1219)*(x1220)))+(((IkReal(-1.00000000000000))*(x1216)*(x1229)))+(((IkReal(0.0104000000000000))*(sj11)))+(((IkReal(-0.0182200000000000))*(x1233)))+(((x1209)*(x1220)))+(((IkReal(-1.00000000000000))*(x1232)*(x1237)))+(((IkReal(-0.0300000000000000))*(cj11)))+(((r12)*(x1230))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  && IKabs(evalcond[7]) < 0.0000010000000000  && IKabs(evalcond[8]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst5;
gconst5=IKsign((((sj11)*(sj11))+((cj11)*(cj11))));
dummyeval[0]=(((sj11)*(sj11))+((cj11)*(cj11)));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst6;
gconst6=IKsign((((sj11)*(sj11))+((cj11)*(cj11))));
dummyeval[0]=(((sj11)*(sj11))+((cj11)*(cj11)));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j13array[1], cj13array[1], sj13array[1];
bool j13valid[1]={false};
_nj13 = 1;
IkReal x1245=((cj11)*(cj15));
IkReal x1246=((cj16)*(sj14));
IkReal x1247=((cj16)*(r10));
IkReal x1248=((cj14)*(sj16));
IkReal x1249=((cj11)*(sj15));
IkReal x1250=((cj14)*(r12));
IkReal x1251=((IkReal(1.00000000000000))*(cj11));
IkReal x1252=((cj15)*(sj11));
IkReal x1253=((IkReal(1.00000000000000))*(r11));
IkReal x1254=((sj11)*(sj15));
IkReal x1255=((sj11)*(x1253));
IkReal x1256=((r10)*(sj14)*(sj16));
if( IKabs(((gconst6)*(((((IkReal(-1.00000000000000))*(x1247)*(x1254)))+(((r12)*(x1252)))+(((IkReal(-1.00000000000000))*(r11)*(x1246)*(x1251)))+(((r11)*(sj16)*(x1254)))+(((IkReal(-1.00000000000000))*(x1251)*(x1256)))+(((cj14)*(x1245)*(x1247)))+(((x1249)*(x1250)))+(((IkReal(-1.00000000000000))*(x1245)*(x1248)*(x1253))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst6)*(((((IkReal(-1.00000000000000))*(r12)*(x1245)))+(((IkReal(-1.00000000000000))*(x1246)*(x1255)))+(((x1250)*(x1254)))+(((x1247)*(x1249)))+(((IkReal(-1.00000000000000))*(x1248)*(x1252)*(x1253)))+(((cj14)*(x1247)*(x1252)))+(((IkReal(-1.00000000000000))*(sj11)*(x1256)))+(((IkReal(-1.00000000000000))*(sj16)*(x1249)*(x1253))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j13array[0]=IKatan2(((gconst6)*(((((IkReal(-1.00000000000000))*(x1247)*(x1254)))+(((r12)*(x1252)))+(((IkReal(-1.00000000000000))*(r11)*(x1246)*(x1251)))+(((r11)*(sj16)*(x1254)))+(((IkReal(-1.00000000000000))*(x1251)*(x1256)))+(((cj14)*(x1245)*(x1247)))+(((x1249)*(x1250)))+(((IkReal(-1.00000000000000))*(x1245)*(x1248)*(x1253)))))), ((gconst6)*(((((IkReal(-1.00000000000000))*(r12)*(x1245)))+(((IkReal(-1.00000000000000))*(x1246)*(x1255)))+(((x1250)*(x1254)))+(((x1247)*(x1249)))+(((IkReal(-1.00000000000000))*(x1248)*(x1252)*(x1253)))+(((cj14)*(x1247)*(x1252)))+(((IkReal(-1.00000000000000))*(sj11)*(x1256)))+(((IkReal(-1.00000000000000))*(sj16)*(x1249)*(x1253)))))));
sj13array[0]=IKsin(j13array[0]);
cj13array[0]=IKcos(j13array[0]);
if( j13array[0] > IKPI )
{
    j13array[0]-=IK2PI;
}
else if( j13array[0] < -IKPI )
{    j13array[0]+=IK2PI;
}
j13valid[0] = true;
for(int ij13 = 0; ij13 < 1; ++ij13)
{
if( !j13valid[ij13] )
{
    continue;
}
_ij13[0] = ij13; _ij13[1] = -1;
for(int iij13 = ij13+1; iij13 < 1; ++iij13)
{
if( j13valid[iij13] && IKabs(cj13array[ij13]-cj13array[iij13]) < IKFAST_SOLUTION_THRESH && IKabs(sj13array[ij13]-sj13array[iij13]) < IKFAST_SOLUTION_THRESH )
{
    j13valid[iij13]=false; _ij13[1] = iij13; break; 
}
}
j13 = j13array[ij13]; cj13 = cj13array[ij13]; sj13 = sj13array[ij13];
{
IkReal evalcond[4];
IkReal x1257=IKcos(j13);
IkReal x1258=IKsin(j13);
IkReal x1259=((IkReal(1.00000000000000))*(cj14));
IkReal x1260=((IkReal(1.00000000000000))*(sj11));
IkReal x1261=((sj14)*(sj16));
IkReal x1262=((cj15)*(cj16));
IkReal x1263=((r11)*(sj16));
IkReal x1264=((cj16)*(sj14));
IkReal x1265=((cj14)*(cj15));
IkReal x1266=((r01)*(sj16));
IkReal x1267=((cj11)*(x1257));
IkReal x1268=((IkReal(1.00000000000000))*(cj16)*(sj15));
IkReal x1269=((cj11)*(x1258));
IkReal x1270=((x1258)*(x1260));
evalcond[0]=((((cj15)*(r02)))+(((sj15)*(x1266)))+(((IkReal(-1.00000000000000))*(r00)*(x1268)))+(((IkReal(-1.00000000000000))*(x1257)*(x1260)))+(((IkReal(-1.00000000000000))*(x1269))));
evalcond[1]=((((IkReal(-1.00000000000000))*(r10)*(x1268)))+(x1267)+(((cj15)*(r12)))+(((IkReal(-1.00000000000000))*(x1270)))+(((sj15)*(x1263))));
evalcond[2]=((x1267)+(((IkReal(-1.00000000000000))*(r02)*(sj15)*(x1259)))+(((IkReal(-1.00000000000000))*(x1270)))+(((IkReal(-1.00000000000000))*(r00)*(x1259)*(x1262)))+(((r00)*(x1261)))+(((x1265)*(x1266)))+(((r01)*(x1264))));
evalcond[3]=((((IkReal(-1.00000000000000))*(r12)*(sj15)*(x1259)))+(((r11)*(x1264)))+(x1269)+(((r10)*(x1261)))+(((IkReal(-1.00000000000000))*(r10)*(x1259)*(x1262)))+(((x1263)*(x1265)))+(((sj11)*(x1257))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j11;
vinfos[0].indices[0] = _ij11[0];
vinfos[0].indices[1] = _ij11[1];
vinfos[0].maxsolutions = _nj11;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j12;
vinfos[1].indices[0] = _ij12[0];
vinfos[1].indices[1] = _ij12[1];
vinfos[1].maxsolutions = _nj12;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j13;
vinfos[2].indices[0] = _ij13[0];
vinfos[2].indices[1] = _ij13[1];
vinfos[2].maxsolutions = _nj13;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j14;
vinfos[3].indices[0] = _ij14[0];
vinfos[3].indices[1] = _ij14[1];
vinfos[3].maxsolutions = _nj14;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j15;
vinfos[4].indices[0] = _ij15[0];
vinfos[4].indices[1] = _ij15[1];
vinfos[4].maxsolutions = _nj15;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j16;
vinfos[5].indices[0] = _ij16[0];
vinfos[5].indices[1] = _ij16[1];
vinfos[5].maxsolutions = _nj16;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j13array[1], cj13array[1], sj13array[1];
bool j13valid[1]={false};
_nj13 = 1;
IkReal x1271=((cj15)*(r12));
IkReal x1272=((IkReal(1.00000000000000))*(cj11));
IkReal x1273=((cj16)*(sj15));
IkReal x1274=((IkReal(1.00000000000000))*(sj11));
IkReal x1275=((cj15)*(r02));
IkReal x1276=((r01)*(sj15)*(sj16));
IkReal x1277=((r11)*(sj15)*(sj16));
if( IKabs(((gconst5)*(((((sj11)*(x1271)))+(((sj11)*(x1277)))+(((cj11)*(x1275)))+(((cj11)*(x1276)))+(((IkReal(-1.00000000000000))*(r10)*(x1273)*(x1274)))+(((IkReal(-1.00000000000000))*(r00)*(x1272)*(x1273))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst5)*(((((sj11)*(x1276)))+(((sj11)*(x1275)))+(((IkReal(-1.00000000000000))*(r00)*(x1273)*(x1274)))+(((IkReal(-1.00000000000000))*(x1271)*(x1272)))+(((IkReal(-1.00000000000000))*(x1272)*(x1277)))+(((cj11)*(r10)*(x1273))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j13array[0]=IKatan2(((gconst5)*(((((sj11)*(x1271)))+(((sj11)*(x1277)))+(((cj11)*(x1275)))+(((cj11)*(x1276)))+(((IkReal(-1.00000000000000))*(r10)*(x1273)*(x1274)))+(((IkReal(-1.00000000000000))*(r00)*(x1272)*(x1273)))))), ((gconst5)*(((((sj11)*(x1276)))+(((sj11)*(x1275)))+(((IkReal(-1.00000000000000))*(r00)*(x1273)*(x1274)))+(((IkReal(-1.00000000000000))*(x1271)*(x1272)))+(((IkReal(-1.00000000000000))*(x1272)*(x1277)))+(((cj11)*(r10)*(x1273)))))));
sj13array[0]=IKsin(j13array[0]);
cj13array[0]=IKcos(j13array[0]);
if( j13array[0] > IKPI )
{
    j13array[0]-=IK2PI;
}
else if( j13array[0] < -IKPI )
{    j13array[0]+=IK2PI;
}
j13valid[0] = true;
for(int ij13 = 0; ij13 < 1; ++ij13)
{
if( !j13valid[ij13] )
{
    continue;
}
_ij13[0] = ij13; _ij13[1] = -1;
for(int iij13 = ij13+1; iij13 < 1; ++iij13)
{
if( j13valid[iij13] && IKabs(cj13array[ij13]-cj13array[iij13]) < IKFAST_SOLUTION_THRESH && IKabs(sj13array[ij13]-sj13array[iij13]) < IKFAST_SOLUTION_THRESH )
{
    j13valid[iij13]=false; _ij13[1] = iij13; break; 
}
}
j13 = j13array[ij13]; cj13 = cj13array[ij13]; sj13 = sj13array[ij13];
{
IkReal evalcond[4];
IkReal x1278=IKcos(j13);
IkReal x1279=IKsin(j13);
IkReal x1280=((IkReal(1.00000000000000))*(cj14));
IkReal x1281=((IkReal(1.00000000000000))*(sj11));
IkReal x1282=((sj14)*(sj16));
IkReal x1283=((cj15)*(cj16));
IkReal x1284=((r11)*(sj16));
IkReal x1285=((cj16)*(sj14));
IkReal x1286=((cj14)*(cj15));
IkReal x1287=((r01)*(sj16));
IkReal x1288=((cj11)*(x1278));
IkReal x1289=((IkReal(1.00000000000000))*(cj16)*(sj15));
IkReal x1290=((cj11)*(x1279));
IkReal x1291=((x1279)*(x1281));
evalcond[0]=((((sj15)*(x1287)))+(((cj15)*(r02)))+(((IkReal(-1.00000000000000))*(r00)*(x1289)))+(((IkReal(-1.00000000000000))*(x1278)*(x1281)))+(((IkReal(-1.00000000000000))*(x1290))));
evalcond[1]=((((sj15)*(x1284)))+(x1288)+(((cj15)*(r12)))+(((IkReal(-1.00000000000000))*(x1291)))+(((IkReal(-1.00000000000000))*(r10)*(x1289))));
evalcond[2]=((x1288)+(((IkReal(-1.00000000000000))*(x1291)))+(((r01)*(x1285)))+(((r00)*(x1282)))+(((IkReal(-1.00000000000000))*(r00)*(x1280)*(x1283)))+(((x1286)*(x1287)))+(((IkReal(-1.00000000000000))*(r02)*(sj15)*(x1280))));
evalcond[3]=((((sj11)*(x1278)))+(x1290)+(((r11)*(x1285)))+(((x1284)*(x1286)))+(((r10)*(x1282)))+(((IkReal(-1.00000000000000))*(r12)*(sj15)*(x1280)))+(((IkReal(-1.00000000000000))*(r10)*(x1280)*(x1283))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j11;
vinfos[0].indices[0] = _ij11[0];
vinfos[0].indices[1] = _ij11[1];
vinfos[0].maxsolutions = _nj11;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j12;
vinfos[1].indices[0] = _ij12[0];
vinfos[1].indices[1] = _ij12[1];
vinfos[1].maxsolutions = _nj12;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j13;
vinfos[2].indices[0] = _ij13[0];
vinfos[2].indices[1] = _ij13[1];
vinfos[2].maxsolutions = _nj13;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j14;
vinfos[3].indices[0] = _ij14[0];
vinfos[3].indices[1] = _ij14[1];
vinfos[3].maxsolutions = _nj14;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j15;
vinfos[4].indices[0] = _ij15[0];
vinfos[4].indices[1] = _ij15[1];
vinfos[4].maxsolutions = _nj15;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j16;
vinfos[5].indices[0] = _ij16[0];
vinfos[5].indices[1] = _ij16[1];
vinfos[5].maxsolutions = _nj16;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
IkReal x1292=((cj15)*(cj16));
IkReal x1293=((IkReal(0.210000000000000))*(sj14));
IkReal x1294=((r22)*(sj15));
IkReal x1295=((IkReal(1.00000000000000))*(sj14));
IkReal x1296=((r02)*(sj15));
IkReal x1297=((IkReal(0.000500000000000000))*(sj15));
IkReal x1298=((cj16)*(r00));
IkReal x1299=((IkReal(0.0159000000000000))*(cj14));
IkReal x1300=((IkReal(0.0159000000000000))*(sj14));
IkReal x1301=((cj16)*(r11));
IkReal x1302=((r01)*(sj16));
IkReal x1303=((cj15)*(sj16));
IkReal x1304=((r12)*(sj15));
IkReal x1305=((IkReal(0.000500000000000000))*(cj15));
IkReal x1306=((r20)*(sj16));
IkReal x1307=((IkReal(0.210000000000000))*(cj14));
IkReal x1308=((cj16)*(r21));
IkReal x1309=((r00)*(sj16));
IkReal x1310=((IkReal(0.0182200000000000))*(sj16));
IkReal x1311=((cj16)*(r01));
IkReal x1312=((r10)*(sj16));
IkReal x1313=((IkReal(1.00000000000000))*(cj14));
IkReal x1314=((cj16)*(r20));
IkReal x1315=((cj16)*(r10));
IkReal x1316=((sj15)*(x1293));
IkReal x1317=((sj16)*(x1313));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(3.14159265358979))+(j12)), IkReal(6.28318530717959))));
evalcond[1]=((((r21)*(sj14)*(x1303)))+(((IkReal(-1.00000000000000))*(x1308)*(x1313)))+(((IkReal(-1.00000000000000))*(x1306)*(x1313)))+(((IkReal(-1.00000000000000))*(r20)*(x1292)*(x1295)))+(((IkReal(-1.00000000000000))*(x1294)*(x1295))));
evalcond[2]=((((r11)*(sj14)*(x1303)))+(cj11)+(((IkReal(-1.00000000000000))*(x1295)*(x1304)))+(((IkReal(-1.00000000000000))*(r10)*(x1292)*(x1295)))+(((IkReal(-1.00000000000000))*(x1301)*(x1313)))+(((IkReal(-1.00000000000000))*(x1312)*(x1313))));
evalcond[3]=((((IkReal(-1.00000000000000))*(x1311)*(x1313)))+(((cj15)*(sj14)*(x1302)))+(((IkReal(-1.00000000000000))*(x1295)*(x1296)))+(((IkReal(-1.00000000000000))*(sj11)))+(((IkReal(-1.00000000000000))*(r00)*(x1292)*(x1295)))+(((IkReal(-1.00000000000000))*(x1309)*(x1313))));
evalcond[4]=((((IkReal(-1.00000000000000))*(x1307)*(x1308)))+(((r21)*(x1299)*(x1303)))+(((IkReal(-1.00000000000000))*(x1306)*(x1307)))+(((x1300)*(x1308)))+(((x1300)*(x1306)))+(((IkReal(-1.00000000000000))*(r20)*(x1292)*(x1293)))+(((IkReal(-1.00000000000000))*(r20)*(x1292)*(x1299)))+(((IkReal(-0.0136000000000000))*(r20)*(x1292)))+(((IkReal(-1.00000000000000))*(pz)))+(((IkReal(-1.00000000000000))*(x1293)*(x1294)))+(((IkReal(-0.354900000000000))*(x1308)))+(((IkReal(-0.354900000000000))*(x1306)))+(((IkReal(-0.0182200000000000))*(x1314)))+(((IkReal(-1.00000000000000))*(x1297)*(x1314)))+(((r21)*(sj16)*(x1297)))+(((r22)*(x1305)))+(((r21)*(x1310)))+(((IkReal(0.0136000000000000))*(r21)*(x1303)))+(((IkReal(-0.0136000000000000))*(x1294)))+(((r21)*(x1293)*(x1303)))+(((IkReal(-1.00000000000000))*(x1294)*(x1299))));
evalcond[5]=((((IkReal(-1.00000000000000))*(x1307)*(x1309)))+(((IkReal(0.0182200000000000))*(x1302)))+(((IkReal(-0.0182200000000000))*(x1298)))+(((x1300)*(x1311)))+(((IkReal(-1.00000000000000))*(x1307)*(x1311)))+(((x1300)*(x1309)))+(((IkReal(-0.0136000000000000))*(r00)*(x1292)))+(((cj15)*(x1293)*(x1302)))+(((IkReal(-1.00000000000000))*(px)))+(((IkReal(-1.00000000000000))*(x1293)*(x1296)))+(((IkReal(-0.354900000000000))*(x1309)))+(((IkReal(0.0136000000000000))*(cj15)*(x1302)))+(((x1297)*(x1302)))+(((IkReal(-0.0136000000000000))*(x1296)))+(((IkReal(-1.00000000000000))*(r00)*(x1292)*(x1293)))+(((IkReal(-1.00000000000000))*(r00)*(x1292)*(x1299)))+(((r02)*(x1305)))+(((IkReal(-1.00000000000000))*(x1297)*(x1298)))+(((IkReal(-0.354900000000000))*(x1311)))+(((IkReal(-1.00000000000000))*(x1296)*(x1299)))+(((IkReal(0.0104000000000000))*(cj11)))+(((cj15)*(x1299)*(x1302)))+(((IkReal(0.166600000000000))*(sj11))));
evalcond[6]=((((r11)*(x1293)*(x1303)))+(((IkReal(-0.166600000000000))*(cj11)))+(((x1300)*(x1312)))+(((IkReal(-1.00000000000000))*(x1299)*(x1304)))+(((r11)*(x1310)))+(((r12)*(x1305)))+(((IkReal(-1.00000000000000))*(x1307)*(x1312)))+(((IkReal(0.0136000000000000))*(r11)*(x1303)))+(((x1300)*(x1301)))+(((IkReal(-1.00000000000000))*(py)))+(((IkReal(-0.354900000000000))*(x1301)))+(((IkReal(-0.0182200000000000))*(x1315)))+(((IkReal(-1.00000000000000))*(x1297)*(x1315)))+(((IkReal(-1.00000000000000))*(x1301)*(x1307)))+(((IkReal(0.0104000000000000))*(sj11)))+(((IkReal(-0.354900000000000))*(x1312)))+(((IkReal(-1.00000000000000))*(x1293)*(x1304)))+(((r11)*(sj16)*(x1297)))+(((IkReal(-0.0136000000000000))*(r10)*(x1292)))+(((IkReal(-1.00000000000000))*(r10)*(x1292)*(x1299)))+(((IkReal(-1.00000000000000))*(r10)*(x1292)*(x1293)))+(((r11)*(x1299)*(x1303)))+(((IkReal(-0.0136000000000000))*(x1304))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  )
{
{
IkReal j13array[1], cj13array[1], sj13array[1];
bool j13valid[1]={false};
_nj13 = 1;
IkReal x1318=((cj14)*(cj15));
IkReal x1319=((r21)*(sj16));
IkReal x1320=((IkReal(1.00000000000000))*(cj16)*(r20));
if( IKabs(((((x1318)*(x1319)))+(((cj16)*(r21)*(sj14)))+(((IkReal(-1.00000000000000))*(cj14)*(r22)*(sj15)))+(((r20)*(sj14)*(sj16)))+(((IkReal(-1.00000000000000))*(x1318)*(x1320))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((cj15)*(r22)))+(((IkReal(-1.00000000000000))*(sj15)*(x1320)))+(((sj15)*(x1319))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((x1318)*(x1319)))+(((cj16)*(r21)*(sj14)))+(((IkReal(-1.00000000000000))*(cj14)*(r22)*(sj15)))+(((r20)*(sj14)*(sj16)))+(((IkReal(-1.00000000000000))*(x1318)*(x1320)))))+IKsqr(((((cj15)*(r22)))+(((IkReal(-1.00000000000000))*(sj15)*(x1320)))+(((sj15)*(x1319)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j13array[0]=IKatan2(((((x1318)*(x1319)))+(((cj16)*(r21)*(sj14)))+(((IkReal(-1.00000000000000))*(cj14)*(r22)*(sj15)))+(((r20)*(sj14)*(sj16)))+(((IkReal(-1.00000000000000))*(x1318)*(x1320)))), ((((cj15)*(r22)))+(((IkReal(-1.00000000000000))*(sj15)*(x1320)))+(((sj15)*(x1319)))));
sj13array[0]=IKsin(j13array[0]);
cj13array[0]=IKcos(j13array[0]);
if( j13array[0] > IKPI )
{
    j13array[0]-=IK2PI;
}
else if( j13array[0] < -IKPI )
{    j13array[0]+=IK2PI;
}
j13valid[0] = true;
for(int ij13 = 0; ij13 < 1; ++ij13)
{
if( !j13valid[ij13] )
{
    continue;
}
_ij13[0] = ij13; _ij13[1] = -1;
for(int iij13 = ij13+1; iij13 < 1; ++iij13)
{
if( j13valid[iij13] && IKabs(cj13array[ij13]-cj13array[iij13]) < IKFAST_SOLUTION_THRESH && IKabs(sj13array[ij13]-sj13array[iij13]) < IKFAST_SOLUTION_THRESH )
{
    j13valid[iij13]=false; _ij13[1] = iij13; break; 
}
}
j13 = j13array[ij13]; cj13 = cj13array[ij13]; sj13 = sj13array[ij13];
{
IkReal evalcond[6];
IkReal x1321=IKsin(j13);
IkReal x1322=IKcos(j13);
IkReal x1323=((IkReal(1.00000000000000))*(cj14));
IkReal x1324=((sj14)*(sj16));
IkReal x1325=((cj15)*(cj16));
IkReal x1326=((sj15)*(sj16));
IkReal x1327=((cj16)*(sj14));
IkReal x1328=((IkReal(1.00000000000000))*(x1321));
IkReal x1329=((IkReal(1.00000000000000))*(cj16)*(sj15));
IkReal x1330=((cj14)*(cj15)*(sj16));
evalcond[0]=((((cj15)*(r22)))+(((IkReal(-1.00000000000000))*(x1322)))+(((r21)*(x1326)))+(((IkReal(-1.00000000000000))*(r20)*(x1329))));
evalcond[1]=((((r01)*(x1326)))+(((cj15)*(r02)))+(((IkReal(-1.00000000000000))*(r00)*(x1329)))+(((IkReal(-1.00000000000000))*(cj11)*(x1328))));
evalcond[2]=((((cj15)*(r12)))+(((r11)*(x1326)))+(((IkReal(-1.00000000000000))*(r10)*(x1329)))+(((IkReal(-1.00000000000000))*(sj11)*(x1328))));
evalcond[3]=((((IkReal(-1.00000000000000))*(x1328)))+(((r21)*(x1330)))+(((r21)*(x1327)))+(((r20)*(x1324)))+(((IkReal(-1.00000000000000))*(r22)*(sj15)*(x1323)))+(((IkReal(-1.00000000000000))*(r20)*(x1323)*(x1325))));
evalcond[4]=((((r01)*(x1327)))+(((r00)*(x1324)))+(((r01)*(x1330)))+(((cj11)*(x1322)))+(((IkReal(-1.00000000000000))*(r02)*(sj15)*(x1323)))+(((IkReal(-1.00000000000000))*(r00)*(x1323)*(x1325))));
evalcond[5]=((((r11)*(x1330)))+(((IkReal(-1.00000000000000))*(r12)*(sj15)*(x1323)))+(((r11)*(x1327)))+(((r10)*(x1324)))+(((IkReal(-1.00000000000000))*(r10)*(x1323)*(x1325)))+(((sj11)*(x1322))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j11;
vinfos[0].indices[0] = _ij11[0];
vinfos[0].indices[1] = _ij11[1];
vinfos[0].maxsolutions = _nj11;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j12;
vinfos[1].indices[0] = _ij12[0];
vinfos[1].indices[1] = _ij12[1];
vinfos[1].maxsolutions = _nj12;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j13;
vinfos[2].indices[0] = _ij13[0];
vinfos[2].indices[1] = _ij13[1];
vinfos[2].maxsolutions = _nj13;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j14;
vinfos[3].indices[0] = _ij14[0];
vinfos[3].indices[1] = _ij14[1];
vinfos[3].maxsolutions = _nj14;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j15;
vinfos[4].indices[0] = _ij15[0];
vinfos[4].indices[1] = _ij15[1];
vinfos[4].maxsolutions = _nj15;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j16;
vinfos[5].indices[0] = _ij16[0];
vinfos[5].indices[1] = _ij16[1];
vinfos[5].maxsolutions = _nj16;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

} else
{
IkReal x1331=((cj15)*(cj16));
IkReal x1332=((IkReal(0.210000000000000))*(sj14));
IkReal x1333=((r22)*(sj15));
IkReal x1334=((IkReal(1.00000000000000))*(sj14));
IkReal x1335=((r02)*(sj15));
IkReal x1336=((IkReal(0.000500000000000000))*(sj15));
IkReal x1337=((cj16)*(r00));
IkReal x1338=((IkReal(0.0159000000000000))*(cj14));
IkReal x1339=((IkReal(0.0159000000000000))*(sj14));
IkReal x1340=((cj16)*(r11));
IkReal x1341=((r01)*(sj16));
IkReal x1342=((cj15)*(sj16));
IkReal x1343=((r12)*(sj15));
IkReal x1344=((IkReal(0.000500000000000000))*(cj15));
IkReal x1345=((r20)*(sj16));
IkReal x1346=((IkReal(0.210000000000000))*(cj14));
IkReal x1347=((cj16)*(r21));
IkReal x1348=((r10)*(sj16));
IkReal x1349=((r21)*(sj16));
IkReal x1350=((cj16)*(r01));
IkReal x1351=((r00)*(sj16));
IkReal x1352=((IkReal(1.00000000000000))*(cj14));
IkReal x1353=((cj16)*(r20));
IkReal x1354=((r11)*(sj16));
IkReal x1355=((cj16)*(r10));
IkReal x1356=((sj15)*(x1332));
IkReal x1357=((sj16)*(x1352));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(j12, IkReal(6.28318530717959))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x1345)*(x1352)))+(((IkReal(-1.00000000000000))*(x1347)*(x1352)))+(((r21)*(sj14)*(x1342)))+(((IkReal(-1.00000000000000))*(r20)*(x1331)*(x1334)))+(((IkReal(-1.00000000000000))*(x1333)*(x1334))));
evalcond[2]=((((IkReal(-1.00000000000000))*(r10)*(x1331)*(x1334)))+(((r11)*(sj14)*(x1342)))+(((IkReal(-1.00000000000000))*(x1348)*(x1352)))+(((IkReal(-1.00000000000000))*(cj11)))+(((IkReal(-1.00000000000000))*(x1334)*(x1343)))+(((IkReal(-1.00000000000000))*(x1340)*(x1352))));
evalcond[3]=((((IkReal(-1.00000000000000))*(x1334)*(x1335)))+(((IkReal(-1.00000000000000))*(x1350)*(x1352)))+(sj11)+(((cj15)*(sj14)*(x1341)))+(((IkReal(-1.00000000000000))*(x1351)*(x1352)))+(((IkReal(-1.00000000000000))*(r00)*(x1331)*(x1334))));
evalcond[4]=((((IkReal(0.0136000000000000))*(r21)*(x1342)))+(((IkReal(-1.00000000000000))*(x1336)*(x1353)))+(((IkReal(-1.00000000000000))*(x1346)*(x1347)))+(((IkReal(-0.0136000000000000))*(x1333)))+(((x1339)*(x1345)))+(((x1339)*(x1347)))+(((r22)*(x1344)))+(((r21)*(x1332)*(x1342)))+(((IkReal(-1.00000000000000))*(pz)))+(((IkReal(-1.00000000000000))*(r20)*(x1331)*(x1338)))+(((IkReal(-1.00000000000000))*(r20)*(x1331)*(x1332)))+(((IkReal(-0.0136000000000000))*(r20)*(x1331)))+(((IkReal(0.0182200000000000))*(x1349)))+(((IkReal(-1.00000000000000))*(x1333)*(x1338)))+(((x1336)*(x1349)))+(((IkReal(-1.00000000000000))*(x1332)*(x1333)))+(((r21)*(x1338)*(x1342)))+(((IkReal(-0.0182200000000000))*(x1353)))+(((IkReal(-0.354900000000000))*(x1347)))+(((IkReal(-0.354900000000000))*(x1345)))+(((IkReal(-1.00000000000000))*(x1345)*(x1346))));
evalcond[5]=((((IkReal(-1.00000000000000))*(x1335)*(x1338)))+(((IkReal(-0.0182200000000000))*(x1337)))+(((IkReal(-0.354900000000000))*(x1351)))+(((IkReal(-0.354900000000000))*(x1350)))+(((IkReal(-0.0136000000000000))*(r00)*(x1331)))+(((IkReal(-0.0136000000000000))*(x1335)))+(((IkReal(0.0136000000000000))*(cj15)*(x1341)))+(((cj15)*(x1338)*(x1341)))+(((IkReal(-1.00000000000000))*(x1346)*(x1351)))+(((IkReal(-1.00000000000000))*(x1346)*(x1350)))+(((x1339)*(x1351)))+(((x1339)*(x1350)))+(((IkReal(-0.106600000000000))*(sj11)))+(((r02)*(x1344)))+(((IkReal(-1.00000000000000))*(px)))+(((IkReal(0.0182200000000000))*(x1341)))+(((IkReal(-1.00000000000000))*(x1336)*(x1337)))+(((x1336)*(x1341)))+(((IkReal(-1.00000000000000))*(x1332)*(x1335)))+(((IkReal(0.0104000000000000))*(cj11)))+(((IkReal(-1.00000000000000))*(r00)*(x1331)*(x1332)))+(((IkReal(-1.00000000000000))*(r00)*(x1331)*(x1338)))+(((cj15)*(x1332)*(x1341))));
evalcond[6]=((((IkReal(-1.00000000000000))*(x1340)*(x1346)))+(((IkReal(-1.00000000000000))*(x1336)*(x1355)))+(((IkReal(-1.00000000000000))*(x1346)*(x1348)))+(((IkReal(-1.00000000000000))*(x1338)*(x1343)))+(((r11)*(x1338)*(x1342)))+(((x1339)*(x1348)))+(((x1339)*(x1340)))+(((IkReal(0.0182200000000000))*(x1354)))+(((IkReal(-1.00000000000000))*(py)))+(((r12)*(x1344)))+(((IkReal(-1.00000000000000))*(r10)*(x1331)*(x1338)))+(((IkReal(-1.00000000000000))*(r10)*(x1331)*(x1332)))+(((IkReal(-0.0136000000000000))*(x1343)))+(((r11)*(x1332)*(x1342)))+(((IkReal(0.0104000000000000))*(sj11)))+(((IkReal(-0.0136000000000000))*(r10)*(x1331)))+(((IkReal(-0.0182200000000000))*(x1355)))+(((x1336)*(x1354)))+(((IkReal(-0.354900000000000))*(x1340)))+(((IkReal(-0.354900000000000))*(x1348)))+(((IkReal(0.106600000000000))*(cj11)))+(((IkReal(-1.00000000000000))*(x1332)*(x1343)))+(((IkReal(0.0136000000000000))*(r11)*(x1342))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  )
{
{
IkReal j13array[1], cj13array[1], sj13array[1];
bool j13valid[1]={false};
_nj13 = 1;
IkReal x1358=((cj16)*(r20));
IkReal x1359=((cj14)*(cj15));
IkReal x1360=((IkReal(1.00000000000000))*(sj14));
IkReal x1361=((IkReal(1.00000000000000))*(r21)*(sj16));
if( IKabs(((((x1358)*(x1359)))+(((IkReal(-1.00000000000000))*(cj16)*(r21)*(x1360)))+(((IkReal(-1.00000000000000))*(x1359)*(x1361)))+(((IkReal(-1.00000000000000))*(r20)*(sj16)*(x1360)))+(((cj14)*(r22)*(sj15))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((IkReal(-1.00000000000000))*(cj15)*(r22)))+(((sj15)*(x1358)))+(((IkReal(-1.00000000000000))*(sj15)*(x1361))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((x1358)*(x1359)))+(((IkReal(-1.00000000000000))*(cj16)*(r21)*(x1360)))+(((IkReal(-1.00000000000000))*(x1359)*(x1361)))+(((IkReal(-1.00000000000000))*(r20)*(sj16)*(x1360)))+(((cj14)*(r22)*(sj15)))))+IKsqr(((((IkReal(-1.00000000000000))*(cj15)*(r22)))+(((sj15)*(x1358)))+(((IkReal(-1.00000000000000))*(sj15)*(x1361)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j13array[0]=IKatan2(((((x1358)*(x1359)))+(((IkReal(-1.00000000000000))*(cj16)*(r21)*(x1360)))+(((IkReal(-1.00000000000000))*(x1359)*(x1361)))+(((IkReal(-1.00000000000000))*(r20)*(sj16)*(x1360)))+(((cj14)*(r22)*(sj15)))), ((((IkReal(-1.00000000000000))*(cj15)*(r22)))+(((sj15)*(x1358)))+(((IkReal(-1.00000000000000))*(sj15)*(x1361)))));
sj13array[0]=IKsin(j13array[0]);
cj13array[0]=IKcos(j13array[0]);
if( j13array[0] > IKPI )
{
    j13array[0]-=IK2PI;
}
else if( j13array[0] < -IKPI )
{    j13array[0]+=IK2PI;
}
j13valid[0] = true;
for(int ij13 = 0; ij13 < 1; ++ij13)
{
if( !j13valid[ij13] )
{
    continue;
}
_ij13[0] = ij13; _ij13[1] = -1;
for(int iij13 = ij13+1; iij13 < 1; ++iij13)
{
if( j13valid[iij13] && IKabs(cj13array[ij13]-cj13array[iij13]) < IKFAST_SOLUTION_THRESH && IKabs(sj13array[ij13]-sj13array[iij13]) < IKFAST_SOLUTION_THRESH )
{
    j13valid[iij13]=false; _ij13[1] = iij13; break; 
}
}
j13 = j13array[ij13]; cj13 = cj13array[ij13]; sj13 = sj13array[ij13];
{
IkReal evalcond[6];
IkReal x1362=IKsin(j13);
IkReal x1363=IKcos(j13);
IkReal x1364=((IkReal(1.00000000000000))*(cj14));
IkReal x1365=((sj14)*(sj16));
IkReal x1366=((cj15)*(cj16));
IkReal x1367=((sj15)*(sj16));
IkReal x1368=((cj16)*(sj14));
IkReal x1369=((IkReal(1.00000000000000))*(x1362));
IkReal x1370=((IkReal(1.00000000000000))*(cj16)*(sj15));
IkReal x1371=((cj14)*(cj15)*(sj16));
evalcond[0]=((x1363)+(((cj15)*(r22)))+(((IkReal(-1.00000000000000))*(r20)*(x1370)))+(((r21)*(x1367))));
evalcond[1]=((((IkReal(-1.00000000000000))*(r00)*(x1370)))+(((cj15)*(r02)))+(((IkReal(-1.00000000000000))*(cj11)*(x1369)))+(((r01)*(x1367))));
evalcond[2]=((((cj15)*(r12)))+(((IkReal(-1.00000000000000))*(r10)*(x1370)))+(((r11)*(x1367)))+(((IkReal(-1.00000000000000))*(sj11)*(x1369))));
evalcond[3]=((x1362)+(((IkReal(-1.00000000000000))*(r22)*(sj15)*(x1364)))+(((IkReal(-1.00000000000000))*(r20)*(x1364)*(x1366)))+(((r20)*(x1365)))+(((r21)*(x1371)))+(((r21)*(x1368))));
evalcond[4]=((((IkReal(-1.00000000000000))*(r02)*(sj15)*(x1364)))+(((IkReal(-1.00000000000000))*(r00)*(x1364)*(x1366)))+(((r01)*(x1368)))+(((r00)*(x1365)))+(((r01)*(x1371)))+(((cj11)*(x1363))));
evalcond[5]=((((sj11)*(x1363)))+(((r10)*(x1365)))+(((r11)*(x1371)))+(((IkReal(-1.00000000000000))*(r12)*(sj15)*(x1364)))+(((r11)*(x1368)))+(((IkReal(-1.00000000000000))*(r10)*(x1364)*(x1366))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j11;
vinfos[0].indices[0] = _ij11[0];
vinfos[0].indices[1] = _ij11[1];
vinfos[0].maxsolutions = _nj11;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j12;
vinfos[1].indices[0] = _ij12[0];
vinfos[1].indices[1] = _ij12[1];
vinfos[1].maxsolutions = _nj12;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j13;
vinfos[2].indices[0] = _ij13[0];
vinfos[2].indices[1] = _ij13[1];
vinfos[2].maxsolutions = _nj13;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j14;
vinfos[3].indices[0] = _ij14[0];
vinfos[3].indices[1] = _ij14[1];
vinfos[3].maxsolutions = _nj14;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j15;
vinfos[4].indices[0] = _ij15[0];
vinfos[4].indices[1] = _ij15[1];
vinfos[4].maxsolutions = _nj15;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j16;
vinfos[5].indices[0] = _ij16[0];
vinfos[5].indices[1] = _ij16[1];
vinfos[5].maxsolutions = _nj16;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

} else
{
if( 1 )
{
continue;

} else
{
}
}
}
}
}
}
}
}

} else
{
{
IkReal j13array[1], cj13array[1], sj13array[1];
bool j13valid[1]={false};
_nj13 = 1;
IkReal x1372=((IKabs(cj12) != 0)?((IkReal)1/(cj12)):(IkReal)1.0e30);
IkReal x1373=((IkReal(1.00000000000000))*(cj16));
IkReal x1374=((r21)*(sj16));
IkReal x1375=((cj15)*(r22));
IkReal x1376=((cj12)*(sj15));
IkReal x1377=((sj11)*(sj12)*(sj15));
if( IKabs(((x1372)*(((IKabs(cj11) != 0)?((IkReal)1/(cj11)):(IkReal)1.0e30))*(((((r01)*(sj16)*(x1376)))+(((IkReal(-1.00000000000000))*(r20)*(x1373)*(x1377)))+(((cj12)*(cj15)*(r02)))+(((x1374)*(x1377)))+(((IkReal(-1.00000000000000))*(r00)*(x1373)*(x1376)))+(((sj11)*(sj12)*(x1375))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((x1372)*(((x1375)+(((IkReal(-1.00000000000000))*(r20)*(sj15)*(x1373)))+(((sj15)*(x1374))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((x1372)*(((IKabs(cj11) != 0)?((IkReal)1/(cj11)):(IkReal)1.0e30))*(((((r01)*(sj16)*(x1376)))+(((IkReal(-1.00000000000000))*(r20)*(x1373)*(x1377)))+(((cj12)*(cj15)*(r02)))+(((x1374)*(x1377)))+(((IkReal(-1.00000000000000))*(r00)*(x1373)*(x1376)))+(((sj11)*(sj12)*(x1375)))))))+IKsqr(((x1372)*(((x1375)+(((IkReal(-1.00000000000000))*(r20)*(sj15)*(x1373)))+(((sj15)*(x1374)))))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j13array[0]=IKatan2(((x1372)*(((IKabs(cj11) != 0)?((IkReal)1/(cj11)):(IkReal)1.0e30))*(((((r01)*(sj16)*(x1376)))+(((IkReal(-1.00000000000000))*(r20)*(x1373)*(x1377)))+(((cj12)*(cj15)*(r02)))+(((x1374)*(x1377)))+(((IkReal(-1.00000000000000))*(r00)*(x1373)*(x1376)))+(((sj11)*(sj12)*(x1375)))))), ((x1372)*(((x1375)+(((IkReal(-1.00000000000000))*(r20)*(sj15)*(x1373)))+(((sj15)*(x1374)))))));
sj13array[0]=IKsin(j13array[0]);
cj13array[0]=IKcos(j13array[0]);
if( j13array[0] > IKPI )
{
    j13array[0]-=IK2PI;
}
else if( j13array[0] < -IKPI )
{    j13array[0]+=IK2PI;
}
j13valid[0] = true;
for(int ij13 = 0; ij13 < 1; ++ij13)
{
if( !j13valid[ij13] )
{
    continue;
}
_ij13[0] = ij13; _ij13[1] = -1;
for(int iij13 = ij13+1; iij13 < 1; ++iij13)
{
if( j13valid[iij13] && IKabs(cj13array[ij13]-cj13array[iij13]) < IKFAST_SOLUTION_THRESH && IKabs(sj13array[ij13]-sj13array[iij13]) < IKFAST_SOLUTION_THRESH )
{
    j13valid[iij13]=false; _ij13[1] = iij13; break; 
}
}
j13 = j13array[ij13]; cj13 = cj13array[ij13]; sj13 = sj13array[ij13];
{
IkReal evalcond[6];
IkReal x1378=IKcos(j13);
IkReal x1379=IKsin(j13);
IkReal x1380=((IkReal(1.00000000000000))*(cj14));
IkReal x1381=((sj14)*(sj16));
IkReal x1382=((cj11)*(sj12));
IkReal x1383=((cj15)*(cj16));
IkReal x1384=((sj15)*(sj16));
IkReal x1385=((sj11)*(sj12));
IkReal x1386=((cj16)*(sj14));
IkReal x1387=((IkReal(1.00000000000000))*(x1379));
IkReal x1388=((IkReal(1.00000000000000))*(cj16)*(sj15));
IkReal x1389=((cj14)*(cj15)*(sj16));
IkReal x1390=((IkReal(1.00000000000000))*(x1378));
evalcond[0]=((((IkReal(-1.00000000000000))*(cj12)*(x1390)))+(((IkReal(-1.00000000000000))*(r20)*(x1388)))+(((r21)*(x1384)))+(((cj15)*(r22))));
evalcond[1]=((((cj15)*(r02)))+(((IkReal(-1.00000000000000))*(r00)*(x1388)))+(((IkReal(-1.00000000000000))*(cj11)*(x1387)))+(((r01)*(x1384)))+(((x1378)*(x1385))));
evalcond[2]=((((cj15)*(r12)))+(((IkReal(-1.00000000000000))*(x1382)*(x1390)))+(((IkReal(-1.00000000000000))*(sj11)*(x1387)))+(((IkReal(-1.00000000000000))*(r10)*(x1388)))+(((r11)*(x1384))));
evalcond[3]=((((IkReal(-1.00000000000000))*(cj12)*(x1387)))+(((r21)*(x1386)))+(((r21)*(x1389)))+(((r20)*(x1381)))+(((IkReal(-1.00000000000000))*(r20)*(x1380)*(x1383)))+(((IkReal(-1.00000000000000))*(r22)*(sj15)*(x1380))));
evalcond[4]=((((IkReal(-1.00000000000000))*(r00)*(x1380)*(x1383)))+(((IkReal(-1.00000000000000))*(r02)*(sj15)*(x1380)))+(((x1379)*(x1385)))+(((r00)*(x1381)))+(((r01)*(x1386)))+(((r01)*(x1389)))+(((cj11)*(x1378))));
evalcond[5]=((((r10)*(x1381)))+(((IkReal(-1.00000000000000))*(r12)*(sj15)*(x1380)))+(((IkReal(-1.00000000000000))*(r10)*(x1380)*(x1383)))+(((IkReal(-1.00000000000000))*(x1382)*(x1387)))+(((r11)*(x1389)))+(((r11)*(x1386)))+(((sj11)*(x1378))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j11;
vinfos[0].indices[0] = _ij11[0];
vinfos[0].indices[1] = _ij11[1];
vinfos[0].maxsolutions = _nj11;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j12;
vinfos[1].indices[0] = _ij12[0];
vinfos[1].indices[1] = _ij12[1];
vinfos[1].maxsolutions = _nj12;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j13;
vinfos[2].indices[0] = _ij13[0];
vinfos[2].indices[1] = _ij13[1];
vinfos[2].maxsolutions = _nj13;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j14;
vinfos[3].indices[0] = _ij14[0];
vinfos[3].indices[1] = _ij14[1];
vinfos[3].maxsolutions = _nj14;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j15;
vinfos[4].indices[0] = _ij15[0];
vinfos[4].indices[1] = _ij15[1];
vinfos[4].maxsolutions = _nj15;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j16;
vinfos[5].indices[0] = _ij16[0];
vinfos[5].indices[1] = _ij16[1];
vinfos[5].maxsolutions = _nj16;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j13array[1], cj13array[1], sj13array[1];
bool j13valid[1]={false};
_nj13 = 1;
IkReal x1391=(sj11)*(sj11);
IkReal x1392=(cj11)*(cj11);
IkReal x1393=((cj15)*(sj11));
IkReal x1394=((cj11)*(cj15));
IkReal x1395=((cj16)*(sj15));
IkReal x1396=((IkReal(1.00000000000000))*(sj11));
IkReal x1397=((IkReal(1.00000000000000))*(cj11));
IkReal x1398=((r01)*(sj15)*(sj16));
IkReal x1399=((r11)*(sj15)*(sj16));
if( IKabs(((((IKabs(((x1392)+(x1391))) != 0)?((IkReal)1/(((x1392)+(x1391)))):(IkReal)1.0e30))*(((((sj11)*(x1399)))+(((IkReal(-1.00000000000000))*(r00)*(x1395)*(x1397)))+(((r12)*(x1393)))+(((IkReal(-1.00000000000000))*(r10)*(x1395)*(x1396)))+(((r02)*(x1394)))+(((cj11)*(x1398))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((IKabs(((((sj12)*(x1391)))+(((sj12)*(x1392))))) != 0)?((IkReal)1/(((((sj12)*(x1391)))+(((sj12)*(x1392)))))):(IkReal)1.0e30))*(((((IkReal(-1.00000000000000))*(r02)*(x1393)))+(((IkReal(-1.00000000000000))*(x1396)*(x1398)))+(((r00)*(sj11)*(x1395)))+(((r12)*(x1394)))+(((IkReal(-1.00000000000000))*(r10)*(x1395)*(x1397)))+(((cj11)*(x1399))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((IKabs(((x1392)+(x1391))) != 0)?((IkReal)1/(((x1392)+(x1391)))):(IkReal)1.0e30))*(((((sj11)*(x1399)))+(((IkReal(-1.00000000000000))*(r00)*(x1395)*(x1397)))+(((r12)*(x1393)))+(((IkReal(-1.00000000000000))*(r10)*(x1395)*(x1396)))+(((r02)*(x1394)))+(((cj11)*(x1398)))))))+IKsqr(((((IKabs(((((sj12)*(x1391)))+(((sj12)*(x1392))))) != 0)?((IkReal)1/(((((sj12)*(x1391)))+(((sj12)*(x1392)))))):(IkReal)1.0e30))*(((((IkReal(-1.00000000000000))*(r02)*(x1393)))+(((IkReal(-1.00000000000000))*(x1396)*(x1398)))+(((r00)*(sj11)*(x1395)))+(((r12)*(x1394)))+(((IkReal(-1.00000000000000))*(r10)*(x1395)*(x1397)))+(((cj11)*(x1399)))))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j13array[0]=IKatan2(((((IKabs(((x1392)+(x1391))) != 0)?((IkReal)1/(((x1392)+(x1391)))):(IkReal)1.0e30))*(((((sj11)*(x1399)))+(((IkReal(-1.00000000000000))*(r00)*(x1395)*(x1397)))+(((r12)*(x1393)))+(((IkReal(-1.00000000000000))*(r10)*(x1395)*(x1396)))+(((r02)*(x1394)))+(((cj11)*(x1398)))))), ((((IKabs(((((sj12)*(x1391)))+(((sj12)*(x1392))))) != 0)?((IkReal)1/(((((sj12)*(x1391)))+(((sj12)*(x1392)))))):(IkReal)1.0e30))*(((((IkReal(-1.00000000000000))*(r02)*(x1393)))+(((IkReal(-1.00000000000000))*(x1396)*(x1398)))+(((r00)*(sj11)*(x1395)))+(((r12)*(x1394)))+(((IkReal(-1.00000000000000))*(r10)*(x1395)*(x1397)))+(((cj11)*(x1399)))))));
sj13array[0]=IKsin(j13array[0]);
cj13array[0]=IKcos(j13array[0]);
if( j13array[0] > IKPI )
{
    j13array[0]-=IK2PI;
}
else if( j13array[0] < -IKPI )
{    j13array[0]+=IK2PI;
}
j13valid[0] = true;
for(int ij13 = 0; ij13 < 1; ++ij13)
{
if( !j13valid[ij13] )
{
    continue;
}
_ij13[0] = ij13; _ij13[1] = -1;
for(int iij13 = ij13+1; iij13 < 1; ++iij13)
{
if( j13valid[iij13] && IKabs(cj13array[ij13]-cj13array[iij13]) < IKFAST_SOLUTION_THRESH && IKabs(sj13array[ij13]-sj13array[iij13]) < IKFAST_SOLUTION_THRESH )
{
    j13valid[iij13]=false; _ij13[1] = iij13; break; 
}
}
j13 = j13array[ij13]; cj13 = cj13array[ij13]; sj13 = sj13array[ij13];
{
IkReal evalcond[6];
IkReal x1400=IKcos(j13);
IkReal x1401=IKsin(j13);
IkReal x1402=((IkReal(1.00000000000000))*(cj14));
IkReal x1403=((sj14)*(sj16));
IkReal x1404=((cj11)*(sj12));
IkReal x1405=((cj15)*(cj16));
IkReal x1406=((sj15)*(sj16));
IkReal x1407=((sj11)*(sj12));
IkReal x1408=((cj16)*(sj14));
IkReal x1409=((IkReal(1.00000000000000))*(x1401));
IkReal x1410=((IkReal(1.00000000000000))*(cj16)*(sj15));
IkReal x1411=((cj14)*(cj15)*(sj16));
IkReal x1412=((IkReal(1.00000000000000))*(x1400));
evalcond[0]=((((cj15)*(r22)))+(((r21)*(x1406)))+(((IkReal(-1.00000000000000))*(r20)*(x1410)))+(((IkReal(-1.00000000000000))*(cj12)*(x1412))));
evalcond[1]=((((cj15)*(r02)))+(((IkReal(-1.00000000000000))*(cj11)*(x1409)))+(((r01)*(x1406)))+(((IkReal(-1.00000000000000))*(r00)*(x1410)))+(((x1400)*(x1407))));
evalcond[2]=((((IkReal(-1.00000000000000))*(r10)*(x1410)))+(((cj15)*(r12)))+(((r11)*(x1406)))+(((IkReal(-1.00000000000000))*(x1404)*(x1412)))+(((IkReal(-1.00000000000000))*(sj11)*(x1409))));
evalcond[3]=((((r21)*(x1411)))+(((r20)*(x1403)))+(((r21)*(x1408)))+(((IkReal(-1.00000000000000))*(r20)*(x1402)*(x1405)))+(((IkReal(-1.00000000000000))*(cj12)*(x1409)))+(((IkReal(-1.00000000000000))*(r22)*(sj15)*(x1402))));
evalcond[4]=((((IkReal(-1.00000000000000))*(r00)*(x1402)*(x1405)))+(((r00)*(x1403)))+(((IkReal(-1.00000000000000))*(r02)*(sj15)*(x1402)))+(((r01)*(x1411)))+(((r01)*(x1408)))+(((cj11)*(x1400)))+(((x1401)*(x1407))));
evalcond[5]=((((sj11)*(x1400)))+(((r11)*(x1408)))+(((r11)*(x1411)))+(((IkReal(-1.00000000000000))*(x1404)*(x1409)))+(((r10)*(x1403)))+(((IkReal(-1.00000000000000))*(r12)*(sj15)*(x1402)))+(((IkReal(-1.00000000000000))*(r10)*(x1402)*(x1405))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j11;
vinfos[0].indices[0] = _ij11[0];
vinfos[0].indices[1] = _ij11[1];
vinfos[0].maxsolutions = _nj11;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j12;
vinfos[1].indices[0] = _ij12[0];
vinfos[1].indices[1] = _ij12[1];
vinfos[1].maxsolutions = _nj12;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j13;
vinfos[2].indices[0] = _ij13[0];
vinfos[2].indices[1] = _ij13[1];
vinfos[2].maxsolutions = _nj13;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j14;
vinfos[3].indices[0] = _ij14[0];
vinfos[3].indices[1] = _ij14[1];
vinfos[3].maxsolutions = _nj14;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j15;
vinfos[4].indices[0] = _ij15[0];
vinfos[4].indices[1] = _ij15[1];
vinfos[4].maxsolutions = _nj15;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j16;
vinfos[5].indices[0] = _ij16[0];
vinfos[5].indices[1] = _ij16[1];
vinfos[5].maxsolutions = _nj16;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j13array[1], cj13array[1], sj13array[1];
bool j13valid[1]={false};
_nj13 = 1;
IkReal x1413=((cj14)*(cj15));
IkReal x1414=((r21)*(sj16));
IkReal x1415=((IkReal(1.00000000000000))*(cj16)*(r20));
if( IKabs(((gconst2)*(((((cj16)*(r21)*(sj14)))+(((IkReal(-1.00000000000000))*(cj14)*(r22)*(sj15)))+(((x1413)*(x1414)))+(((IkReal(-1.00000000000000))*(x1413)*(x1415)))+(((r20)*(sj14)*(sj16))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst2)*(((((sj15)*(x1414)))+(((cj15)*(r22)))+(((IkReal(-1.00000000000000))*(sj15)*(x1415))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j13array[0]=IKatan2(((gconst2)*(((((cj16)*(r21)*(sj14)))+(((IkReal(-1.00000000000000))*(cj14)*(r22)*(sj15)))+(((x1413)*(x1414)))+(((IkReal(-1.00000000000000))*(x1413)*(x1415)))+(((r20)*(sj14)*(sj16)))))), ((gconst2)*(((((sj15)*(x1414)))+(((cj15)*(r22)))+(((IkReal(-1.00000000000000))*(sj15)*(x1415)))))));
sj13array[0]=IKsin(j13array[0]);
cj13array[0]=IKcos(j13array[0]);
if( j13array[0] > IKPI )
{
    j13array[0]-=IK2PI;
}
else if( j13array[0] < -IKPI )
{    j13array[0]+=IK2PI;
}
j13valid[0] = true;
for(int ij13 = 0; ij13 < 1; ++ij13)
{
if( !j13valid[ij13] )
{
    continue;
}
_ij13[0] = ij13; _ij13[1] = -1;
for(int iij13 = ij13+1; iij13 < 1; ++iij13)
{
if( j13valid[iij13] && IKabs(cj13array[ij13]-cj13array[iij13]) < IKFAST_SOLUTION_THRESH && IKabs(sj13array[ij13]-sj13array[iij13]) < IKFAST_SOLUTION_THRESH )
{
    j13valid[iij13]=false; _ij13[1] = iij13; break; 
}
}
j13 = j13array[ij13]; cj13 = cj13array[ij13]; sj13 = sj13array[ij13];
{
IkReal evalcond[6];
IkReal x1416=IKcos(j13);
IkReal x1417=IKsin(j13);
IkReal x1418=((IkReal(1.00000000000000))*(cj14));
IkReal x1419=((sj14)*(sj16));
IkReal x1420=((cj11)*(sj12));
IkReal x1421=((cj15)*(cj16));
IkReal x1422=((sj15)*(sj16));
IkReal x1423=((sj11)*(sj12));
IkReal x1424=((cj16)*(sj14));
IkReal x1425=((IkReal(1.00000000000000))*(x1417));
IkReal x1426=((IkReal(1.00000000000000))*(cj16)*(sj15));
IkReal x1427=((cj14)*(cj15)*(sj16));
IkReal x1428=((IkReal(1.00000000000000))*(x1416));
evalcond[0]=((((r21)*(x1422)))+(((IkReal(-1.00000000000000))*(r20)*(x1426)))+(((cj15)*(r22)))+(((IkReal(-1.00000000000000))*(cj12)*(x1428))));
evalcond[1]=((((r01)*(x1422)))+(((cj15)*(r02)))+(((IkReal(-1.00000000000000))*(cj11)*(x1425)))+(((IkReal(-1.00000000000000))*(r00)*(x1426)))+(((x1416)*(x1423))));
evalcond[2]=((((IkReal(-1.00000000000000))*(sj11)*(x1425)))+(((r11)*(x1422)))+(((cj15)*(r12)))+(((IkReal(-1.00000000000000))*(r10)*(x1426)))+(((IkReal(-1.00000000000000))*(x1420)*(x1428))));
evalcond[3]=((((r21)*(x1427)))+(((r21)*(x1424)))+(((IkReal(-1.00000000000000))*(r22)*(sj15)*(x1418)))+(((r20)*(x1419)))+(((IkReal(-1.00000000000000))*(cj12)*(x1425)))+(((IkReal(-1.00000000000000))*(r20)*(x1418)*(x1421))));
evalcond[4]=((((r01)*(x1424)))+(((r01)*(x1427)))+(((IkReal(-1.00000000000000))*(r00)*(x1418)*(x1421)))+(((r00)*(x1419)))+(((IkReal(-1.00000000000000))*(r02)*(sj15)*(x1418)))+(((cj11)*(x1416)))+(((x1417)*(x1423))));
evalcond[5]=((((r11)*(x1424)))+(((r11)*(x1427)))+(((sj11)*(x1416)))+(((IkReal(-1.00000000000000))*(x1420)*(x1425)))+(((IkReal(-1.00000000000000))*(r10)*(x1418)*(x1421)))+(((IkReal(-1.00000000000000))*(r12)*(sj15)*(x1418)))+(((r10)*(x1419))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j11;
vinfos[0].indices[0] = _ij11[0];
vinfos[0].indices[1] = _ij11[1];
vinfos[0].maxsolutions = _nj11;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j12;
vinfos[1].indices[0] = _ij12[0];
vinfos[1].indices[1] = _ij12[1];
vinfos[1].maxsolutions = _nj12;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j13;
vinfos[2].indices[0] = _ij13[0];
vinfos[2].indices[1] = _ij13[1];
vinfos[2].maxsolutions = _nj13;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j14;
vinfos[3].indices[0] = _ij14[0];
vinfos[3].indices[1] = _ij14[1];
vinfos[3].maxsolutions = _nj14;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j15;
vinfos[4].indices[0] = _ij15[0];
vinfos[4].indices[1] = _ij15[1];
vinfos[4].maxsolutions = _nj15;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j16;
vinfos[5].indices[0] = _ij16[0];
vinfos[5].indices[1] = _ij16[1];
vinfos[5].maxsolutions = _nj16;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
}
}

}

}

} else
{
{
IkReal j13array[1], cj13array[1], sj13array[1];
bool j13valid[1]={false};
_nj13 = 1;
IkReal x1429=((cj14)*(cj15));
IkReal x1430=((r21)*(sj16));
IkReal x1431=((IkReal(1.00000000000000))*(cj16)*(r20));
if( IKabs(((gconst1)*(((((x1429)*(x1430)))+(((cj16)*(r21)*(sj14)))+(((IkReal(-1.00000000000000))*(cj14)*(r22)*(sj15)))+(((IkReal(-1.00000000000000))*(x1429)*(x1431)))+(((r20)*(sj14)*(sj16))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst1)*(((((IkReal(-1.00000000000000))*(sj15)*(x1431)))+(((cj15)*(r22)))+(((sj15)*(x1430))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j13array[0]=IKatan2(((gconst1)*(((((x1429)*(x1430)))+(((cj16)*(r21)*(sj14)))+(((IkReal(-1.00000000000000))*(cj14)*(r22)*(sj15)))+(((IkReal(-1.00000000000000))*(x1429)*(x1431)))+(((r20)*(sj14)*(sj16)))))), ((gconst1)*(((((IkReal(-1.00000000000000))*(sj15)*(x1431)))+(((cj15)*(r22)))+(((sj15)*(x1430)))))));
sj13array[0]=IKsin(j13array[0]);
cj13array[0]=IKcos(j13array[0]);
if( j13array[0] > IKPI )
{
    j13array[0]-=IK2PI;
}
else if( j13array[0] < -IKPI )
{    j13array[0]+=IK2PI;
}
j13valid[0] = true;
for(int ij13 = 0; ij13 < 1; ++ij13)
{
if( !j13valid[ij13] )
{
    continue;
}
_ij13[0] = ij13; _ij13[1] = -1;
for(int iij13 = ij13+1; iij13 < 1; ++iij13)
{
if( j13valid[iij13] && IKabs(cj13array[ij13]-cj13array[iij13]) < IKFAST_SOLUTION_THRESH && IKabs(sj13array[ij13]-sj13array[iij13]) < IKFAST_SOLUTION_THRESH )
{
    j13valid[iij13]=false; _ij13[1] = iij13; break; 
}
}
j13 = j13array[ij13]; cj13 = cj13array[ij13]; sj13 = sj13array[ij13];
{
IkReal evalcond[2];
IkReal x1432=((IkReal(1.00000000000000))*(cj12));
IkReal x1433=((IkReal(1.00000000000000))*(cj14));
IkReal x1434=((cj16)*(r20));
IkReal x1435=((r21)*(sj16));
evalcond[0]=((((IkReal(-1.00000000000000))*(x1432)*(IKcos(j13))))+(((cj15)*(r22)))+(((sj15)*(x1435)))+(((IkReal(-1.00000000000000))*(sj15)*(x1434))));
evalcond[1]=((((IkReal(-1.00000000000000))*(cj15)*(x1433)*(x1434)))+(((cj16)*(r21)*(sj14)))+(((IkReal(-1.00000000000000))*(x1432)*(IKsin(j13))))+(((r20)*(sj14)*(sj16)))+(((cj14)*(cj15)*(x1435)))+(((IkReal(-1.00000000000000))*(r22)*(sj15)*(x1433))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

{
IkReal dummyeval[1];
IkReal gconst7;
gconst7=IKsign((((((cj13)*(cj13))*((sj12)*(sj12))))+((sj13)*(sj13))));
dummyeval[0]=(((((cj13)*(cj13))*((sj12)*(sj12))))+((sj13)*(sj13)));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[2];
dummyeval[0]=cj12;
dummyeval[1]=sj13;
if( IKabs(dummyeval[0]) < 0.0000010000000000  || IKabs(dummyeval[1]) < 0.0000010000000000  )
{
{
IkReal dummyeval[2];
dummyeval[0]=cj12;
dummyeval[1]=sj13;
if( IKabs(dummyeval[0]) < 0.0000010000000000  || IKabs(dummyeval[1]) < 0.0000010000000000  )
{
{
IkReal evalcond[7];
IkReal x1436=((IkReal(0.210000000000000))*(sj14));
IkReal x1437=((r22)*(sj15));
IkReal x1438=((cj16)*(r20));
IkReal x1439=((IkReal(1.00000000000000))*(sj14));
IkReal x1440=((IkReal(0.0159000000000000))*(cj14));
IkReal x1441=((cj16)*(r21));
IkReal x1442=((IkReal(0.210000000000000))*(cj14));
IkReal x1443=((cj15)*(r22));
IkReal x1444=((cj15)*(cj16));
IkReal x1445=((r21)*(sj16));
IkReal x1446=((IkReal(0.000500000000000000))*(sj15));
IkReal x1447=((IkReal(1.00000000000000))*(cj14));
IkReal x1448=((r20)*(sj16));
IkReal x1449=((sj16)*(x1447));
IkReal x1450=((cj15)*(x1445));
IkReal x1451=((sj14)*(x1448));
IkReal x1452=((cj15)*(sj14)*(sj16));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(1.57079632679490))+(j12)), IkReal(6.28318530717959))));
evalcond[1]=((x1443)+(((IkReal(-1.00000000000000))*(sj15)*(x1438)))+(((sj15)*(x1445))));
evalcond[2]=((IkReal(-1.00000000000000))+(((IkReal(-1.00000000000000))*(x1437)*(x1439)))+(((sj14)*(x1450)))+(((IkReal(-1.00000000000000))*(cj15)*(x1438)*(x1439)))+(((IkReal(-1.00000000000000))*(x1441)*(x1447)))+(((IkReal(-1.00000000000000))*(x1447)*(x1448))));
evalcond[3]=((((cj14)*(x1450)))+(((IkReal(-1.00000000000000))*(x1437)*(x1447)))+(x1451)+(((sj14)*(x1441)))+(((IkReal(-1.00000000000000))*(cj15)*(x1438)*(x1447))));
evalcond[4]=((((IkReal(-1.00000000000000))*(cj16)*(r11)*(x1447)))+(((r11)*(x1452)))+(((IkReal(-1.00000000000000))*(r10)*(x1449)))+(((IkReal(-1.00000000000000))*(r10)*(x1439)*(x1444)))+(((IkReal(-1.00000000000000))*(r12)*(sj15)*(x1439))));
evalcond[5]=((((IkReal(-1.00000000000000))*(r00)*(x1449)))+(((IkReal(-1.00000000000000))*(r02)*(sj15)*(x1439)))+(((IkReal(-1.00000000000000))*(r00)*(x1439)*(x1444)))+(((IkReal(-1.00000000000000))*(cj16)*(r01)*(x1447)))+(((r01)*(x1452))));
evalcond[6]=((IkReal(0.136600000000000))+(((x1445)*(x1446)))+(((IkReal(-0.0136000000000000))*(cj15)*(x1438)))+(((IkReal(-1.00000000000000))*(x1436)*(x1437)))+(((IkReal(-1.00000000000000))*(x1438)*(x1446)))+(((IkReal(-0.0136000000000000))*(x1437)))+(((IkReal(-1.00000000000000))*(x1437)*(x1440)))+(((IkReal(-1.00000000000000))*(x1441)*(x1442)))+(((IkReal(0.0159000000000000))*(x1451)))+(((IkReal(-1.00000000000000))*(pz)))+(((IkReal(-0.354900000000000))*(x1448)))+(((IkReal(-0.354900000000000))*(x1441)))+(((IkReal(0.0182200000000000))*(x1445)))+(((IkReal(-1.00000000000000))*(cj15)*(x1436)*(x1438)))+(((x1440)*(x1450)))+(((IkReal(0.0159000000000000))*(sj14)*(x1441)))+(((IkReal(-1.00000000000000))*(x1442)*(x1448)))+(((IkReal(0.0136000000000000))*(x1450)))+(((IkReal(-1.00000000000000))*(cj15)*(x1438)*(x1440)))+(((IkReal(0.000500000000000000))*(x1443)))+(((IkReal(-0.0182200000000000))*(x1438)))+(((x1436)*(x1450))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst8;
gconst8=IKsign((((cj13)*(cj13))+((sj13)*(sj13))));
dummyeval[0]=(((cj13)*(cj13))+((sj13)*(sj13)));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst9;
gconst9=IKsign(((((IkReal(-1.00000000000000))*((cj13)*(cj13))))+(((IkReal(-1.00000000000000))*((sj13)*(sj13))))));
dummyeval[0]=((((IkReal(-1.00000000000000))*((cj13)*(cj13))))+(((IkReal(-1.00000000000000))*((sj13)*(sj13)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j11array[1], cj11array[1], sj11array[1];
bool j11valid[1]={false};
_nj11 = 1;
IkReal x1453=((r01)*(sj16));
IkReal x1454=((cj13)*(cj14));
IkReal x1455=((IkReal(1.00000000000000))*(r02));
IkReal x1456=((cj16)*(r00));
IkReal x1457=((cj13)*(sj15));
IkReal x1458=((sj13)*(sj15));
IkReal x1459=((cj14)*(cj15)*(sj13));
IkReal x1460=((cj16)*(r01)*(sj14));
IkReal x1461=((r00)*(sj14)*(sj16));
if( IKabs(((gconst9)*(((((IkReal(-1.00000000000000))*(x1456)*(x1457)))+(((IkReal(-1.00000000000000))*(x1456)*(x1459)))+(((IkReal(-1.00000000000000))*(cj14)*(x1455)*(x1458)))+(((cj13)*(cj15)*(r02)))+(((sj13)*(x1461)))+(((sj13)*(x1460)))+(((x1453)*(x1457)))+(((x1453)*(x1459))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst9)*(((((IkReal(-1.00000000000000))*(sj15)*(x1454)*(x1455)))+(((cj13)*(x1460)))+(((cj13)*(x1461)))+(((x1456)*(x1458)))+(((IkReal(-1.00000000000000))*(cj15)*(sj13)*(x1455)))+(((cj15)*(x1453)*(x1454)))+(((IkReal(-1.00000000000000))*(cj15)*(x1454)*(x1456)))+(((IkReal(-1.00000000000000))*(x1453)*(x1458))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j11array[0]=IKatan2(((gconst9)*(((((IkReal(-1.00000000000000))*(x1456)*(x1457)))+(((IkReal(-1.00000000000000))*(x1456)*(x1459)))+(((IkReal(-1.00000000000000))*(cj14)*(x1455)*(x1458)))+(((cj13)*(cj15)*(r02)))+(((sj13)*(x1461)))+(((sj13)*(x1460)))+(((x1453)*(x1457)))+(((x1453)*(x1459)))))), ((gconst9)*(((((IkReal(-1.00000000000000))*(sj15)*(x1454)*(x1455)))+(((cj13)*(x1460)))+(((cj13)*(x1461)))+(((x1456)*(x1458)))+(((IkReal(-1.00000000000000))*(cj15)*(sj13)*(x1455)))+(((cj15)*(x1453)*(x1454)))+(((IkReal(-1.00000000000000))*(cj15)*(x1454)*(x1456)))+(((IkReal(-1.00000000000000))*(x1453)*(x1458)))))));
sj11array[0]=IKsin(j11array[0]);
cj11array[0]=IKcos(j11array[0]);
if( j11array[0] > IKPI )
{
    j11array[0]-=IK2PI;
}
else if( j11array[0] < -IKPI )
{    j11array[0]+=IK2PI;
}
j11valid[0] = true;
for(int ij11 = 0; ij11 < 1; ++ij11)
{
if( !j11valid[ij11] )
{
    continue;
}
_ij11[0] = ij11; _ij11[1] = -1;
for(int iij11 = ij11+1; iij11 < 1; ++iij11)
{
if( j11valid[iij11] && IKabs(cj11array[ij11]-cj11array[iij11]) < IKFAST_SOLUTION_THRESH && IKabs(sj11array[ij11]-sj11array[iij11]) < IKFAST_SOLUTION_THRESH )
{
    j11valid[iij11]=false; _ij11[1] = iij11; break; 
}
}
j11 = j11array[ij11]; cj11 = cj11array[ij11]; sj11 = sj11array[ij11];
{
IkReal evalcond[6];
IkReal x1462=IKsin(j11);
IkReal x1463=IKcos(j11);
IkReal x1464=((r12)*(sj15));
IkReal x1465=((IkReal(0.210000000000000))*(sj14));
IkReal x1466=((IkReal(1.00000000000000))*(cj14));
IkReal x1467=((IkReal(0.0159000000000000))*(sj16));
IkReal x1468=((cj15)*(r11));
IkReal x1469=((cj15)*(cj16));
IkReal x1470=((cj16)*(r00));
IkReal x1471=((r02)*(sj15));
IkReal x1472=((r00)*(sj14));
IkReal x1473=((r10)*(sj16));
IkReal x1474=((r01)*(sj16));
IkReal x1475=((IkReal(0.000500000000000000))*(sj15));
IkReal x1476=((cj15)*(r12));
IkReal x1477=((cj14)*(sj16));
IkReal x1478=((IkReal(0.210000000000000))*(cj14));
IkReal x1479=((cj16)*(r11));
IkReal x1480=((IkReal(0.0159000000000000))*(sj14));
IkReal x1481=((cj16)*(r01));
IkReal x1482=((cj14)*(cj15));
IkReal x1483=((cj15)*(r02));
IkReal x1484=((IkReal(1.00000000000000))*(sj15));
IkReal x1485=((cj16)*(r10));
IkReal x1486=((r11)*(sj16));
IkReal x1487=((IkReal(0.0159000000000000))*(cj14));
IkReal x1488=((cj13)*(x1462));
IkReal x1489=((cj13)*(x1463));
IkReal x1490=((sj13)*(x1462));
IkReal x1491=((IkReal(1.00000000000000))*(sj13)*(x1463));
evalcond[0]=((((IkReal(-1.00000000000000))*(x1470)*(x1484)))+(((IkReal(-1.00000000000000))*(x1491)))+(x1483)+(x1488)+(((sj15)*(x1474))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x1484)*(x1485)))+(((sj15)*(x1486)))+(((IkReal(-1.00000000000000))*(x1490)))+(((IkReal(-1.00000000000000))*(x1489)))+(x1476));
evalcond[2]=((((sj14)*(x1481)))+(((sj16)*(x1472)))+(((IkReal(-1.00000000000000))*(r00)*(x1466)*(x1469)))+(((x1474)*(x1482)))+(x1490)+(x1489)+(((IkReal(-1.00000000000000))*(x1466)*(x1471))));
evalcond[3]=((((IkReal(-1.00000000000000))*(r10)*(x1466)*(x1469)))+(((IkReal(-1.00000000000000))*(x1491)))+(((IkReal(-1.00000000000000))*(x1464)*(x1466)))+(x1488)+(((sj14)*(x1479)))+(((sj14)*(x1473)))+(((x1468)*(x1477))));
evalcond[4]=((((IkReal(-1.00000000000000))*(r00)*(x1465)*(x1469)))+(((IkReal(0.000500000000000000))*(x1483)))+(((IkReal(-1.00000000000000))*(x1470)*(x1475)))+(((x1480)*(x1481)))+(((x1474)*(x1475)))+(((x1467)*(x1472)))+(((IkReal(-0.354900000000000))*(x1481)))+(((IkReal(-1.00000000000000))*(x1465)*(x1471)))+(((IkReal(-0.0136000000000000))*(r00)*(x1469)))+(((IkReal(-1.00000000000000))*(px)))+(((IkReal(-0.0136000000000000))*(x1471)))+(((IkReal(0.0182200000000000))*(x1474)))+(((IkReal(-0.354900000000000))*(r00)*(sj16)))+(((r01)*(x1467)*(x1482)))+(((IkReal(-0.0182200000000000))*(x1470)))+(((IkReal(-1.00000000000000))*(r00)*(x1469)*(x1487)))+(((IkReal(-0.210000000000000))*(r00)*(x1477)))+(((cj15)*(x1465)*(x1474)))+(((IkReal(0.0104000000000000))*(x1463)))+(((IkReal(0.0300000000000000))*(x1462)))+(((IkReal(-1.00000000000000))*(x1471)*(x1487)))+(((IkReal(-1.00000000000000))*(x1478)*(x1481)))+(((IkReal(0.0136000000000000))*(cj15)*(x1474))));
evalcond[5]=((((IkReal(-1.00000000000000))*(x1478)*(x1479)))+(((IkReal(0.0182200000000000))*(x1486)))+(((cj14)*(x1467)*(x1468)))+(((IkReal(0.0136000000000000))*(sj16)*(x1468)))+(((r10)*(sj14)*(x1467)))+(((IkReal(-1.00000000000000))*(r10)*(x1469)*(x1487)))+(((IkReal(-0.0300000000000000))*(x1463)))+(((IkReal(-1.00000000000000))*(x1464)*(x1465)))+(((IkReal(-0.354900000000000))*(x1473)))+(((IkReal(-0.354900000000000))*(x1479)))+(((IkReal(-1.00000000000000))*(x1464)*(x1487)))+(((IkReal(-1.00000000000000))*(py)))+(((sj16)*(x1465)*(x1468)))+(((IkReal(-1.00000000000000))*(x1475)*(x1485)))+(((IkReal(-1.00000000000000))*(r10)*(x1465)*(x1469)))+(((IkReal(0.0104000000000000))*(x1462)))+(((IkReal(-0.0136000000000000))*(r10)*(x1469)))+(((IkReal(-0.0182200000000000))*(x1485)))+(((x1475)*(x1486)))+(((IkReal(0.000500000000000000))*(x1476)))+(((x1479)*(x1480)))+(((IkReal(-1.00000000000000))*(x1473)*(x1478)))+(((IkReal(-0.0136000000000000))*(x1464))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j11;
vinfos[0].indices[0] = _ij11[0];
vinfos[0].indices[1] = _ij11[1];
vinfos[0].maxsolutions = _nj11;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j12;
vinfos[1].indices[0] = _ij12[0];
vinfos[1].indices[1] = _ij12[1];
vinfos[1].maxsolutions = _nj12;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j13;
vinfos[2].indices[0] = _ij13[0];
vinfos[2].indices[1] = _ij13[1];
vinfos[2].maxsolutions = _nj13;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j14;
vinfos[3].indices[0] = _ij14[0];
vinfos[3].indices[1] = _ij14[1];
vinfos[3].maxsolutions = _nj14;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j15;
vinfos[4].indices[0] = _ij15[0];
vinfos[4].indices[1] = _ij15[1];
vinfos[4].maxsolutions = _nj15;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j16;
vinfos[5].indices[0] = _ij16[0];
vinfos[5].indices[1] = _ij16[1];
vinfos[5].maxsolutions = _nj16;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j11array[1], cj11array[1], sj11array[1];
bool j11valid[1]={false};
_nj11 = 1;
IkReal x1492=((IkReal(1.00000000000000))*(cj13));
IkReal x1493=((cj15)*(r02));
IkReal x1494=((cj16)*(sj15));
IkReal x1495=((IkReal(1.00000000000000))*(sj13));
IkReal x1496=((cj15)*(r12));
IkReal x1497=((r01)*(sj15)*(sj16));
IkReal x1498=((r11)*(sj15)*(sj16));
if( IKabs(((gconst8)*(((((IkReal(-1.00000000000000))*(x1492)*(x1497)))+(((IkReal(-1.00000000000000))*(x1492)*(x1493)))+(((cj13)*(r00)*(x1494)))+(((sj13)*(x1496)))+(((sj13)*(x1498)))+(((IkReal(-1.00000000000000))*(r10)*(x1494)*(x1495))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst8)*(((((IkReal(-1.00000000000000))*(r10)*(x1492)*(x1494)))+(((IkReal(-1.00000000000000))*(r00)*(x1494)*(x1495)))+(((cj13)*(x1498)))+(((cj13)*(x1496)))+(((sj13)*(x1493)))+(((sj13)*(x1497))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j11array[0]=IKatan2(((gconst8)*(((((IkReal(-1.00000000000000))*(x1492)*(x1497)))+(((IkReal(-1.00000000000000))*(x1492)*(x1493)))+(((cj13)*(r00)*(x1494)))+(((sj13)*(x1496)))+(((sj13)*(x1498)))+(((IkReal(-1.00000000000000))*(r10)*(x1494)*(x1495)))))), ((gconst8)*(((((IkReal(-1.00000000000000))*(r10)*(x1492)*(x1494)))+(((IkReal(-1.00000000000000))*(r00)*(x1494)*(x1495)))+(((cj13)*(x1498)))+(((cj13)*(x1496)))+(((sj13)*(x1493)))+(((sj13)*(x1497)))))));
sj11array[0]=IKsin(j11array[0]);
cj11array[0]=IKcos(j11array[0]);
if( j11array[0] > IKPI )
{
    j11array[0]-=IK2PI;
}
else if( j11array[0] < -IKPI )
{    j11array[0]+=IK2PI;
}
j11valid[0] = true;
for(int ij11 = 0; ij11 < 1; ++ij11)
{
if( !j11valid[ij11] )
{
    continue;
}
_ij11[0] = ij11; _ij11[1] = -1;
for(int iij11 = ij11+1; iij11 < 1; ++iij11)
{
if( j11valid[iij11] && IKabs(cj11array[ij11]-cj11array[iij11]) < IKFAST_SOLUTION_THRESH && IKabs(sj11array[ij11]-sj11array[iij11]) < IKFAST_SOLUTION_THRESH )
{
    j11valid[iij11]=false; _ij11[1] = iij11; break; 
}
}
j11 = j11array[ij11]; cj11 = cj11array[ij11]; sj11 = sj11array[ij11];
{
IkReal evalcond[6];
IkReal x1499=IKsin(j11);
IkReal x1500=IKcos(j11);
IkReal x1501=((r12)*(sj15));
IkReal x1502=((IkReal(0.210000000000000))*(sj14));
IkReal x1503=((IkReal(1.00000000000000))*(cj14));
IkReal x1504=((IkReal(0.0159000000000000))*(sj16));
IkReal x1505=((cj15)*(r11));
IkReal x1506=((cj15)*(cj16));
IkReal x1507=((cj16)*(r00));
IkReal x1508=((r02)*(sj15));
IkReal x1509=((r00)*(sj14));
IkReal x1510=((r10)*(sj16));
IkReal x1511=((r01)*(sj16));
IkReal x1512=((IkReal(0.000500000000000000))*(sj15));
IkReal x1513=((cj15)*(r12));
IkReal x1514=((cj14)*(sj16));
IkReal x1515=((IkReal(0.210000000000000))*(cj14));
IkReal x1516=((cj16)*(r11));
IkReal x1517=((IkReal(0.0159000000000000))*(sj14));
IkReal x1518=((cj16)*(r01));
IkReal x1519=((cj14)*(cj15));
IkReal x1520=((cj15)*(r02));
IkReal x1521=((IkReal(1.00000000000000))*(sj15));
IkReal x1522=((cj16)*(r10));
IkReal x1523=((r11)*(sj16));
IkReal x1524=((IkReal(0.0159000000000000))*(cj14));
IkReal x1525=((cj13)*(x1499));
IkReal x1526=((cj13)*(x1500));
IkReal x1527=((sj13)*(x1499));
IkReal x1528=((IkReal(1.00000000000000))*(sj13)*(x1500));
evalcond[0]=((((IkReal(-1.00000000000000))*(x1507)*(x1521)))+(((IkReal(-1.00000000000000))*(x1528)))+(x1525)+(x1520)+(((sj15)*(x1511))));
evalcond[1]=((((sj15)*(x1523)))+(x1513)+(((IkReal(-1.00000000000000))*(x1526)))+(((IkReal(-1.00000000000000))*(x1527)))+(((IkReal(-1.00000000000000))*(x1521)*(x1522))));
evalcond[2]=((((IkReal(-1.00000000000000))*(r00)*(x1503)*(x1506)))+(x1526)+(x1527)+(((IkReal(-1.00000000000000))*(x1503)*(x1508)))+(((sj16)*(x1509)))+(((x1511)*(x1519)))+(((sj14)*(x1518))));
evalcond[3]=((((IkReal(-1.00000000000000))*(x1528)))+(((IkReal(-1.00000000000000))*(x1501)*(x1503)))+(((IkReal(-1.00000000000000))*(r10)*(x1503)*(x1506)))+(x1525)+(((x1505)*(x1514)))+(((sj14)*(x1516)))+(((sj14)*(x1510))));
evalcond[4]=((((cj15)*(x1502)*(x1511)))+(((IkReal(-1.00000000000000))*(x1515)*(x1518)))+(((IkReal(-0.354900000000000))*(x1518)))+(((IkReal(-1.00000000000000))*(r00)*(x1502)*(x1506)))+(((IkReal(-0.0136000000000000))*(r00)*(x1506)))+(((IkReal(0.0182200000000000))*(x1511)))+(((IkReal(-1.00000000000000))*(x1507)*(x1512)))+(((x1504)*(x1509)))+(((IkReal(-0.0136000000000000))*(x1508)))+(((IkReal(-1.00000000000000))*(px)))+(((IkReal(0.0104000000000000))*(x1500)))+(((IkReal(-0.354900000000000))*(r00)*(sj16)))+(((x1517)*(x1518)))+(((IkReal(-0.0182200000000000))*(x1507)))+(((IkReal(0.000500000000000000))*(x1520)))+(((r01)*(x1504)*(x1519)))+(((IkReal(0.0300000000000000))*(x1499)))+(((IkReal(0.0136000000000000))*(cj15)*(x1511)))+(((IkReal(-1.00000000000000))*(x1508)*(x1524)))+(((IkReal(-1.00000000000000))*(x1502)*(x1508)))+(((IkReal(-1.00000000000000))*(r00)*(x1506)*(x1524)))+(((x1511)*(x1512)))+(((IkReal(-0.210000000000000))*(r00)*(x1514))));
evalcond[5]=((((IkReal(0.0136000000000000))*(sj16)*(x1505)))+(((IkReal(-1.00000000000000))*(x1515)*(x1516)))+(((IkReal(-0.354900000000000))*(x1516)))+(((IkReal(-0.354900000000000))*(x1510)))+(((x1512)*(x1523)))+(((IkReal(-1.00000000000000))*(x1501)*(x1524)))+(((IkReal(0.0104000000000000))*(x1499)))+(((IkReal(-1.00000000000000))*(x1510)*(x1515)))+(((IkReal(0.0182200000000000))*(x1523)))+(((sj16)*(x1502)*(x1505)))+(((cj14)*(x1504)*(x1505)))+(((IkReal(-1.00000000000000))*(x1501)*(x1502)))+(((IkReal(-0.0136000000000000))*(x1501)))+(((x1516)*(x1517)))+(((IkReal(-1.00000000000000))*(py)))+(((IkReal(-0.0182200000000000))*(x1522)))+(((IkReal(-1.00000000000000))*(r10)*(x1502)*(x1506)))+(((IkReal(-1.00000000000000))*(x1512)*(x1522)))+(((IkReal(0.000500000000000000))*(x1513)))+(((r10)*(sj14)*(x1504)))+(((IkReal(-0.0300000000000000))*(x1500)))+(((IkReal(-0.0136000000000000))*(r10)*(x1506)))+(((IkReal(-1.00000000000000))*(r10)*(x1506)*(x1524))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j11;
vinfos[0].indices[0] = _ij11[0];
vinfos[0].indices[1] = _ij11[1];
vinfos[0].maxsolutions = _nj11;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j12;
vinfos[1].indices[0] = _ij12[0];
vinfos[1].indices[1] = _ij12[1];
vinfos[1].maxsolutions = _nj12;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j13;
vinfos[2].indices[0] = _ij13[0];
vinfos[2].indices[1] = _ij13[1];
vinfos[2].maxsolutions = _nj13;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j14;
vinfos[3].indices[0] = _ij14[0];
vinfos[3].indices[1] = _ij14[1];
vinfos[3].maxsolutions = _nj14;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j15;
vinfos[4].indices[0] = _ij15[0];
vinfos[4].indices[1] = _ij15[1];
vinfos[4].maxsolutions = _nj15;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j16;
vinfos[5].indices[0] = _ij16[0];
vinfos[5].indices[1] = _ij16[1];
vinfos[5].maxsolutions = _nj16;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
IkReal x1529=((IkReal(0.210000000000000))*(sj14));
IkReal x1530=((r22)*(sj15));
IkReal x1531=((cj16)*(r20));
IkReal x1532=((IkReal(1.00000000000000))*(sj14));
IkReal x1533=((IkReal(0.0159000000000000))*(cj14));
IkReal x1534=((cj16)*(r21));
IkReal x1535=((IkReal(0.210000000000000))*(cj14));
IkReal x1536=((cj15)*(r22));
IkReal x1537=((cj15)*(cj16));
IkReal x1538=((r21)*(sj16));
IkReal x1539=((IkReal(0.000500000000000000))*(sj15));
IkReal x1540=((IkReal(1.00000000000000))*(cj14));
IkReal x1541=((r20)*(sj16));
IkReal x1542=((sj16)*(x1540));
IkReal x1543=((cj15)*(x1538));
IkReal x1544=((sj14)*(x1541));
IkReal x1545=((cj15)*(sj14)*(sj16));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(4.71238898038469))+(j12)), IkReal(6.28318530717959))));
evalcond[1]=((((sj15)*(x1538)))+(x1536)+(((IkReal(-1.00000000000000))*(sj15)*(x1531))));
evalcond[2]=((IkReal(1.00000000000000))+(((sj14)*(x1543)))+(((IkReal(-1.00000000000000))*(cj15)*(x1531)*(x1532)))+(((IkReal(-1.00000000000000))*(x1530)*(x1532)))+(((IkReal(-1.00000000000000))*(x1540)*(x1541)))+(((IkReal(-1.00000000000000))*(x1534)*(x1540))));
evalcond[3]=((((IkReal(-1.00000000000000))*(x1530)*(x1540)))+(x1544)+(((sj14)*(x1534)))+(((IkReal(-1.00000000000000))*(cj15)*(x1531)*(x1540)))+(((cj14)*(x1543))));
evalcond[4]=((((IkReal(-1.00000000000000))*(r10)*(x1532)*(x1537)))+(((r11)*(x1545)))+(((IkReal(-1.00000000000000))*(r10)*(x1542)))+(((IkReal(-1.00000000000000))*(cj16)*(r11)*(x1540)))+(((IkReal(-1.00000000000000))*(r12)*(sj15)*(x1532))));
evalcond[5]=((((IkReal(-1.00000000000000))*(r02)*(sj15)*(x1532)))+(((IkReal(-1.00000000000000))*(cj16)*(r01)*(x1540)))+(((IkReal(-1.00000000000000))*(r00)*(x1542)))+(((r01)*(x1545)))+(((IkReal(-1.00000000000000))*(r00)*(x1532)*(x1537))));
evalcond[6]=((IkReal(-0.136600000000000))+(((IkReal(-1.00000000000000))*(x1529)*(x1530)))+(((x1538)*(x1539)))+(((IkReal(-1.00000000000000))*(x1535)*(x1541)))+(((IkReal(-0.354900000000000))*(x1541)))+(((IkReal(-1.00000000000000))*(cj15)*(x1531)*(x1533)))+(((IkReal(-1.00000000000000))*(x1530)*(x1533)))+(((IkReal(-1.00000000000000))*(x1531)*(x1539)))+(((IkReal(-1.00000000000000))*(cj15)*(x1529)*(x1531)))+(((IkReal(0.0182200000000000))*(x1538)))+(((x1533)*(x1543)))+(((IkReal(-0.0136000000000000))*(cj15)*(x1531)))+(((IkReal(-0.0182200000000000))*(x1531)))+(((IkReal(0.0159000000000000))*(sj14)*(x1534)))+(((IkReal(-1.00000000000000))*(pz)))+(((x1529)*(x1543)))+(((IkReal(0.000500000000000000))*(x1536)))+(((IkReal(-0.0136000000000000))*(x1530)))+(((IkReal(0.0159000000000000))*(x1544)))+(((IkReal(-1.00000000000000))*(x1534)*(x1535)))+(((IkReal(0.0136000000000000))*(x1543)))+(((IkReal(-0.354900000000000))*(x1534))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst10;
gconst10=IKsign((((cj13)*(cj13))+((sj13)*(sj13))));
dummyeval[0]=(((cj13)*(cj13))+((sj13)*(sj13)));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst11;
gconst11=IKsign((((cj13)*(cj13))+((sj13)*(sj13))));
dummyeval[0]=(((cj13)*(cj13))+((sj13)*(sj13)));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j11array[1], cj11array[1], sj11array[1];
bool j11valid[1]={false};
_nj11 = 1;
IkReal x1546=((IkReal(1.00000000000000))*(cj13));
IkReal x1547=((cj15)*(r12));
IkReal x1548=((r11)*(sj16));
IkReal x1549=((IkReal(1.00000000000000))*(sj13));
IkReal x1550=((cj14)*(cj15));
IkReal x1551=((cj16)*(r10));
IkReal x1552=((cj16)*(r11)*(sj14));
IkReal x1553=((r10)*(sj14)*(sj16));
IkReal x1554=((cj13)*(x1551));
IkReal x1555=((cj14)*(r12)*(sj15));
if( IKabs(((gconst11)*(((((IkReal(-1.00000000000000))*(x1546)*(x1553)))+(((IkReal(-1.00000000000000))*(x1546)*(x1552)))+(((x1550)*(x1554)))+(((sj13)*(sj15)*(x1548)))+(((IkReal(-1.00000000000000))*(x1546)*(x1548)*(x1550)))+(((IkReal(-1.00000000000000))*(sj15)*(x1549)*(x1551)))+(((sj13)*(x1547)))+(((cj13)*(x1555))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst11)*(((((IkReal(-1.00000000000000))*(x1546)*(x1547)))+(((IkReal(-1.00000000000000))*(x1549)*(x1553)))+(((IkReal(-1.00000000000000))*(x1549)*(x1552)))+(((sj13)*(x1555)))+(((IkReal(-1.00000000000000))*(sj15)*(x1546)*(x1548)))+(((sj13)*(x1550)*(x1551)))+(((IkReal(-1.00000000000000))*(x1548)*(x1549)*(x1550)))+(((sj15)*(x1554))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j11array[0]=IKatan2(((gconst11)*(((((IkReal(-1.00000000000000))*(x1546)*(x1553)))+(((IkReal(-1.00000000000000))*(x1546)*(x1552)))+(((x1550)*(x1554)))+(((sj13)*(sj15)*(x1548)))+(((IkReal(-1.00000000000000))*(x1546)*(x1548)*(x1550)))+(((IkReal(-1.00000000000000))*(sj15)*(x1549)*(x1551)))+(((sj13)*(x1547)))+(((cj13)*(x1555)))))), ((gconst11)*(((((IkReal(-1.00000000000000))*(x1546)*(x1547)))+(((IkReal(-1.00000000000000))*(x1549)*(x1553)))+(((IkReal(-1.00000000000000))*(x1549)*(x1552)))+(((sj13)*(x1555)))+(((IkReal(-1.00000000000000))*(sj15)*(x1546)*(x1548)))+(((sj13)*(x1550)*(x1551)))+(((IkReal(-1.00000000000000))*(x1548)*(x1549)*(x1550)))+(((sj15)*(x1554)))))));
sj11array[0]=IKsin(j11array[0]);
cj11array[0]=IKcos(j11array[0]);
if( j11array[0] > IKPI )
{
    j11array[0]-=IK2PI;
}
else if( j11array[0] < -IKPI )
{    j11array[0]+=IK2PI;
}
j11valid[0] = true;
for(int ij11 = 0; ij11 < 1; ++ij11)
{
if( !j11valid[ij11] )
{
    continue;
}
_ij11[0] = ij11; _ij11[1] = -1;
for(int iij11 = ij11+1; iij11 < 1; ++iij11)
{
if( j11valid[iij11] && IKabs(cj11array[ij11]-cj11array[iij11]) < IKFAST_SOLUTION_THRESH && IKabs(sj11array[ij11]-sj11array[iij11]) < IKFAST_SOLUTION_THRESH )
{
    j11valid[iij11]=false; _ij11[1] = iij11; break; 
}
}
j11 = j11array[ij11]; cj11 = cj11array[ij11]; sj11 = sj11array[ij11];
{
IkReal evalcond[6];
IkReal x1556=IKcos(j11);
IkReal x1557=IKsin(j11);
IkReal x1558=((r12)*(sj15));
IkReal x1559=((IkReal(0.210000000000000))*(sj14));
IkReal x1560=((IkReal(1.00000000000000))*(cj14));
IkReal x1561=((IkReal(0.0159000000000000))*(sj16));
IkReal x1562=((cj15)*(r11));
IkReal x1563=((cj16)*(r00));
IkReal x1564=((r02)*(sj15));
IkReal x1565=((r00)*(sj14));
IkReal x1566=((r10)*(sj16));
IkReal x1567=((cj16)*(r01));
IkReal x1568=((r01)*(sj16));
IkReal x1569=((IkReal(0.000500000000000000))*(sj15));
IkReal x1570=((cj15)*(r12));
IkReal x1571=((cj14)*(sj16));
IkReal x1572=((IkReal(0.210000000000000))*(cj14));
IkReal x1573=((IkReal(0.0159000000000000))*(sj14));
IkReal x1574=((cj14)*(cj15));
IkReal x1575=((cj15)*(r02));
IkReal x1576=((IkReal(1.00000000000000))*(sj15));
IkReal x1577=((cj16)*(r10));
IkReal x1578=((r11)*(sj16));
IkReal x1579=((cj16)*(r11));
IkReal x1580=((IkReal(0.0159000000000000))*(cj14));
IkReal x1581=((IkReal(0.0136000000000000))*(cj15));
IkReal x1582=((cj13)*(x1556));
IkReal x1583=((cj15)*(x1577));
IkReal x1584=((sj13)*(x1556));
IkReal x1585=((IkReal(1.00000000000000))*(x1557));
IkReal x1586=((sj13)*(x1585));
evalcond[0]=((((sj15)*(x1568)))+(((IkReal(-1.00000000000000))*(cj13)*(x1585)))+(x1575)+(((IkReal(-1.00000000000000))*(x1563)*(x1576)))+(((IkReal(-1.00000000000000))*(x1584))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x1586)))+(((IkReal(-1.00000000000000))*(x1576)*(x1577)))+(((sj15)*(x1578)))+(x1570)+(x1582));
evalcond[2]=((((IkReal(-1.00000000000000))*(x1586)))+(((sj14)*(x1567)))+(((sj16)*(x1565)))+(((IkReal(-1.00000000000000))*(cj15)*(x1560)*(x1563)))+(((IkReal(-1.00000000000000))*(x1560)*(x1564)))+(((x1568)*(x1574)))+(x1582));
evalcond[3]=((((sj14)*(x1566)))+(((sj14)*(x1579)))+(((IkReal(-1.00000000000000))*(x1560)*(x1583)))+(x1584)+(((cj13)*(x1557)))+(((x1562)*(x1571)))+(((IkReal(-1.00000000000000))*(x1558)*(x1560))));
evalcond[4]=((((IkReal(-1.00000000000000))*(x1559)*(x1564)))+(((x1567)*(x1573)))+(((IkReal(-0.354900000000000))*(x1567)))+(((IkReal(-0.0136000000000000))*(x1564)))+(((IkReal(-1.00000000000000))*(x1567)*(x1572)))+(((IkReal(-1.00000000000000))*(x1563)*(x1581)))+(((x1568)*(x1581)))+(((IkReal(0.0182200000000000))*(x1568)))+(((IkReal(-1.00000000000000))*(x1564)*(x1580)))+(((x1568)*(x1569)))+(((IkReal(-1.00000000000000))*(px)))+(((x1561)*(x1565)))+(((IkReal(-1.00000000000000))*(x1563)*(x1569)))+(((IkReal(-1.00000000000000))*(cj15)*(x1559)*(x1563)))+(((IkReal(-0.354900000000000))*(r00)*(sj16)))+(((cj15)*(x1559)*(x1568)))+(((IkReal(-0.0159000000000000))*(x1563)*(x1574)))+(((r01)*(x1561)*(x1574)))+(((IkReal(0.0104000000000000))*(x1556)))+(((IkReal(0.000500000000000000))*(x1575)))+(((IkReal(0.0300000000000000))*(x1557)))+(((IkReal(-0.0182200000000000))*(x1563)))+(((IkReal(-0.210000000000000))*(r00)*(x1571))));
evalcond[5]=((((r10)*(sj14)*(x1561)))+(((sj16)*(x1559)*(x1562)))+(((IkReal(-1.00000000000000))*(x1558)*(x1559)))+(((IkReal(-0.0136000000000000))*(x1558)))+(((IkReal(-0.354900000000000))*(x1579)))+(((x1569)*(x1578)))+(((IkReal(-1.00000000000000))*(x1572)*(x1579)))+(((IkReal(-0.354900000000000))*(x1566)))+(((IkReal(-0.0159000000000000))*(x1574)*(x1577)))+(((IkReal(-1.00000000000000))*(x1559)*(x1583)))+(((IkReal(-1.00000000000000))*(x1566)*(x1572)))+(((IkReal(-1.00000000000000))*(x1577)*(x1581)))+(((IkReal(0.0182200000000000))*(x1578)))+(((x1573)*(x1579)))+(((cj14)*(x1561)*(x1562)))+(((IkReal(-1.00000000000000))*(py)))+(((IkReal(-1.00000000000000))*(x1569)*(x1577)))+(((IkReal(-1.00000000000000))*(x1558)*(x1580)))+(((IkReal(-0.0300000000000000))*(x1556)))+(((IkReal(0.0104000000000000))*(x1557)))+(((IkReal(0.000500000000000000))*(x1570)))+(((IkReal(-0.0182200000000000))*(x1577)))+(((IkReal(0.0136000000000000))*(sj16)*(x1562))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j11;
vinfos[0].indices[0] = _ij11[0];
vinfos[0].indices[1] = _ij11[1];
vinfos[0].maxsolutions = _nj11;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j12;
vinfos[1].indices[0] = _ij12[0];
vinfos[1].indices[1] = _ij12[1];
vinfos[1].maxsolutions = _nj12;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j13;
vinfos[2].indices[0] = _ij13[0];
vinfos[2].indices[1] = _ij13[1];
vinfos[2].maxsolutions = _nj13;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j14;
vinfos[3].indices[0] = _ij14[0];
vinfos[3].indices[1] = _ij14[1];
vinfos[3].maxsolutions = _nj14;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j15;
vinfos[4].indices[0] = _ij15[0];
vinfos[4].indices[1] = _ij15[1];
vinfos[4].maxsolutions = _nj15;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j16;
vinfos[5].indices[0] = _ij16[0];
vinfos[5].indices[1] = _ij16[1];
vinfos[5].maxsolutions = _nj16;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j11array[1], cj11array[1], sj11array[1];
bool j11valid[1]={false};
_nj11 = 1;
IkReal x1587=((cj15)*(r02));
IkReal x1588=((IkReal(1.00000000000000))*(cj13));
IkReal x1589=((cj15)*(r12));
IkReal x1590=((cj16)*(sj15));
IkReal x1591=((IkReal(1.00000000000000))*(sj13));
IkReal x1592=((r01)*(sj15)*(sj16));
IkReal x1593=((r11)*(sj15)*(sj16));
if( IKabs(((gconst10)*(((((IkReal(-1.00000000000000))*(r00)*(x1588)*(x1590)))+(((sj13)*(x1593)))+(((sj13)*(x1589)))+(((cj13)*(x1592)))+(((cj13)*(x1587)))+(((IkReal(-1.00000000000000))*(r10)*(x1590)*(x1591))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst10)*(((((cj13)*(r10)*(x1590)))+(((IkReal(-1.00000000000000))*(r00)*(x1590)*(x1591)))+(((sj13)*(x1592)))+(((sj13)*(x1587)))+(((IkReal(-1.00000000000000))*(x1588)*(x1593)))+(((IkReal(-1.00000000000000))*(x1588)*(x1589))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j11array[0]=IKatan2(((gconst10)*(((((IkReal(-1.00000000000000))*(r00)*(x1588)*(x1590)))+(((sj13)*(x1593)))+(((sj13)*(x1589)))+(((cj13)*(x1592)))+(((cj13)*(x1587)))+(((IkReal(-1.00000000000000))*(r10)*(x1590)*(x1591)))))), ((gconst10)*(((((cj13)*(r10)*(x1590)))+(((IkReal(-1.00000000000000))*(r00)*(x1590)*(x1591)))+(((sj13)*(x1592)))+(((sj13)*(x1587)))+(((IkReal(-1.00000000000000))*(x1588)*(x1593)))+(((IkReal(-1.00000000000000))*(x1588)*(x1589)))))));
sj11array[0]=IKsin(j11array[0]);
cj11array[0]=IKcos(j11array[0]);
if( j11array[0] > IKPI )
{
    j11array[0]-=IK2PI;
}
else if( j11array[0] < -IKPI )
{    j11array[0]+=IK2PI;
}
j11valid[0] = true;
for(int ij11 = 0; ij11 < 1; ++ij11)
{
if( !j11valid[ij11] )
{
    continue;
}
_ij11[0] = ij11; _ij11[1] = -1;
for(int iij11 = ij11+1; iij11 < 1; ++iij11)
{
if( j11valid[iij11] && IKabs(cj11array[ij11]-cj11array[iij11]) < IKFAST_SOLUTION_THRESH && IKabs(sj11array[ij11]-sj11array[iij11]) < IKFAST_SOLUTION_THRESH )
{
    j11valid[iij11]=false; _ij11[1] = iij11; break; 
}
}
j11 = j11array[ij11]; cj11 = cj11array[ij11]; sj11 = sj11array[ij11];
{
IkReal evalcond[6];
IkReal x1594=IKcos(j11);
IkReal x1595=IKsin(j11);
IkReal x1596=((r12)*(sj15));
IkReal x1597=((IkReal(0.210000000000000))*(sj14));
IkReal x1598=((IkReal(1.00000000000000))*(cj14));
IkReal x1599=((IkReal(0.0159000000000000))*(sj16));
IkReal x1600=((cj15)*(r11));
IkReal x1601=((cj16)*(r00));
IkReal x1602=((r02)*(sj15));
IkReal x1603=((r00)*(sj14));
IkReal x1604=((r10)*(sj16));
IkReal x1605=((cj16)*(r01));
IkReal x1606=((r01)*(sj16));
IkReal x1607=((IkReal(0.000500000000000000))*(sj15));
IkReal x1608=((cj15)*(r12));
IkReal x1609=((cj14)*(sj16));
IkReal x1610=((IkReal(0.210000000000000))*(cj14));
IkReal x1611=((IkReal(0.0159000000000000))*(sj14));
IkReal x1612=((cj14)*(cj15));
IkReal x1613=((cj15)*(r02));
IkReal x1614=((IkReal(1.00000000000000))*(sj15));
IkReal x1615=((cj16)*(r10));
IkReal x1616=((r11)*(sj16));
IkReal x1617=((cj16)*(r11));
IkReal x1618=((IkReal(0.0159000000000000))*(cj14));
IkReal x1619=((IkReal(0.0136000000000000))*(cj15));
IkReal x1620=((cj13)*(x1594));
IkReal x1621=((cj15)*(x1615));
IkReal x1622=((sj13)*(x1594));
IkReal x1623=((IkReal(1.00000000000000))*(x1595));
IkReal x1624=((sj13)*(x1623));
evalcond[0]=((((IkReal(-1.00000000000000))*(x1622)))+(x1613)+(((sj15)*(x1606)))+(((IkReal(-1.00000000000000))*(x1601)*(x1614)))+(((IkReal(-1.00000000000000))*(cj13)*(x1623))));
evalcond[1]=((x1620)+(x1608)+(((IkReal(-1.00000000000000))*(x1624)))+(((sj15)*(x1616)))+(((IkReal(-1.00000000000000))*(x1614)*(x1615))));
evalcond[2]=((((sj16)*(x1603)))+(x1620)+(((sj14)*(x1605)))+(((IkReal(-1.00000000000000))*(x1624)))+(((IkReal(-1.00000000000000))*(cj15)*(x1598)*(x1601)))+(((x1606)*(x1612)))+(((IkReal(-1.00000000000000))*(x1598)*(x1602))));
evalcond[3]=((x1622)+(((x1600)*(x1609)))+(((sj14)*(x1617)))+(((sj14)*(x1604)))+(((cj13)*(x1595)))+(((IkReal(-1.00000000000000))*(x1598)*(x1621)))+(((IkReal(-1.00000000000000))*(x1596)*(x1598))));
evalcond[4]=((((IkReal(-0.0159000000000000))*(x1601)*(x1612)))+(((r01)*(x1599)*(x1612)))+(((IkReal(0.0300000000000000))*(x1595)))+(((IkReal(-0.354900000000000))*(x1605)))+(((x1599)*(x1603)))+(((IkReal(-1.00000000000000))*(x1601)*(x1607)))+(((IkReal(-0.0182200000000000))*(x1601)))+(((IkReal(0.000500000000000000))*(x1613)))+(((IkReal(-1.00000000000000))*(px)))+(((IkReal(-0.210000000000000))*(r00)*(x1609)))+(((IkReal(-1.00000000000000))*(x1597)*(x1602)))+(((IkReal(-0.354900000000000))*(r00)*(sj16)))+(((IkReal(-1.00000000000000))*(x1602)*(x1618)))+(((IkReal(-1.00000000000000))*(x1601)*(x1619)))+(((IkReal(-1.00000000000000))*(x1605)*(x1610)))+(((x1605)*(x1611)))+(((cj15)*(x1597)*(x1606)))+(((x1606)*(x1619)))+(((IkReal(-1.00000000000000))*(cj15)*(x1597)*(x1601)))+(((IkReal(0.0104000000000000))*(x1594)))+(((IkReal(-0.0136000000000000))*(x1602)))+(((x1606)*(x1607)))+(((IkReal(0.0182200000000000))*(x1606))));
evalcond[5]=((((IkReal(0.0182200000000000))*(x1616)))+(((IkReal(-0.0300000000000000))*(x1594)))+(((IkReal(-0.354900000000000))*(x1617)))+(((IkReal(-0.0182200000000000))*(x1615)))+(((IkReal(-1.00000000000000))*(x1610)*(x1617)))+(((IkReal(-0.354900000000000))*(x1604)))+(((IkReal(-0.0136000000000000))*(x1596)))+(((IkReal(-1.00000000000000))*(x1597)*(x1621)))+(((IkReal(-1.00000000000000))*(x1596)*(x1618)))+(((IkReal(0.0136000000000000))*(sj16)*(x1600)))+(((IkReal(-0.0159000000000000))*(x1612)*(x1615)))+(((IkReal(-1.00000000000000))*(py)))+(((x1607)*(x1616)))+(((IkReal(0.000500000000000000))*(x1608)))+(((r10)*(sj14)*(x1599)))+(((IkReal(0.0104000000000000))*(x1595)))+(((IkReal(-1.00000000000000))*(x1607)*(x1615)))+(((x1611)*(x1617)))+(((sj16)*(x1597)*(x1600)))+(((IkReal(-1.00000000000000))*(x1615)*(x1619)))+(((IkReal(-1.00000000000000))*(x1604)*(x1610)))+(((cj14)*(x1599)*(x1600)))+(((IkReal(-1.00000000000000))*(x1596)*(x1597))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j11;
vinfos[0].indices[0] = _ij11[0];
vinfos[0].indices[1] = _ij11[1];
vinfos[0].maxsolutions = _nj11;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j12;
vinfos[1].indices[0] = _ij12[0];
vinfos[1].indices[1] = _ij12[1];
vinfos[1].maxsolutions = _nj12;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j13;
vinfos[2].indices[0] = _ij13[0];
vinfos[2].indices[1] = _ij13[1];
vinfos[2].maxsolutions = _nj13;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j14;
vinfos[3].indices[0] = _ij14[0];
vinfos[3].indices[1] = _ij14[1];
vinfos[3].maxsolutions = _nj14;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j15;
vinfos[4].indices[0] = _ij15[0];
vinfos[4].indices[1] = _ij15[1];
vinfos[4].maxsolutions = _nj15;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j16;
vinfos[5].indices[0] = _ij16[0];
vinfos[5].indices[1] = _ij16[1];
vinfos[5].maxsolutions = _nj16;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
IkReal x1625=((r22)*(sj15));
IkReal x1626=((IkReal(0.0159000000000000))*(cj14));
IkReal x1627=((cj16)*(r21));
IkReal x1628=((IkReal(0.210000000000000))*(cj14));
IkReal x1629=((r21)*(sj16));
IkReal x1630=((IkReal(0.000500000000000000))*(sj15));
IkReal x1631=((IkReal(1.00000000000000))*(cj14));
IkReal x1632=((cj15)*(r22));
IkReal x1633=((r20)*(sj16));
IkReal x1634=((cj16)*(r20));
IkReal x1635=((IkReal(0.210000000000000))*(sj14));
IkReal x1636=((sj14)*(x1625));
IkReal x1637=((cj15)*(x1629));
IkReal x1638=((sj14)*(x1633));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(3.14159265358979))+(j13)), IkReal(6.28318530717959))));
evalcond[1]=((x1632)+(((IkReal(-1.00000000000000))*(sj15)*(x1634)))+(((sj15)*(x1629)))+(((IkReal(-1.00000000000000))*(cj12))));
evalcond[2]=((((sj14)*(x1637)))+(((IkReal(-1.00000000000000))*(cj15)*(sj14)*(x1634)))+(((IkReal(-1.00000000000000))*(x1636)))+(((IkReal(-1.00000000000000))*(sj12)))+(((IkReal(-1.00000000000000))*(x1631)*(x1633)))+(((IkReal(-1.00000000000000))*(x1627)*(x1631))));
evalcond[3]=((((sj14)*(x1627)))+(x1638)+(((IkReal(-1.00000000000000))*(x1625)*(x1631)))+(((IkReal(-1.00000000000000))*(cj15)*(x1631)*(x1634)))+(((cj14)*(x1637))));
evalcond[4]=((((IkReal(0.0182200000000000))*(x1629)))+(((IkReal(-0.0182200000000000))*(x1634)))+(((IkReal(-0.354900000000000))*(x1627)))+(((IkReal(0.136600000000000))*(sj12)))+(((IkReal(-1.00000000000000))*(cj15)*(x1634)*(x1635)))+(((IkReal(0.000500000000000000))*(x1632)))+(((x1629)*(x1630)))+(((IkReal(-1.00000000000000))*(x1625)*(x1635)))+(((IkReal(0.0159000000000000))*(sj14)*(x1627)))+(((IkReal(-0.0136000000000000))*(cj15)*(x1634)))+(((IkReal(-1.00000000000000))*(pz)))+(((IkReal(-1.00000000000000))*(cj15)*(x1626)*(x1634)))+(((IkReal(-1.00000000000000))*(x1625)*(x1626)))+(((x1635)*(x1637)))+(((IkReal(-1.00000000000000))*(x1628)*(x1633)))+(((IkReal(0.0136000000000000))*(x1637)))+(((IkReal(-1.00000000000000))*(x1630)*(x1634)))+(((IkReal(-1.00000000000000))*(x1627)*(x1628)))+(((IkReal(0.0159000000000000))*(x1638)))+(((IkReal(-0.354900000000000))*(x1633)))+(((IkReal(-0.0136000000000000))*(x1625)))+(((x1626)*(x1637))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst12;
gconst12=IKsign(sj12);
dummyeval[0]=sj12;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
dummyeval[0]=sj12;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
dummyeval[0]=sj12;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal evalcond[7];
IkReal x1639=((cj14)*(sj16));
IkReal x1640=((IkReal(0.210000000000000))*(r20));
IkReal x1641=((r22)*(sj15));
IkReal x1642=((IkReal(0.0159000000000000))*(cj14));
IkReal x1643=((cj15)*(r21));
IkReal x1644=((cj16)*(r21));
IkReal x1645=((r21)*(sj16));
IkReal x1646=((IkReal(0.000500000000000000))*(sj15));
IkReal x1647=((IkReal(1.00000000000000))*(cj14));
IkReal x1648=((cj15)*(r22));
IkReal x1649=((IkReal(1.00000000000000))*(r20));
IkReal x1650=((cj16)*(r20));
IkReal x1651=((sj15)*(sj16));
IkReal x1652=((sj14)*(sj16));
IkReal x1653=((sj14)*(x1641));
IkReal x1654=((r20)*(x1652));
IkReal x1655=((IkReal(1.00000000000000))*(cj16)*(sj15));
IkReal x1656=((cj15)*(cj16)*(sj14));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(3.14159265358979))+(j12)), IkReal(6.28318530717959))));
evalcond[1]=((IkReal(-1.00000000000000))+(x1648)+(((IkReal(-1.00000000000000))*(cj16)*(sj15)*(x1649)))+(((sj15)*(x1645))));
evalcond[2]=((((IkReal(-1.00000000000000))*(r00)*(x1655)))+(((cj15)*(r02)))+(((r01)*(x1651))));
evalcond[3]=((((cj15)*(r12)))+(((IkReal(-1.00000000000000))*(r10)*(x1655)))+(((r11)*(x1651))));
evalcond[4]=((((IkReal(-1.00000000000000))*(x1644)*(x1647)))+(((IkReal(-1.00000000000000))*(x1653)))+(((IkReal(-1.00000000000000))*(x1639)*(x1649)))+(((IkReal(-1.00000000000000))*(x1649)*(x1656)))+(((x1643)*(x1652))));
evalcond[5]=((((sj14)*(x1644)))+(((IkReal(-1.00000000000000))*(x1641)*(x1647)))+(x1654)+(((IkReal(-1.00000000000000))*(cj15)*(x1647)*(x1650)))+(((x1639)*(x1643))));
evalcond[6]=((((IkReal(0.0159000000000000))*(x1654)))+(((IkReal(-0.354900000000000))*(x1644)))+(((IkReal(-0.0136000000000000))*(x1641)))+(((IkReal(-1.00000000000000))*(x1641)*(x1642)))+(((IkReal(-1.00000000000000))*(cj15)*(x1642)*(x1650)))+(((IkReal(-0.210000000000000))*(cj14)*(x1644)))+(((IkReal(-0.354900000000000))*(r20)*(sj16)))+(((IkReal(-1.00000000000000))*(x1646)*(x1650)))+(((IkReal(-0.0136000000000000))*(cj15)*(x1650)))+(((x1645)*(x1646)))+(((IkReal(0.210000000000000))*(x1643)*(x1652)))+(((IkReal(-1.00000000000000))*(x1640)*(x1656)))+(((IkReal(0.000500000000000000))*(x1648)))+(((IkReal(-1.00000000000000))*(x1639)*(x1640)))+(((IkReal(-1.00000000000000))*(pz)))+(((IkReal(0.0159000000000000))*(sj14)*(x1644)))+(((IkReal(0.0182200000000000))*(x1645)))+(((IkReal(0.0136000000000000))*(sj16)*(x1643)))+(((IkReal(0.0159000000000000))*(x1639)*(x1643)))+(((IkReal(-0.0182200000000000))*(x1650)))+(((IkReal(-0.210000000000000))*(x1653))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  )
{
{
IkReal j11array[1], cj11array[1], sj11array[1];
bool j11valid[1]={false};
_nj11 = 1;
IkReal x1657=((cj16)*(r11));
IkReal x1658=((IkReal(1.00000000000000))*(sj14));
IkReal x1659=((r12)*(sj15));
IkReal x1660=((r10)*(sj16));
IkReal x1661=((cj15)*(r11)*(sj16));
IkReal x1662=((cj15)*(cj16)*(r10));
if( IKabs(((((IkReal(-1.00000000000000))*(x1657)*(x1658)))+(((cj14)*(x1662)))+(((cj14)*(x1659)))+(((IkReal(-1.00000000000000))*(cj14)*(x1661)))+(((IkReal(-1.00000000000000))*(x1658)*(x1660))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((cj14)*(x1660)))+(((cj14)*(x1657)))+(((IkReal(-1.00000000000000))*(x1658)*(x1661)))+(((sj14)*(x1662)))+(((sj14)*(x1659))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((IkReal(-1.00000000000000))*(x1657)*(x1658)))+(((cj14)*(x1662)))+(((cj14)*(x1659)))+(((IkReal(-1.00000000000000))*(cj14)*(x1661)))+(((IkReal(-1.00000000000000))*(x1658)*(x1660)))))+IKsqr(((((cj14)*(x1660)))+(((cj14)*(x1657)))+(((IkReal(-1.00000000000000))*(x1658)*(x1661)))+(((sj14)*(x1662)))+(((sj14)*(x1659)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j11array[0]=IKatan2(((((IkReal(-1.00000000000000))*(x1657)*(x1658)))+(((cj14)*(x1662)))+(((cj14)*(x1659)))+(((IkReal(-1.00000000000000))*(cj14)*(x1661)))+(((IkReal(-1.00000000000000))*(x1658)*(x1660)))), ((((cj14)*(x1660)))+(((cj14)*(x1657)))+(((IkReal(-1.00000000000000))*(x1658)*(x1661)))+(((sj14)*(x1662)))+(((sj14)*(x1659)))));
sj11array[0]=IKsin(j11array[0]);
cj11array[0]=IKcos(j11array[0]);
if( j11array[0] > IKPI )
{
    j11array[0]-=IK2PI;
}
else if( j11array[0] < -IKPI )
{    j11array[0]+=IK2PI;
}
j11valid[0] = true;
for(int ij11 = 0; ij11 < 1; ++ij11)
{
if( !j11valid[ij11] )
{
    continue;
}
_ij11[0] = ij11; _ij11[1] = -1;
for(int iij11 = ij11+1; iij11 < 1; ++iij11)
{
if( j11valid[iij11] && IKabs(cj11array[ij11]-cj11array[iij11]) < IKFAST_SOLUTION_THRESH && IKabs(sj11array[ij11]-sj11array[iij11]) < IKFAST_SOLUTION_THRESH )
{
    j11valid[iij11]=false; _ij11[1] = iij11; break; 
}
}
j11 = j11array[ij11]; cj11 = cj11array[ij11]; sj11 = sj11array[ij11];
{
IkReal evalcond[6];
IkReal x1663=IKcos(j11);
IkReal x1664=IKsin(j11);
IkReal x1665=((r12)*(sj15));
IkReal x1666=((IkReal(0.210000000000000))*(sj14));
IkReal x1667=((IkReal(1.00000000000000))*(cj14));
IkReal x1668=((r00)*(sj16));
IkReal x1669=((IkReal(0.354900000000000))*(cj16));
IkReal x1670=((r10)*(sj16));
IkReal x1671=((cj16)*(r00));
IkReal x1672=((r02)*(sj15));
IkReal x1673=((IkReal(1.00000000000000))*(sj14));
IkReal x1674=((IkReal(0.000500000000000000))*(sj15));
IkReal x1675=((r01)*(sj16));
IkReal x1676=((IkReal(0.000500000000000000))*(cj15));
IkReal x1677=((IkReal(0.0159000000000000))*(cj14));
IkReal x1678=((IkReal(0.0159000000000000))*(sj14));
IkReal x1679=((cj16)*(r01));
IkReal x1680=((cj16)*(r11));
IkReal x1681=((IkReal(0.210000000000000))*(cj14));
IkReal x1682=((r11)*(sj16));
IkReal x1683=((cj16)*(r10));
IkReal x1684=((IkReal(0.0136000000000000))*(cj15));
IkReal x1685=((cj15)*(x1683));
IkReal x1686=((cj15)*(x1682));
evalcond[0]=((((sj14)*(x1686)))+(((IkReal(-1.00000000000000))*(x1667)*(x1670)))+(x1663)+(((IkReal(-1.00000000000000))*(x1673)*(x1685)))+(((IkReal(-1.00000000000000))*(x1667)*(x1680)))+(((IkReal(-1.00000000000000))*(x1665)*(x1673))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x1672)*(x1673)))+(((IkReal(-1.00000000000000))*(x1667)*(x1679)))+(((IkReal(-1.00000000000000))*(x1667)*(x1668)))+(((IkReal(-1.00000000000000))*(x1664)))+(((IkReal(-1.00000000000000))*(cj15)*(x1671)*(x1673)))+(((cj15)*(sj14)*(x1675))));
evalcond[2]=((((IkReal(-1.00000000000000))*(x1667)*(x1672)))+(x1663)+(((IkReal(-1.00000000000000))*(cj15)*(x1667)*(x1671)))+(((cj14)*(cj15)*(x1675)))+(((sj14)*(x1679)))+(((sj14)*(x1668))));
evalcond[3]=((((sj14)*(x1680)))+(x1664)+(((cj14)*(x1686)))+(((IkReal(-1.00000000000000))*(x1667)*(x1685)))+(((sj14)*(x1670)))+(((IkReal(-1.00000000000000))*(x1665)*(x1667))));
evalcond[4]=((((IkReal(-1.00000000000000))*(x1672)*(x1677)))+(((r02)*(x1676)))+(((IkReal(-1.00000000000000))*(r01)*(x1669)))+(((x1678)*(x1679)))+(((IkReal(0.166600000000000))*(x1664)))+(((x1674)*(x1675)))+(((x1675)*(x1684)))+(((x1668)*(x1678)))+(((cj15)*(x1675)*(x1677)))+(((cj15)*(x1666)*(x1675)))+(((IkReal(-1.00000000000000))*(x1679)*(x1681)))+(((IkReal(0.0104000000000000))*(x1663)))+(((IkReal(-0.0136000000000000))*(x1672)))+(((IkReal(-1.00000000000000))*(px)))+(((IkReal(-1.00000000000000))*(x1671)*(x1674)))+(((IkReal(0.0182200000000000))*(x1675)))+(((IkReal(-1.00000000000000))*(x1668)*(x1681)))+(((IkReal(-0.0182200000000000))*(x1671)))+(((IkReal(-1.00000000000000))*(cj15)*(x1671)*(x1677)))+(((IkReal(-1.00000000000000))*(x1666)*(x1672)))+(((IkReal(-1.00000000000000))*(cj15)*(x1666)*(x1671)))+(((IkReal(-0.354900000000000))*(x1668)))+(((IkReal(-1.00000000000000))*(x1671)*(x1684))));
evalcond[5]=((((IkReal(-1.00000000000000))*(x1670)*(x1681)))+(((IkReal(-1.00000000000000))*(x1677)*(x1685)))+(((IkReal(-0.0182200000000000))*(x1683)))+(((x1677)*(x1686)))+(((IkReal(-1.00000000000000))*(x1674)*(x1683)))+(((IkReal(-0.0136000000000000))*(x1665)))+(((IkReal(-1.00000000000000))*(x1683)*(x1684)))+(((IkReal(-1.00000000000000))*(x1666)*(x1685)))+(((IkReal(0.0182200000000000))*(x1682)))+(((IkReal(-1.00000000000000))*(r11)*(x1669)))+(((IkReal(0.0104000000000000))*(x1664)))+(((IkReal(-1.00000000000000))*(py)))+(((x1674)*(x1682)))+(((IkReal(-1.00000000000000))*(x1680)*(x1681)))+(((IkReal(-0.166600000000000))*(x1663)))+(((IkReal(-1.00000000000000))*(x1665)*(x1677)))+(((IkReal(-0.354900000000000))*(x1670)))+(((x1682)*(x1684)))+(((x1666)*(x1686)))+(((IkReal(-1.00000000000000))*(x1665)*(x1666)))+(((x1678)*(x1680)))+(((x1670)*(x1678)))+(((r12)*(x1676))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j11;
vinfos[0].indices[0] = _ij11[0];
vinfos[0].indices[1] = _ij11[1];
vinfos[0].maxsolutions = _nj11;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j12;
vinfos[1].indices[0] = _ij12[0];
vinfos[1].indices[1] = _ij12[1];
vinfos[1].maxsolutions = _nj12;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j13;
vinfos[2].indices[0] = _ij13[0];
vinfos[2].indices[1] = _ij13[1];
vinfos[2].maxsolutions = _nj13;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j14;
vinfos[3].indices[0] = _ij14[0];
vinfos[3].indices[1] = _ij14[1];
vinfos[3].maxsolutions = _nj14;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j15;
vinfos[4].indices[0] = _ij15[0];
vinfos[4].indices[1] = _ij15[1];
vinfos[4].maxsolutions = _nj15;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j16;
vinfos[5].indices[0] = _ij16[0];
vinfos[5].indices[1] = _ij16[1];
vinfos[5].maxsolutions = _nj16;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

} else
{
IkReal x1687=((cj14)*(sj16));
IkReal x1688=((IkReal(0.210000000000000))*(r20));
IkReal x1689=((r22)*(sj15));
IkReal x1690=((IkReal(0.0159000000000000))*(cj14));
IkReal x1691=((cj15)*(r21));
IkReal x1692=((cj16)*(r21));
IkReal x1693=((r21)*(sj16));
IkReal x1694=((IkReal(0.000500000000000000))*(sj15));
IkReal x1695=((IkReal(1.00000000000000))*(cj14));
IkReal x1696=((cj15)*(r22));
IkReal x1697=((IkReal(1.00000000000000))*(r20));
IkReal x1698=((cj16)*(r20));
IkReal x1699=((sj15)*(sj16));
IkReal x1700=((sj14)*(sj16));
IkReal x1701=((sj14)*(x1689));
IkReal x1702=((r20)*(x1700));
IkReal x1703=((IkReal(1.00000000000000))*(cj16)*(sj15));
IkReal x1704=((cj15)*(cj16)*(sj14));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(j12, IkReal(6.28318530717959))));
evalcond[1]=((IkReal(1.00000000000000))+(((sj15)*(x1693)))+(x1696)+(((IkReal(-1.00000000000000))*(cj16)*(sj15)*(x1697))));
evalcond[2]=((((r01)*(x1699)))+(((cj15)*(r02)))+(((IkReal(-1.00000000000000))*(r00)*(x1703))));
evalcond[3]=((((cj15)*(r12)))+(((r11)*(x1699)))+(((IkReal(-1.00000000000000))*(r10)*(x1703))));
evalcond[4]=((((IkReal(-1.00000000000000))*(x1692)*(x1695)))+(((IkReal(-1.00000000000000))*(x1687)*(x1697)))+(((IkReal(-1.00000000000000))*(x1701)))+(((x1691)*(x1700)))+(((IkReal(-1.00000000000000))*(x1697)*(x1704))));
evalcond[5]=((x1702)+(((IkReal(-1.00000000000000))*(cj15)*(x1695)*(x1698)))+(((x1687)*(x1691)))+(((sj14)*(x1692)))+(((IkReal(-1.00000000000000))*(x1689)*(x1695))));
evalcond[6]=((((IkReal(-1.00000000000000))*(cj15)*(x1690)*(x1698)))+(((IkReal(0.210000000000000))*(x1691)*(x1700)))+(((IkReal(-1.00000000000000))*(x1687)*(x1688)))+(((IkReal(0.000500000000000000))*(x1696)))+(((IkReal(-0.354900000000000))*(r20)*(sj16)))+(((IkReal(-0.0136000000000000))*(cj15)*(x1698)))+(((IkReal(-1.00000000000000))*(x1694)*(x1698)))+(((IkReal(0.0159000000000000))*(sj14)*(x1692)))+(((IkReal(0.0182200000000000))*(x1693)))+(((IkReal(-1.00000000000000))*(pz)))+(((IkReal(-0.0136000000000000))*(x1689)))+(((x1693)*(x1694)))+(((IkReal(0.0159000000000000))*(x1702)))+(((IkReal(0.0136000000000000))*(sj16)*(x1691)))+(((IkReal(-1.00000000000000))*(x1688)*(x1704)))+(((IkReal(-0.354900000000000))*(x1692)))+(((IkReal(-0.210000000000000))*(x1701)))+(((IkReal(-0.0182200000000000))*(x1698)))+(((IkReal(0.0159000000000000))*(x1687)*(x1691)))+(((IkReal(-0.210000000000000))*(cj14)*(x1692)))+(((IkReal(-1.00000000000000))*(x1689)*(x1690))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  )
{
{
IkReal j11array[1], cj11array[1], sj11array[1];
bool j11valid[1]={false};
_nj11 = 1;
IkReal x1705=((r02)*(sj15));
IkReal x1706=((cj15)*(sj14));
IkReal x1707=((cj16)*(r00));
IkReal x1708=((cj16)*(r01));
IkReal x1709=((cj14)*(cj15));
IkReal x1710=((r00)*(sj16));
IkReal x1711=((IkReal(1.00000000000000))*(sj14));
IkReal x1712=((IkReal(1.00000000000000))*(r01)*(sj16));
if( IKabs(((((cj14)*(x1708)))+(((x1706)*(x1707)))+(((cj14)*(x1710)))+(((IkReal(-1.00000000000000))*(x1706)*(x1712)))+(((sj14)*(x1705))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((IkReal(-1.00000000000000))*(x1710)*(x1711)))+(((IkReal(-1.00000000000000))*(x1709)*(x1712)))+(((cj14)*(x1705)))+(((IkReal(-1.00000000000000))*(x1708)*(x1711)))+(((x1707)*(x1709))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((cj14)*(x1708)))+(((x1706)*(x1707)))+(((cj14)*(x1710)))+(((IkReal(-1.00000000000000))*(x1706)*(x1712)))+(((sj14)*(x1705)))))+IKsqr(((((IkReal(-1.00000000000000))*(x1710)*(x1711)))+(((IkReal(-1.00000000000000))*(x1709)*(x1712)))+(((cj14)*(x1705)))+(((IkReal(-1.00000000000000))*(x1708)*(x1711)))+(((x1707)*(x1709)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j11array[0]=IKatan2(((((cj14)*(x1708)))+(((x1706)*(x1707)))+(((cj14)*(x1710)))+(((IkReal(-1.00000000000000))*(x1706)*(x1712)))+(((sj14)*(x1705)))), ((((IkReal(-1.00000000000000))*(x1710)*(x1711)))+(((IkReal(-1.00000000000000))*(x1709)*(x1712)))+(((cj14)*(x1705)))+(((IkReal(-1.00000000000000))*(x1708)*(x1711)))+(((x1707)*(x1709)))));
sj11array[0]=IKsin(j11array[0]);
cj11array[0]=IKcos(j11array[0]);
if( j11array[0] > IKPI )
{
    j11array[0]-=IK2PI;
}
else if( j11array[0] < -IKPI )
{    j11array[0]+=IK2PI;
}
j11valid[0] = true;
for(int ij11 = 0; ij11 < 1; ++ij11)
{
if( !j11valid[ij11] )
{
    continue;
}
_ij11[0] = ij11; _ij11[1] = -1;
for(int iij11 = ij11+1; iij11 < 1; ++iij11)
{
if( j11valid[iij11] && IKabs(cj11array[ij11]-cj11array[iij11]) < IKFAST_SOLUTION_THRESH && IKabs(sj11array[ij11]-sj11array[iij11]) < IKFAST_SOLUTION_THRESH )
{
    j11valid[iij11]=false; _ij11[1] = iij11; break; 
}
}
j11 = j11array[ij11]; cj11 = cj11array[ij11]; sj11 = sj11array[ij11];
{
IkReal evalcond[6];
IkReal x1713=IKcos(j11);
IkReal x1714=IKsin(j11);
IkReal x1715=((r12)*(sj15));
IkReal x1716=((IkReal(0.210000000000000))*(sj14));
IkReal x1717=((IkReal(1.00000000000000))*(cj14));
IkReal x1718=((r00)*(sj16));
IkReal x1719=((r10)*(sj16));
IkReal x1720=((cj16)*(r00));
IkReal x1721=((r02)*(sj15));
IkReal x1722=((IkReal(1.00000000000000))*(sj14));
IkReal x1723=((cj16)*(r01));
IkReal x1724=((r01)*(sj16));
IkReal x1725=((IkReal(0.000500000000000000))*(sj15));
IkReal x1726=((IkReal(0.000500000000000000))*(cj15));
IkReal x1727=((IkReal(0.0159000000000000))*(cj14));
IkReal x1728=((IkReal(0.210000000000000))*(cj14));
IkReal x1729=((IkReal(0.0159000000000000))*(sj14));
IkReal x1730=((cj16)*(r11));
IkReal x1731=((r11)*(sj16));
IkReal x1732=((cj16)*(r10));
IkReal x1733=((IkReal(0.0136000000000000))*(cj15));
IkReal x1734=((cj15)*(x1732));
IkReal x1735=((cj15)*(x1731));
evalcond[0]=((((IkReal(-1.00000000000000))*(x1715)*(x1722)))+(((IkReal(-1.00000000000000))*(x1722)*(x1734)))+(((sj14)*(x1735)))+(((IkReal(-1.00000000000000))*(x1713)))+(((IkReal(-1.00000000000000))*(x1717)*(x1730)))+(((IkReal(-1.00000000000000))*(x1717)*(x1719))));
evalcond[1]=((x1714)+(((IkReal(-1.00000000000000))*(x1717)*(x1723)))+(((cj15)*(sj14)*(x1724)))+(((IkReal(-1.00000000000000))*(cj15)*(x1720)*(x1722)))+(((IkReal(-1.00000000000000))*(x1721)*(x1722)))+(((IkReal(-1.00000000000000))*(x1717)*(x1718))));
evalcond[2]=((x1713)+(((sj14)*(x1723)))+(((IkReal(-1.00000000000000))*(cj15)*(x1717)*(x1720)))+(((cj14)*(cj15)*(x1724)))+(((IkReal(-1.00000000000000))*(x1717)*(x1721)))+(((sj14)*(x1718))));
evalcond[3]=((((cj14)*(x1735)))+(x1714)+(((sj14)*(x1730)))+(((IkReal(-1.00000000000000))*(x1717)*(x1734)))+(((IkReal(-1.00000000000000))*(x1715)*(x1717)))+(((sj14)*(x1719))));
evalcond[4]=((((cj15)*(x1716)*(x1724)))+(((x1723)*(x1729)))+(((IkReal(0.0182200000000000))*(x1724)))+(((x1724)*(x1725)))+(((x1724)*(x1733)))+(((IkReal(-0.354900000000000))*(x1723)))+(((IkReal(-0.106600000000000))*(x1714)))+(((x1718)*(x1729)))+(((IkReal(-1.00000000000000))*(x1720)*(x1733)))+(((IkReal(-1.00000000000000))*(x1720)*(x1725)))+(((IkReal(-1.00000000000000))*(x1723)*(x1728)))+(((r02)*(x1726)))+(((IkReal(-0.0136000000000000))*(x1721)))+(((IkReal(-1.00000000000000))*(px)))+(((IkReal(-0.0182200000000000))*(x1720)))+(((IkReal(-0.354900000000000))*(x1718)))+(((IkReal(-1.00000000000000))*(cj15)*(x1716)*(x1720)))+(((IkReal(-1.00000000000000))*(x1718)*(x1728)))+(((cj15)*(x1724)*(x1727)))+(((IkReal(-1.00000000000000))*(x1716)*(x1721)))+(((IkReal(-1.00000000000000))*(cj15)*(x1720)*(x1727)))+(((IkReal(-1.00000000000000))*(x1721)*(x1727)))+(((IkReal(0.0104000000000000))*(x1713))));
evalcond[5]=((((IkReal(-0.0136000000000000))*(x1715)))+(((IkReal(-1.00000000000000))*(x1715)*(x1727)))+(((IkReal(0.0182200000000000))*(x1731)))+(((x1731)*(x1733)))+(((IkReal(-1.00000000000000))*(x1728)*(x1730)))+(((x1725)*(x1731)))+(((IkReal(-0.354900000000000))*(x1730)))+(((x1729)*(x1730)))+(((IkReal(-0.0182200000000000))*(x1732)))+(((IkReal(-1.00000000000000))*(py)))+(((IkReal(0.106600000000000))*(x1713)))+(((IkReal(-1.00000000000000))*(x1715)*(x1716)))+(((x1727)*(x1735)))+(((IkReal(-1.00000000000000))*(x1725)*(x1732)))+(((IkReal(-0.354900000000000))*(x1719)))+(((r12)*(x1726)))+(((IkReal(-1.00000000000000))*(x1732)*(x1733)))+(((IkReal(-1.00000000000000))*(x1719)*(x1728)))+(((IkReal(-1.00000000000000))*(x1727)*(x1734)))+(((x1719)*(x1729)))+(((x1716)*(x1735)))+(((IkReal(-1.00000000000000))*(x1716)*(x1734)))+(((IkReal(0.0104000000000000))*(x1714))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j11;
vinfos[0].indices[0] = _ij11[0];
vinfos[0].indices[1] = _ij11[1];
vinfos[0].maxsolutions = _nj11;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j12;
vinfos[1].indices[0] = _ij12[0];
vinfos[1].indices[1] = _ij12[1];
vinfos[1].maxsolutions = _nj12;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j13;
vinfos[2].indices[0] = _ij13[0];
vinfos[2].indices[1] = _ij13[1];
vinfos[2].maxsolutions = _nj13;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j14;
vinfos[3].indices[0] = _ij14[0];
vinfos[3].indices[1] = _ij14[1];
vinfos[3].maxsolutions = _nj14;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j15;
vinfos[4].indices[0] = _ij15[0];
vinfos[4].indices[1] = _ij15[1];
vinfos[4].maxsolutions = _nj15;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j16;
vinfos[5].indices[0] = _ij16[0];
vinfos[5].indices[1] = _ij16[1];
vinfos[5].maxsolutions = _nj16;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

} else
{
if( 1 )
{
continue;

} else
{
}
}
}
}

} else
{
{
IkReal j11array[1], cj11array[1], sj11array[1];
bool j11valid[1]={false};
_nj11 = 1;
IkReal x1736=((cj16)*(r00));
IkReal x1737=((cj14)*(cj15));
IkReal x1738=((IkReal(1.00000000000000))*(sj14));
IkReal x1739=((IkReal(1.00000000000000))*(r01)*(sj16));
if( IKabs(((((IKabs(sj12) != 0)?((IkReal)1/(sj12)):(IkReal)1.0e30))*(((((IkReal(-1.00000000000000))*(sj15)*(x1739)))+(((sj15)*(x1736)))+(((IkReal(-1.00000000000000))*(cj15)*(r02))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((x1736)*(x1737)))+(((IkReal(-1.00000000000000))*(cj16)*(r01)*(x1738)))+(((cj14)*(r02)*(sj15)))+(((IkReal(-1.00000000000000))*(x1737)*(x1739)))+(((IkReal(-1.00000000000000))*(r00)*(sj16)*(x1738))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((IKabs(sj12) != 0)?((IkReal)1/(sj12)):(IkReal)1.0e30))*(((((IkReal(-1.00000000000000))*(sj15)*(x1739)))+(((sj15)*(x1736)))+(((IkReal(-1.00000000000000))*(cj15)*(r02)))))))+IKsqr(((((x1736)*(x1737)))+(((IkReal(-1.00000000000000))*(cj16)*(r01)*(x1738)))+(((cj14)*(r02)*(sj15)))+(((IkReal(-1.00000000000000))*(x1737)*(x1739)))+(((IkReal(-1.00000000000000))*(r00)*(sj16)*(x1738)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j11array[0]=IKatan2(((((IKabs(sj12) != 0)?((IkReal)1/(sj12)):(IkReal)1.0e30))*(((((IkReal(-1.00000000000000))*(sj15)*(x1739)))+(((sj15)*(x1736)))+(((IkReal(-1.00000000000000))*(cj15)*(r02)))))), ((((x1736)*(x1737)))+(((IkReal(-1.00000000000000))*(cj16)*(r01)*(x1738)))+(((cj14)*(r02)*(sj15)))+(((IkReal(-1.00000000000000))*(x1737)*(x1739)))+(((IkReal(-1.00000000000000))*(r00)*(sj16)*(x1738)))));
sj11array[0]=IKsin(j11array[0]);
cj11array[0]=IKcos(j11array[0]);
if( j11array[0] > IKPI )
{
    j11array[0]-=IK2PI;
}
else if( j11array[0] < -IKPI )
{    j11array[0]+=IK2PI;
}
j11valid[0] = true;
for(int ij11 = 0; ij11 < 1; ++ij11)
{
if( !j11valid[ij11] )
{
    continue;
}
_ij11[0] = ij11; _ij11[1] = -1;
for(int iij11 = ij11+1; iij11 < 1; ++iij11)
{
if( j11valid[iij11] && IKabs(cj11array[ij11]-cj11array[iij11]) < IKFAST_SOLUTION_THRESH && IKabs(sj11array[ij11]-sj11array[iij11]) < IKFAST_SOLUTION_THRESH )
{
    j11valid[iij11]=false; _ij11[1] = iij11; break; 
}
}
j11 = j11array[ij11]; cj11 = cj11array[ij11]; sj11 = sj11array[ij11];
{
IkReal evalcond[8];
IkReal x1740=IKcos(j11);
IkReal x1741=IKsin(j11);
IkReal x1742=((r12)*(sj15));
IkReal x1743=((IkReal(0.210000000000000))*(sj14));
IkReal x1744=((IkReal(1.00000000000000))*(cj14));
IkReal x1745=((r00)*(sj16));
IkReal x1746=((r10)*(sj16));
IkReal x1747=((cj16)*(r00));
IkReal x1748=((r02)*(sj15));
IkReal x1749=((IkReal(1.00000000000000))*(sj14));
IkReal x1750=((IkReal(0.0159000000000000))*(sj14));
IkReal x1751=((cj16)*(r01));
IkReal x1752=((r01)*(sj16));
IkReal x1753=((IkReal(0.000500000000000000))*(sj15));
IkReal x1754=((cj15)*(r12));
IkReal x1755=((IkReal(0.0159000000000000))*(cj14));
IkReal x1756=((IkReal(1.00000000000000))*(sj15));
IkReal x1757=((IkReal(0.210000000000000))*(cj14));
IkReal x1758=((cj16)*(r11));
IkReal x1759=((cj15)*(r02));
IkReal x1760=((cj16)*(r10));
IkReal x1761=((r11)*(sj16));
IkReal x1762=((IkReal(0.0136000000000000))*(cj15));
IkReal x1763=((cj15)*(x1760));
IkReal x1764=((cj15)*(x1761));
IkReal x1765=((cj12)*(x1741));
IkReal x1766=((cj12)*(x1740));
evalcond[0]=((((sj15)*(x1752)))+(x1759)+(((IkReal(-1.00000000000000))*(x1747)*(x1756)))+(((sj12)*(x1741))));
evalcond[1]=((((IkReal(-1.00000000000000))*(sj12)*(x1740)))+(x1754)+(((IkReal(-1.00000000000000))*(x1756)*(x1760)))+(((sj15)*(x1761))));
evalcond[2]=((((sj14)*(x1764)))+(x1766)+(((IkReal(-1.00000000000000))*(x1744)*(x1758)))+(((IkReal(-1.00000000000000))*(x1744)*(x1746)))+(((IkReal(-1.00000000000000))*(x1742)*(x1749)))+(((IkReal(-1.00000000000000))*(x1749)*(x1763))));
evalcond[3]=((((IkReal(-1.00000000000000))*(cj15)*(x1747)*(x1749)))+(((IkReal(-1.00000000000000))*(x1765)))+(((IkReal(-1.00000000000000))*(x1748)*(x1749)))+(((cj15)*(sj14)*(x1752)))+(((IkReal(-1.00000000000000))*(x1744)*(x1751)))+(((IkReal(-1.00000000000000))*(x1744)*(x1745))));
evalcond[4]=((x1740)+(((sj14)*(x1745)))+(((cj14)*(cj15)*(x1752)))+(((sj14)*(x1751)))+(((IkReal(-1.00000000000000))*(x1744)*(x1748)))+(((IkReal(-1.00000000000000))*(cj15)*(x1744)*(x1747))));
evalcond[5]=((x1741)+(((IkReal(-1.00000000000000))*(x1744)*(x1763)))+(((sj14)*(x1746)))+(((sj14)*(x1758)))+(((cj14)*(x1764)))+(((IkReal(-1.00000000000000))*(x1742)*(x1744))));
evalcond[6]=((((x1752)*(x1753)))+(((IkReal(-1.00000000000000))*(x1747)*(x1762)))+(((IkReal(-1.00000000000000))*(x1748)*(x1755)))+(((IkReal(0.136600000000000))*(x1765)))+(((IkReal(0.000500000000000000))*(x1759)))+(((IkReal(-0.0136000000000000))*(x1748)))+(((IkReal(0.0182200000000000))*(x1752)))+(((x1745)*(x1750)))+(((x1750)*(x1751)))+(((IkReal(-0.354900000000000))*(x1751)))+(((IkReal(-1.00000000000000))*(x1747)*(x1753)))+(((IkReal(-1.00000000000000))*(px)))+(((IkReal(-1.00000000000000))*(x1751)*(x1757)))+(((IkReal(0.0300000000000000))*(x1741)))+(((IkReal(-0.354900000000000))*(x1745)))+(((x1752)*(x1762)))+(((IkReal(-1.00000000000000))*(x1745)*(x1757)))+(((IkReal(0.0104000000000000))*(x1740)))+(((IkReal(-1.00000000000000))*(cj15)*(x1743)*(x1747)))+(((cj15)*(x1743)*(x1752)))+(((IkReal(-0.0182200000000000))*(x1747)))+(((IkReal(-1.00000000000000))*(cj15)*(x1747)*(x1755)))+(((IkReal(-1.00000000000000))*(x1743)*(x1748)))+(((cj15)*(x1752)*(x1755))));
evalcond[7]=((((IkReal(-1.00000000000000))*(x1753)*(x1760)))+(((IkReal(-1.00000000000000))*(x1757)*(x1758)))+(((x1743)*(x1764)))+(((IkReal(0.000500000000000000))*(x1754)))+(((IkReal(-0.0182200000000000))*(x1760)))+(((x1746)*(x1750)))+(((IkReal(-0.0136000000000000))*(x1742)))+(((IkReal(-1.00000000000000))*(x1755)*(x1763)))+(((IkReal(-1.00000000000000))*(x1743)*(x1763)))+(((x1750)*(x1758)))+(((x1755)*(x1764)))+(((IkReal(-0.354900000000000))*(x1758)))+(((IkReal(-1.00000000000000))*(x1746)*(x1757)))+(((IkReal(-1.00000000000000))*(py)))+(((IkReal(-0.354900000000000))*(x1746)))+(((IkReal(-1.00000000000000))*(x1760)*(x1762)))+(((x1753)*(x1761)))+(((IkReal(0.0104000000000000))*(x1741)))+(((IkReal(-0.0300000000000000))*(x1740)))+(((IkReal(-1.00000000000000))*(x1742)*(x1743)))+(((IkReal(0.0182200000000000))*(x1761)))+(((x1761)*(x1762)))+(((IkReal(-0.136600000000000))*(x1766)))+(((IkReal(-1.00000000000000))*(x1742)*(x1755))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  || IKabs(evalcond[6]) > 0.000001  || IKabs(evalcond[7]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j11;
vinfos[0].indices[0] = _ij11[0];
vinfos[0].indices[1] = _ij11[1];
vinfos[0].maxsolutions = _nj11;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j12;
vinfos[1].indices[0] = _ij12[0];
vinfos[1].indices[1] = _ij12[1];
vinfos[1].maxsolutions = _nj12;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j13;
vinfos[2].indices[0] = _ij13[0];
vinfos[2].indices[1] = _ij13[1];
vinfos[2].maxsolutions = _nj13;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j14;
vinfos[3].indices[0] = _ij14[0];
vinfos[3].indices[1] = _ij14[1];
vinfos[3].maxsolutions = _nj14;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j15;
vinfos[4].indices[0] = _ij15[0];
vinfos[4].indices[1] = _ij15[1];
vinfos[4].maxsolutions = _nj15;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j16;
vinfos[5].indices[0] = _ij16[0];
vinfos[5].indices[1] = _ij16[1];
vinfos[5].maxsolutions = _nj16;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j11array[1], cj11array[1], sj11array[1];
bool j11valid[1]={false};
_nj11 = 1;
IkReal x1767=((IkReal(1.00000000000000))*(cj16));
IkReal x1768=((r11)*(sj16));
IkReal x1769=((cj14)*(cj15));
if( IKabs(((((IkReal(-1.00000000000000))*(r11)*(sj14)*(x1767)))+(((cj16)*(r10)*(x1769)))+(((IkReal(-1.00000000000000))*(x1768)*(x1769)))+(((IkReal(-1.00000000000000))*(r10)*(sj14)*(sj16)))+(((cj14)*(r12)*(sj15))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((IKabs(sj12) != 0)?((IkReal)1/(sj12)):(IkReal)1.0e30))*(((((cj15)*(r12)))+(((IkReal(-1.00000000000000))*(r10)*(sj15)*(x1767)))+(((sj15)*(x1768))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((IkReal(-1.00000000000000))*(r11)*(sj14)*(x1767)))+(((cj16)*(r10)*(x1769)))+(((IkReal(-1.00000000000000))*(x1768)*(x1769)))+(((IkReal(-1.00000000000000))*(r10)*(sj14)*(sj16)))+(((cj14)*(r12)*(sj15)))))+IKsqr(((((IKabs(sj12) != 0)?((IkReal)1/(sj12)):(IkReal)1.0e30))*(((((cj15)*(r12)))+(((IkReal(-1.00000000000000))*(r10)*(sj15)*(x1767)))+(((sj15)*(x1768)))))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j11array[0]=IKatan2(((((IkReal(-1.00000000000000))*(r11)*(sj14)*(x1767)))+(((cj16)*(r10)*(x1769)))+(((IkReal(-1.00000000000000))*(x1768)*(x1769)))+(((IkReal(-1.00000000000000))*(r10)*(sj14)*(sj16)))+(((cj14)*(r12)*(sj15)))), ((((IKabs(sj12) != 0)?((IkReal)1/(sj12)):(IkReal)1.0e30))*(((((cj15)*(r12)))+(((IkReal(-1.00000000000000))*(r10)*(sj15)*(x1767)))+(((sj15)*(x1768)))))));
sj11array[0]=IKsin(j11array[0]);
cj11array[0]=IKcos(j11array[0]);
if( j11array[0] > IKPI )
{
    j11array[0]-=IK2PI;
}
else if( j11array[0] < -IKPI )
{    j11array[0]+=IK2PI;
}
j11valid[0] = true;
for(int ij11 = 0; ij11 < 1; ++ij11)
{
if( !j11valid[ij11] )
{
    continue;
}
_ij11[0] = ij11; _ij11[1] = -1;
for(int iij11 = ij11+1; iij11 < 1; ++iij11)
{
if( j11valid[iij11] && IKabs(cj11array[ij11]-cj11array[iij11]) < IKFAST_SOLUTION_THRESH && IKabs(sj11array[ij11]-sj11array[iij11]) < IKFAST_SOLUTION_THRESH )
{
    j11valid[iij11]=false; _ij11[1] = iij11; break; 
}
}
j11 = j11array[ij11]; cj11 = cj11array[ij11]; sj11 = sj11array[ij11];
{
IkReal evalcond[8];
IkReal x1770=IKcos(j11);
IkReal x1771=IKsin(j11);
IkReal x1772=((r12)*(sj15));
IkReal x1773=((IkReal(0.210000000000000))*(sj14));
IkReal x1774=((IkReal(1.00000000000000))*(cj14));
IkReal x1775=((r00)*(sj16));
IkReal x1776=((r10)*(sj16));
IkReal x1777=((cj16)*(r00));
IkReal x1778=((r02)*(sj15));
IkReal x1779=((IkReal(1.00000000000000))*(sj14));
IkReal x1780=((IkReal(0.0159000000000000))*(sj14));
IkReal x1781=((cj16)*(r01));
IkReal x1782=((r01)*(sj16));
IkReal x1783=((IkReal(0.000500000000000000))*(sj15));
IkReal x1784=((cj15)*(r12));
IkReal x1785=((IkReal(0.0159000000000000))*(cj14));
IkReal x1786=((IkReal(1.00000000000000))*(sj15));
IkReal x1787=((IkReal(0.210000000000000))*(cj14));
IkReal x1788=((cj16)*(r11));
IkReal x1789=((cj15)*(r02));
IkReal x1790=((cj16)*(r10));
IkReal x1791=((r11)*(sj16));
IkReal x1792=((IkReal(0.0136000000000000))*(cj15));
IkReal x1793=((cj15)*(x1790));
IkReal x1794=((cj15)*(x1791));
IkReal x1795=((cj12)*(x1771));
IkReal x1796=((cj12)*(x1770));
evalcond[0]=((x1789)+(((IkReal(-1.00000000000000))*(x1777)*(x1786)))+(((sj12)*(x1771)))+(((sj15)*(x1782))));
evalcond[1]=((x1784)+(((sj15)*(x1791)))+(((IkReal(-1.00000000000000))*(sj12)*(x1770)))+(((IkReal(-1.00000000000000))*(x1786)*(x1790))));
evalcond[2]=((((IkReal(-1.00000000000000))*(x1772)*(x1779)))+(((sj14)*(x1794)))+(x1796)+(((IkReal(-1.00000000000000))*(x1774)*(x1788)))+(((IkReal(-1.00000000000000))*(x1779)*(x1793)))+(((IkReal(-1.00000000000000))*(x1774)*(x1776))));
evalcond[3]=((((IkReal(-1.00000000000000))*(x1778)*(x1779)))+(((IkReal(-1.00000000000000))*(x1774)*(x1781)))+(((IkReal(-1.00000000000000))*(cj15)*(x1777)*(x1779)))+(((IkReal(-1.00000000000000))*(x1795)))+(((cj15)*(sj14)*(x1782)))+(((IkReal(-1.00000000000000))*(x1774)*(x1775))));
evalcond[4]=((((sj14)*(x1781)))+(x1770)+(((cj14)*(cj15)*(x1782)))+(((IkReal(-1.00000000000000))*(cj15)*(x1774)*(x1777)))+(((sj14)*(x1775)))+(((IkReal(-1.00000000000000))*(x1774)*(x1778))));
evalcond[5]=((((IkReal(-1.00000000000000))*(x1772)*(x1774)))+(((sj14)*(x1788)))+(((IkReal(-1.00000000000000))*(x1774)*(x1793)))+(x1771)+(((sj14)*(x1776)))+(((cj14)*(x1794))));
evalcond[6]=((((x1782)*(x1783)))+(((IkReal(-0.0182200000000000))*(x1777)))+(((IkReal(0.0104000000000000))*(x1770)))+(((x1782)*(x1792)))+(((IkReal(-0.354900000000000))*(x1781)))+(((x1775)*(x1780)))+(((IkReal(-0.0136000000000000))*(x1778)))+(((cj15)*(x1782)*(x1785)))+(((IkReal(-1.00000000000000))*(x1775)*(x1787)))+(((IkReal(0.0182200000000000))*(x1782)))+(((IkReal(-1.00000000000000))*(x1777)*(x1783)))+(((IkReal(0.0300000000000000))*(x1771)))+(((IkReal(-1.00000000000000))*(x1777)*(x1792)))+(((IkReal(-1.00000000000000))*(px)))+(((IkReal(-1.00000000000000))*(x1773)*(x1778)))+(((IkReal(-0.354900000000000))*(x1775)))+(((IkReal(-1.00000000000000))*(x1778)*(x1785)))+(((IkReal(-1.00000000000000))*(x1781)*(x1787)))+(((IkReal(-1.00000000000000))*(cj15)*(x1773)*(x1777)))+(((x1780)*(x1781)))+(((cj15)*(x1773)*(x1782)))+(((IkReal(-1.00000000000000))*(cj15)*(x1777)*(x1785)))+(((IkReal(0.000500000000000000))*(x1789)))+(((IkReal(0.136600000000000))*(x1795))));
evalcond[7]=((((x1783)*(x1791)))+(((IkReal(0.0104000000000000))*(x1771)))+(((IkReal(-1.00000000000000))*(x1772)*(x1773)))+(((IkReal(-0.354900000000000))*(x1788)))+(((IkReal(-1.00000000000000))*(x1787)*(x1788)))+(((IkReal(-1.00000000000000))*(x1790)*(x1792)))+(((IkReal(-0.0136000000000000))*(x1772)))+(((IkReal(-0.0300000000000000))*(x1770)))+(((IkReal(0.0182200000000000))*(x1791)))+(((IkReal(-0.0182200000000000))*(x1790)))+(((IkReal(-0.136600000000000))*(x1796)))+(((IkReal(-1.00000000000000))*(x1785)*(x1793)))+(((IkReal(-1.00000000000000))*(py)))+(((IkReal(-0.354900000000000))*(x1776)))+(((IkReal(-1.00000000000000))*(x1772)*(x1785)))+(((x1776)*(x1780)))+(((x1785)*(x1794)))+(((x1780)*(x1788)))+(((IkReal(-1.00000000000000))*(x1776)*(x1787)))+(((x1791)*(x1792)))+(((x1773)*(x1794)))+(((IkReal(0.000500000000000000))*(x1784)))+(((IkReal(-1.00000000000000))*(x1783)*(x1790)))+(((IkReal(-1.00000000000000))*(x1773)*(x1793))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  || IKabs(evalcond[6]) > 0.000001  || IKabs(evalcond[7]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j11;
vinfos[0].indices[0] = _ij11[0];
vinfos[0].indices[1] = _ij11[1];
vinfos[0].maxsolutions = _nj11;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j12;
vinfos[1].indices[0] = _ij12[0];
vinfos[1].indices[1] = _ij12[1];
vinfos[1].maxsolutions = _nj12;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j13;
vinfos[2].indices[0] = _ij13[0];
vinfos[2].indices[1] = _ij13[1];
vinfos[2].maxsolutions = _nj13;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j14;
vinfos[3].indices[0] = _ij14[0];
vinfos[3].indices[1] = _ij14[1];
vinfos[3].maxsolutions = _nj14;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j15;
vinfos[4].indices[0] = _ij15[0];
vinfos[4].indices[1] = _ij15[1];
vinfos[4].maxsolutions = _nj15;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j16;
vinfos[5].indices[0] = _ij16[0];
vinfos[5].indices[1] = _ij16[1];
vinfos[5].maxsolutions = _nj16;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j11array[1], cj11array[1], sj11array[1];
bool j11valid[1]={false};
_nj11 = 1;
IkReal x1797=((IkReal(1.00000000000000))*(sj15));
if( IKabs(((gconst12)*(((((IkReal(-1.00000000000000))*(r01)*(sj16)*(x1797)))+(((IkReal(-1.00000000000000))*(cj15)*(r02)))+(((cj16)*(r00)*(sj15))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst12)*(((((cj15)*(r12)))+(((IkReal(-1.00000000000000))*(cj16)*(r10)*(x1797)))+(((r11)*(sj15)*(sj16))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j11array[0]=IKatan2(((gconst12)*(((((IkReal(-1.00000000000000))*(r01)*(sj16)*(x1797)))+(((IkReal(-1.00000000000000))*(cj15)*(r02)))+(((cj16)*(r00)*(sj15)))))), ((gconst12)*(((((cj15)*(r12)))+(((IkReal(-1.00000000000000))*(cj16)*(r10)*(x1797)))+(((r11)*(sj15)*(sj16)))))));
sj11array[0]=IKsin(j11array[0]);
cj11array[0]=IKcos(j11array[0]);
if( j11array[0] > IKPI )
{
    j11array[0]-=IK2PI;
}
else if( j11array[0] < -IKPI )
{    j11array[0]+=IK2PI;
}
j11valid[0] = true;
for(int ij11 = 0; ij11 < 1; ++ij11)
{
if( !j11valid[ij11] )
{
    continue;
}
_ij11[0] = ij11; _ij11[1] = -1;
for(int iij11 = ij11+1; iij11 < 1; ++iij11)
{
if( j11valid[iij11] && IKabs(cj11array[ij11]-cj11array[iij11]) < IKFAST_SOLUTION_THRESH && IKabs(sj11array[ij11]-sj11array[iij11]) < IKFAST_SOLUTION_THRESH )
{
    j11valid[iij11]=false; _ij11[1] = iij11; break; 
}
}
j11 = j11array[ij11]; cj11 = cj11array[ij11]; sj11 = sj11array[ij11];
{
IkReal evalcond[8];
IkReal x1798=IKcos(j11);
IkReal x1799=IKsin(j11);
IkReal x1800=((r12)*(sj15));
IkReal x1801=((IkReal(0.210000000000000))*(sj14));
IkReal x1802=((IkReal(1.00000000000000))*(cj14));
IkReal x1803=((r00)*(sj16));
IkReal x1804=((r10)*(sj16));
IkReal x1805=((cj16)*(r00));
IkReal x1806=((r02)*(sj15));
IkReal x1807=((IkReal(1.00000000000000))*(sj14));
IkReal x1808=((IkReal(0.0159000000000000))*(sj14));
IkReal x1809=((cj16)*(r01));
IkReal x1810=((r01)*(sj16));
IkReal x1811=((IkReal(0.000500000000000000))*(sj15));
IkReal x1812=((cj15)*(r12));
IkReal x1813=((IkReal(0.0159000000000000))*(cj14));
IkReal x1814=((IkReal(1.00000000000000))*(sj15));
IkReal x1815=((IkReal(0.210000000000000))*(cj14));
IkReal x1816=((cj16)*(r11));
IkReal x1817=((cj15)*(r02));
IkReal x1818=((cj16)*(r10));
IkReal x1819=((r11)*(sj16));
IkReal x1820=((IkReal(0.0136000000000000))*(cj15));
IkReal x1821=((cj15)*(x1818));
IkReal x1822=((cj15)*(x1819));
IkReal x1823=((cj12)*(x1799));
IkReal x1824=((cj12)*(x1798));
evalcond[0]=((((sj15)*(x1810)))+(((IkReal(-1.00000000000000))*(x1805)*(x1814)))+(x1817)+(((sj12)*(x1799))));
evalcond[1]=((((sj15)*(x1819)))+(((IkReal(-1.00000000000000))*(sj12)*(x1798)))+(((IkReal(-1.00000000000000))*(x1814)*(x1818)))+(x1812));
evalcond[2]=((((sj14)*(x1822)))+(((IkReal(-1.00000000000000))*(x1802)*(x1804)))+(((IkReal(-1.00000000000000))*(x1800)*(x1807)))+(x1824)+(((IkReal(-1.00000000000000))*(x1807)*(x1821)))+(((IkReal(-1.00000000000000))*(x1802)*(x1816))));
evalcond[3]=((((IkReal(-1.00000000000000))*(x1823)))+(((cj15)*(sj14)*(x1810)))+(((IkReal(-1.00000000000000))*(x1802)*(x1809)))+(((IkReal(-1.00000000000000))*(x1802)*(x1803)))+(((IkReal(-1.00000000000000))*(cj15)*(x1805)*(x1807)))+(((IkReal(-1.00000000000000))*(x1806)*(x1807))));
evalcond[4]=((x1798)+(((cj14)*(cj15)*(x1810)))+(((IkReal(-1.00000000000000))*(x1802)*(x1806)))+(((IkReal(-1.00000000000000))*(cj15)*(x1802)*(x1805)))+(((sj14)*(x1809)))+(((sj14)*(x1803))));
evalcond[5]=((((IkReal(-1.00000000000000))*(x1802)*(x1821)))+(((sj14)*(x1816)))+(x1799)+(((cj14)*(x1822)))+(((IkReal(-1.00000000000000))*(x1800)*(x1802)))+(((sj14)*(x1804))));
evalcond[6]=((((IkReal(0.136600000000000))*(x1823)))+(((IkReal(-1.00000000000000))*(cj15)*(x1805)*(x1813)))+(((cj15)*(x1810)*(x1813)))+(((x1808)*(x1809)))+(((IkReal(-1.00000000000000))*(x1805)*(x1811)))+(((IkReal(-0.354900000000000))*(x1809)))+(((IkReal(-0.354900000000000))*(x1803)))+(((IkReal(-1.00000000000000))*(x1809)*(x1815)))+(((IkReal(-0.0182200000000000))*(x1805)))+(((IkReal(-1.00000000000000))*(x1803)*(x1815)))+(((IkReal(0.0182200000000000))*(x1810)))+(((IkReal(-0.0136000000000000))*(x1806)))+(((IkReal(-1.00000000000000))*(x1801)*(x1806)))+(((x1803)*(x1808)))+(((IkReal(-1.00000000000000))*(px)))+(((IkReal(-1.00000000000000))*(cj15)*(x1801)*(x1805)))+(((x1810)*(x1820)))+(((IkReal(0.0104000000000000))*(x1798)))+(((IkReal(-1.00000000000000))*(x1806)*(x1813)))+(((IkReal(-1.00000000000000))*(x1805)*(x1820)))+(((IkReal(0.000500000000000000))*(x1817)))+(((IkReal(0.0300000000000000))*(x1799)))+(((x1810)*(x1811)))+(((cj15)*(x1801)*(x1810))));
evalcond[7]=((((IkReal(-1.00000000000000))*(x1804)*(x1815)))+(((x1819)*(x1820)))+(((IkReal(-1.00000000000000))*(x1801)*(x1821)))+(((IkReal(-0.354900000000000))*(x1804)))+(((IkReal(-1.00000000000000))*(x1813)*(x1821)))+(((IkReal(-1.00000000000000))*(x1811)*(x1818)))+(((IkReal(-1.00000000000000))*(x1818)*(x1820)))+(((x1801)*(x1822)))+(((IkReal(0.0182200000000000))*(x1819)))+(((IkReal(-0.0136000000000000))*(x1800)))+(((IkReal(-1.00000000000000))*(py)))+(((IkReal(-1.00000000000000))*(x1800)*(x1801)))+(((x1808)*(x1816)))+(((IkReal(-0.354900000000000))*(x1816)))+(((IkReal(-0.0182200000000000))*(x1818)))+(((IkReal(-1.00000000000000))*(x1815)*(x1816)))+(((IkReal(0.0104000000000000))*(x1799)))+(((IkReal(-1.00000000000000))*(x1800)*(x1813)))+(((IkReal(-0.136600000000000))*(x1824)))+(((IkReal(0.000500000000000000))*(x1812)))+(((x1811)*(x1819)))+(((IkReal(-0.0300000000000000))*(x1798)))+(((x1804)*(x1808)))+(((x1813)*(x1822))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  || IKabs(evalcond[6]) > 0.000001  || IKabs(evalcond[7]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j11;
vinfos[0].indices[0] = _ij11[0];
vinfos[0].indices[1] = _ij11[1];
vinfos[0].maxsolutions = _nj11;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j12;
vinfos[1].indices[0] = _ij12[0];
vinfos[1].indices[1] = _ij12[1];
vinfos[1].maxsolutions = _nj12;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j13;
vinfos[2].indices[0] = _ij13[0];
vinfos[2].indices[1] = _ij13[1];
vinfos[2].maxsolutions = _nj13;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j14;
vinfos[3].indices[0] = _ij14[0];
vinfos[3].indices[1] = _ij14[1];
vinfos[3].maxsolutions = _nj14;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j15;
vinfos[4].indices[0] = _ij15[0];
vinfos[4].indices[1] = _ij15[1];
vinfos[4].maxsolutions = _nj15;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j16;
vinfos[5].indices[0] = _ij16[0];
vinfos[5].indices[1] = _ij16[1];
vinfos[5].maxsolutions = _nj16;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
IkReal x1825=((r22)*(sj15));
IkReal x1826=((IkReal(0.0159000000000000))*(cj14));
IkReal x1827=((cj16)*(r21));
IkReal x1828=((IkReal(0.210000000000000))*(cj14));
IkReal x1829=((r21)*(sj16));
IkReal x1830=((IkReal(0.000500000000000000))*(sj15));
IkReal x1831=((IkReal(1.00000000000000))*(cj14));
IkReal x1832=((cj15)*(r22));
IkReal x1833=((r20)*(sj16));
IkReal x1834=((cj16)*(r20));
IkReal x1835=((IkReal(0.210000000000000))*(sj14));
IkReal x1836=((sj14)*(x1825));
IkReal x1837=((cj15)*(x1829));
IkReal x1838=((sj14)*(x1833));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(j13, IkReal(6.28318530717959))));
evalcond[1]=((cj12)+(((IkReal(-1.00000000000000))*(sj15)*(x1834)))+(x1832)+(((sj15)*(x1829))));
evalcond[2]=((((IkReal(-1.00000000000000))*(x1836)))+(((IkReal(-1.00000000000000))*(cj15)*(sj14)*(x1834)))+(((IkReal(-1.00000000000000))*(sj12)))+(((IkReal(-1.00000000000000))*(x1827)*(x1831)))+(((sj14)*(x1837)))+(((IkReal(-1.00000000000000))*(x1831)*(x1833))));
evalcond[3]=((((cj14)*(x1837)))+(((sj14)*(x1827)))+(((IkReal(-1.00000000000000))*(x1825)*(x1831)))+(((IkReal(-1.00000000000000))*(cj15)*(x1831)*(x1834)))+(x1838));
evalcond[4]=((((IkReal(-1.00000000000000))*(cj15)*(x1834)*(x1835)))+(((IkReal(0.0159000000000000))*(sj14)*(x1827)))+(((IkReal(-1.00000000000000))*(cj15)*(x1826)*(x1834)))+(((x1826)*(x1837)))+(((IkReal(0.136600000000000))*(sj12)))+(((IkReal(0.0182200000000000))*(x1829)))+(((IkReal(-1.00000000000000))*(x1825)*(x1835)))+(((x1829)*(x1830)))+(((x1835)*(x1837)))+(((IkReal(-1.00000000000000))*(x1828)*(x1833)))+(((IkReal(-0.0136000000000000))*(x1825)))+(((IkReal(-0.0136000000000000))*(cj15)*(x1834)))+(((IkReal(-0.0182200000000000))*(x1834)))+(((IkReal(-0.354900000000000))*(x1833)))+(((IkReal(-1.00000000000000))*(pz)))+(((IkReal(-1.00000000000000))*(x1825)*(x1826)))+(((IkReal(-1.00000000000000))*(x1827)*(x1828)))+(((IkReal(-0.354900000000000))*(x1827)))+(((IkReal(0.000500000000000000))*(x1832)))+(((IkReal(0.0159000000000000))*(x1838)))+(((IkReal(0.0136000000000000))*(x1837)))+(((IkReal(-1.00000000000000))*(x1830)*(x1834))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst13;
gconst13=IKsign(sj12);
dummyeval[0]=sj12;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
dummyeval[0]=sj12;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
dummyeval[0]=sj12;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal evalcond[7];
IkReal x1839=((cj14)*(sj16));
IkReal x1840=((IkReal(0.210000000000000))*(r20));
IkReal x1841=((r22)*(sj15));
IkReal x1842=((IkReal(0.0159000000000000))*(cj14));
IkReal x1843=((cj15)*(r21));
IkReal x1844=((cj16)*(r21));
IkReal x1845=((r21)*(sj16));
IkReal x1846=((IkReal(0.000500000000000000))*(sj15));
IkReal x1847=((IkReal(1.00000000000000))*(cj14));
IkReal x1848=((cj15)*(r22));
IkReal x1849=((IkReal(1.00000000000000))*(r20));
IkReal x1850=((cj16)*(r20));
IkReal x1851=((sj15)*(sj16));
IkReal x1852=((sj14)*(sj16));
IkReal x1853=((sj14)*(x1841));
IkReal x1854=((r20)*(x1852));
IkReal x1855=((IkReal(1.00000000000000))*(cj16)*(sj15));
IkReal x1856=((cj15)*(cj16)*(sj14));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(3.14159265358979))+(j12)), IkReal(6.28318530717959))));
evalcond[1]=((IkReal(1.00000000000000))+(((sj15)*(x1845)))+(((IkReal(-1.00000000000000))*(cj16)*(sj15)*(x1849)))+(x1848));
evalcond[2]=((((cj15)*(r02)))+(((r01)*(x1851)))+(((IkReal(-1.00000000000000))*(r00)*(x1855))));
evalcond[3]=((((cj15)*(r12)))+(((r11)*(x1851)))+(((IkReal(-1.00000000000000))*(r10)*(x1855))));
evalcond[4]=((((x1843)*(x1852)))+(((IkReal(-1.00000000000000))*(x1849)*(x1856)))+(((IkReal(-1.00000000000000))*(x1839)*(x1849)))+(((IkReal(-1.00000000000000))*(x1853)))+(((IkReal(-1.00000000000000))*(x1844)*(x1847))));
evalcond[5]=((((IkReal(-1.00000000000000))*(x1841)*(x1847)))+(((IkReal(-1.00000000000000))*(cj15)*(x1847)*(x1850)))+(((x1839)*(x1843)))+(x1854)+(((sj14)*(x1844))));
evalcond[6]=((((IkReal(-1.00000000000000))*(x1840)*(x1856)))+(((IkReal(-0.210000000000000))*(x1853)))+(((IkReal(-0.0136000000000000))*(x1841)))+(((IkReal(0.210000000000000))*(x1843)*(x1852)))+(((IkReal(-1.00000000000000))*(x1841)*(x1842)))+(((IkReal(-0.354900000000000))*(r20)*(sj16)))+(((x1845)*(x1846)))+(((IkReal(-0.0136000000000000))*(cj15)*(x1850)))+(((IkReal(-1.00000000000000))*(x1839)*(x1840)))+(((IkReal(0.0136000000000000))*(sj16)*(x1843)))+(((IkReal(-0.0182200000000000))*(x1850)))+(((IkReal(0.0159000000000000))*(x1854)))+(((IkReal(-1.00000000000000))*(pz)))+(((IkReal(0.0159000000000000))*(x1839)*(x1843)))+(((IkReal(-0.354900000000000))*(x1844)))+(((IkReal(-0.210000000000000))*(cj14)*(x1844)))+(((IkReal(0.0182200000000000))*(x1845)))+(((IkReal(-1.00000000000000))*(cj15)*(x1842)*(x1850)))+(((IkReal(0.000500000000000000))*(x1848)))+(((IkReal(-1.00000000000000))*(x1846)*(x1850)))+(((IkReal(0.0159000000000000))*(sj14)*(x1844))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  )
{
{
IkReal j11array[1], cj11array[1], sj11array[1];
bool j11valid[1]={false};
_nj11 = 1;
IkReal x1857=((cj15)*(sj14));
IkReal x1858=((cj16)*(r10));
IkReal x1859=((IkReal(1.00000000000000))*(cj14));
IkReal x1860=((r12)*(sj15));
IkReal x1861=((cj14)*(r11));
IkReal x1862=((r10)*(sj16));
if( IKabs(((((sj14)*(x1862)))+(((cj16)*(r11)*(sj14)))+(((IkReal(-1.00000000000000))*(cj15)*(x1858)*(x1859)))+(((IkReal(-1.00000000000000))*(x1859)*(x1860)))+(((cj15)*(sj16)*(x1861))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((cj16)*(x1861)))+(((sj14)*(x1860)))+(((x1857)*(x1858)))+(((cj14)*(x1862)))+(((IkReal(-1.00000000000000))*(r11)*(sj16)*(x1857))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((sj14)*(x1862)))+(((cj16)*(r11)*(sj14)))+(((IkReal(-1.00000000000000))*(cj15)*(x1858)*(x1859)))+(((IkReal(-1.00000000000000))*(x1859)*(x1860)))+(((cj15)*(sj16)*(x1861)))))+IKsqr(((((cj16)*(x1861)))+(((sj14)*(x1860)))+(((x1857)*(x1858)))+(((cj14)*(x1862)))+(((IkReal(-1.00000000000000))*(r11)*(sj16)*(x1857)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j11array[0]=IKatan2(((((sj14)*(x1862)))+(((cj16)*(r11)*(sj14)))+(((IkReal(-1.00000000000000))*(cj15)*(x1858)*(x1859)))+(((IkReal(-1.00000000000000))*(x1859)*(x1860)))+(((cj15)*(sj16)*(x1861)))), ((((cj16)*(x1861)))+(((sj14)*(x1860)))+(((x1857)*(x1858)))+(((cj14)*(x1862)))+(((IkReal(-1.00000000000000))*(r11)*(sj16)*(x1857)))));
sj11array[0]=IKsin(j11array[0]);
cj11array[0]=IKcos(j11array[0]);
if( j11array[0] > IKPI )
{
    j11array[0]-=IK2PI;
}
else if( j11array[0] < -IKPI )
{    j11array[0]+=IK2PI;
}
j11valid[0] = true;
for(int ij11 = 0; ij11 < 1; ++ij11)
{
if( !j11valid[ij11] )
{
    continue;
}
_ij11[0] = ij11; _ij11[1] = -1;
for(int iij11 = ij11+1; iij11 < 1; ++iij11)
{
if( j11valid[iij11] && IKabs(cj11array[ij11]-cj11array[iij11]) < IKFAST_SOLUTION_THRESH && IKabs(sj11array[ij11]-sj11array[iij11]) < IKFAST_SOLUTION_THRESH )
{
    j11valid[iij11]=false; _ij11[1] = iij11; break; 
}
}
j11 = j11array[ij11]; cj11 = cj11array[ij11]; sj11 = sj11array[ij11];
{
IkReal evalcond[6];
IkReal x1863=IKcos(j11);
IkReal x1864=IKsin(j11);
IkReal x1865=((r12)*(sj15));
IkReal x1866=((IkReal(0.210000000000000))*(sj14));
IkReal x1867=((IkReal(1.00000000000000))*(cj14));
IkReal x1868=((r00)*(sj16));
IkReal x1869=((IkReal(0.354900000000000))*(cj16));
IkReal x1870=((r10)*(sj16));
IkReal x1871=((cj16)*(r00));
IkReal x1872=((r02)*(sj15));
IkReal x1873=((IkReal(1.00000000000000))*(sj14));
IkReal x1874=((IkReal(0.000500000000000000))*(sj15));
IkReal x1875=((r01)*(sj16));
IkReal x1876=((IkReal(0.000500000000000000))*(cj15));
IkReal x1877=((IkReal(0.0159000000000000))*(cj14));
IkReal x1878=((IkReal(0.0159000000000000))*(sj14));
IkReal x1879=((cj16)*(r01));
IkReal x1880=((cj16)*(r11));
IkReal x1881=((IkReal(0.210000000000000))*(cj14));
IkReal x1882=((r11)*(sj16));
IkReal x1883=((cj16)*(r10));
IkReal x1884=((IkReal(0.0136000000000000))*(cj15));
IkReal x1885=((IkReal(1.00000000000000))*(x1864));
IkReal x1886=((cj15)*(x1883));
IkReal x1887=((cj15)*(x1882));
evalcond[0]=((((IkReal(-1.00000000000000))*(x1873)*(x1886)))+(((sj14)*(x1887)))+(((IkReal(-1.00000000000000))*(x1867)*(x1870)))+(x1863)+(((IkReal(-1.00000000000000))*(x1865)*(x1873)))+(((IkReal(-1.00000000000000))*(x1867)*(x1880))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x1872)*(x1873)))+(((IkReal(-1.00000000000000))*(cj15)*(x1871)*(x1873)))+(((IkReal(-1.00000000000000))*(x1867)*(x1868)))+(((cj15)*(sj14)*(x1875)))+(((IkReal(-1.00000000000000))*(x1867)*(x1879)))+(((IkReal(-1.00000000000000))*(x1885))));
evalcond[2]=((((cj14)*(cj15)*(x1875)))+(((sj14)*(x1868)))+(((IkReal(-1.00000000000000))*(x1867)*(x1872)))+(((IkReal(-1.00000000000000))*(x1863)))+(((sj14)*(x1879)))+(((IkReal(-1.00000000000000))*(cj15)*(x1867)*(x1871))));
evalcond[3]=((((sj14)*(x1880)))+(((IkReal(-1.00000000000000))*(x1865)*(x1867)))+(((cj14)*(x1887)))+(((IkReal(-1.00000000000000))*(x1885)))+(((IkReal(-1.00000000000000))*(x1867)*(x1886)))+(((sj14)*(x1870))));
evalcond[4]=((((IkReal(-1.00000000000000))*(x1879)*(x1881)))+(((IkReal(-1.00000000000000))*(x1872)*(x1877)))+(((IkReal(-1.00000000000000))*(cj15)*(x1871)*(x1877)))+(((r02)*(x1876)))+(((IkReal(-1.00000000000000))*(x1868)*(x1881)))+(((x1874)*(x1875)))+(((IkReal(-0.0136000000000000))*(x1872)))+(((cj15)*(x1875)*(x1877)))+(((x1875)*(x1884)))+(((IkReal(-1.00000000000000))*(x1866)*(x1872)))+(((IkReal(-1.00000000000000))*(x1871)*(x1884)))+(((IkReal(-0.0182200000000000))*(x1871)))+(((IkReal(-1.00000000000000))*(px)))+(((IkReal(0.0182200000000000))*(x1875)))+(((IkReal(-0.354900000000000))*(x1868)))+(((IkReal(-1.00000000000000))*(r01)*(x1869)))+(((IkReal(-1.00000000000000))*(x1871)*(x1874)))+(((IkReal(0.166600000000000))*(x1864)))+(((x1868)*(x1878)))+(((IkReal(-1.00000000000000))*(cj15)*(x1866)*(x1871)))+(((x1878)*(x1879)))+(((cj15)*(x1866)*(x1875)))+(((IkReal(0.0104000000000000))*(x1863))));
evalcond[5]=((((x1877)*(x1887)))+(((x1874)*(x1882)))+(((IkReal(-1.00000000000000))*(x1880)*(x1881)))+(((IkReal(-1.00000000000000))*(x1883)*(x1884)))+(((x1882)*(x1884)))+(((IkReal(-1.00000000000000))*(x1870)*(x1881)))+(((x1878)*(x1880)))+(((IkReal(-1.00000000000000))*(x1865)*(x1866)))+(((IkReal(-0.0136000000000000))*(x1865)))+(((IkReal(-1.00000000000000))*(r11)*(x1869)))+(((IkReal(-0.354900000000000))*(x1870)))+(((IkReal(-1.00000000000000))*(py)))+(((x1866)*(x1887)))+(((IkReal(0.0182200000000000))*(x1882)))+(((IkReal(-0.166600000000000))*(x1863)))+(((IkReal(-1.00000000000000))*(x1865)*(x1877)))+(((r12)*(x1876)))+(((x1870)*(x1878)))+(((IkReal(0.0104000000000000))*(x1864)))+(((IkReal(-1.00000000000000))*(x1877)*(x1886)))+(((IkReal(-0.0182200000000000))*(x1883)))+(((IkReal(-1.00000000000000))*(x1874)*(x1883)))+(((IkReal(-1.00000000000000))*(x1866)*(x1886))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j11;
vinfos[0].indices[0] = _ij11[0];
vinfos[0].indices[1] = _ij11[1];
vinfos[0].maxsolutions = _nj11;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j12;
vinfos[1].indices[0] = _ij12[0];
vinfos[1].indices[1] = _ij12[1];
vinfos[1].maxsolutions = _nj12;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j13;
vinfos[2].indices[0] = _ij13[0];
vinfos[2].indices[1] = _ij13[1];
vinfos[2].maxsolutions = _nj13;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j14;
vinfos[3].indices[0] = _ij14[0];
vinfos[3].indices[1] = _ij14[1];
vinfos[3].maxsolutions = _nj14;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j15;
vinfos[4].indices[0] = _ij15[0];
vinfos[4].indices[1] = _ij15[1];
vinfos[4].maxsolutions = _nj15;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j16;
vinfos[5].indices[0] = _ij16[0];
vinfos[5].indices[1] = _ij16[1];
vinfos[5].maxsolutions = _nj16;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

} else
{
IkReal x1888=((cj14)*(sj16));
IkReal x1889=((IkReal(0.210000000000000))*(r20));
IkReal x1890=((r22)*(sj15));
IkReal x1891=((IkReal(0.0159000000000000))*(cj14));
IkReal x1892=((cj15)*(r21));
IkReal x1893=((cj16)*(r21));
IkReal x1894=((r21)*(sj16));
IkReal x1895=((IkReal(0.000500000000000000))*(sj15));
IkReal x1896=((IkReal(1.00000000000000))*(cj14));
IkReal x1897=((cj15)*(r22));
IkReal x1898=((IkReal(1.00000000000000))*(r20));
IkReal x1899=((cj16)*(r20));
IkReal x1900=((sj15)*(sj16));
IkReal x1901=((sj14)*(sj16));
IkReal x1902=((sj14)*(x1890));
IkReal x1903=((r20)*(x1901));
IkReal x1904=((IkReal(1.00000000000000))*(cj16)*(sj15));
IkReal x1905=((cj15)*(cj16)*(sj14));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(j12, IkReal(6.28318530717959))));
evalcond[1]=((IkReal(-1.00000000000000))+(((sj15)*(x1894)))+(((IkReal(-1.00000000000000))*(cj16)*(sj15)*(x1898)))+(x1897));
evalcond[2]=((((cj15)*(r02)))+(((r01)*(x1900)))+(((IkReal(-1.00000000000000))*(r00)*(x1904))));
evalcond[3]=((((cj15)*(r12)))+(((IkReal(-1.00000000000000))*(r10)*(x1904)))+(((r11)*(x1900))));
evalcond[4]=((((IkReal(-1.00000000000000))*(x1893)*(x1896)))+(((x1892)*(x1901)))+(((IkReal(-1.00000000000000))*(x1898)*(x1905)))+(((IkReal(-1.00000000000000))*(x1888)*(x1898)))+(((IkReal(-1.00000000000000))*(x1902))));
evalcond[5]=((((sj14)*(x1893)))+(((IkReal(-1.00000000000000))*(cj15)*(x1896)*(x1899)))+(((x1888)*(x1892)))+(((IkReal(-1.00000000000000))*(x1890)*(x1896)))+(x1903));
evalcond[6]=((((IkReal(-0.0136000000000000))*(x1890)))+(((IkReal(-0.210000000000000))*(x1902)))+(((IkReal(0.0136000000000000))*(sj16)*(x1892)))+(((IkReal(-0.354900000000000))*(r20)*(sj16)))+(((IkReal(-1.00000000000000))*(x1889)*(x1905)))+(((IkReal(0.0159000000000000))*(x1903)))+(((IkReal(-1.00000000000000))*(x1888)*(x1889)))+(((IkReal(-0.210000000000000))*(cj14)*(x1893)))+(((IkReal(-1.00000000000000))*(x1890)*(x1891)))+(((IkReal(0.0159000000000000))*(x1888)*(x1892)))+(((IkReal(-1.00000000000000))*(pz)))+(((IkReal(-1.00000000000000))*(x1895)*(x1899)))+(((IkReal(-0.0136000000000000))*(cj15)*(x1899)))+(((IkReal(0.210000000000000))*(x1892)*(x1901)))+(((IkReal(0.0182200000000000))*(x1894)))+(((IkReal(-1.00000000000000))*(cj15)*(x1891)*(x1899)))+(((IkReal(-0.354900000000000))*(x1893)))+(((IkReal(-0.0182200000000000))*(x1899)))+(((x1894)*(x1895)))+(((IkReal(0.0159000000000000))*(sj14)*(x1893)))+(((IkReal(0.000500000000000000))*(x1897))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  )
{
{
IkReal j11array[1], cj11array[1], sj11array[1];
bool j11valid[1]={false};
_nj11 = 1;
IkReal x1906=((cj16)*(r01));
IkReal x1907=((cj15)*(sj14));
IkReal x1908=((r01)*(sj16));
IkReal x1909=((cj16)*(r00));
IkReal x1910=((r00)*(sj16));
IkReal x1911=((r02)*(sj15));
IkReal x1912=((IkReal(1.00000000000000))*(cj14));
if( IKabs(((((sj14)*(x1911)))+(((cj14)*(x1906)))+(((cj14)*(x1910)))+(((IkReal(-1.00000000000000))*(x1907)*(x1908)))+(((x1907)*(x1909))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((sj14)*(x1906)))+(((IkReal(-1.00000000000000))*(x1911)*(x1912)))+(((sj14)*(x1910)))+(((cj14)*(cj15)*(x1908)))+(((IkReal(-1.00000000000000))*(cj15)*(x1909)*(x1912))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((sj14)*(x1911)))+(((cj14)*(x1906)))+(((cj14)*(x1910)))+(((IkReal(-1.00000000000000))*(x1907)*(x1908)))+(((x1907)*(x1909)))))+IKsqr(((((sj14)*(x1906)))+(((IkReal(-1.00000000000000))*(x1911)*(x1912)))+(((sj14)*(x1910)))+(((cj14)*(cj15)*(x1908)))+(((IkReal(-1.00000000000000))*(cj15)*(x1909)*(x1912)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j11array[0]=IKatan2(((((sj14)*(x1911)))+(((cj14)*(x1906)))+(((cj14)*(x1910)))+(((IkReal(-1.00000000000000))*(x1907)*(x1908)))+(((x1907)*(x1909)))), ((((sj14)*(x1906)))+(((IkReal(-1.00000000000000))*(x1911)*(x1912)))+(((sj14)*(x1910)))+(((cj14)*(cj15)*(x1908)))+(((IkReal(-1.00000000000000))*(cj15)*(x1909)*(x1912)))));
sj11array[0]=IKsin(j11array[0]);
cj11array[0]=IKcos(j11array[0]);
if( j11array[0] > IKPI )
{
    j11array[0]-=IK2PI;
}
else if( j11array[0] < -IKPI )
{    j11array[0]+=IK2PI;
}
j11valid[0] = true;
for(int ij11 = 0; ij11 < 1; ++ij11)
{
if( !j11valid[ij11] )
{
    continue;
}
_ij11[0] = ij11; _ij11[1] = -1;
for(int iij11 = ij11+1; iij11 < 1; ++iij11)
{
if( j11valid[iij11] && IKabs(cj11array[ij11]-cj11array[iij11]) < IKFAST_SOLUTION_THRESH && IKabs(sj11array[ij11]-sj11array[iij11]) < IKFAST_SOLUTION_THRESH )
{
    j11valid[iij11]=false; _ij11[1] = iij11; break; 
}
}
j11 = j11array[ij11]; cj11 = cj11array[ij11]; sj11 = sj11array[ij11];
{
IkReal evalcond[6];
IkReal x1913=IKsin(j11);
IkReal x1914=IKcos(j11);
IkReal x1915=((r12)*(sj15));
IkReal x1916=((IkReal(0.210000000000000))*(sj14));
IkReal x1917=((IkReal(1.00000000000000))*(cj14));
IkReal x1918=((r00)*(sj16));
IkReal x1919=((r10)*(sj16));
IkReal x1920=((cj16)*(r00));
IkReal x1921=((r02)*(sj15));
IkReal x1922=((IkReal(1.00000000000000))*(sj14));
IkReal x1923=((cj16)*(r01));
IkReal x1924=((r01)*(sj16));
IkReal x1925=((IkReal(0.000500000000000000))*(sj15));
IkReal x1926=((IkReal(0.000500000000000000))*(cj15));
IkReal x1927=((IkReal(0.0159000000000000))*(cj14));
IkReal x1928=((IkReal(0.210000000000000))*(cj14));
IkReal x1929=((IkReal(0.0159000000000000))*(sj14));
IkReal x1930=((cj16)*(r11));
IkReal x1931=((r11)*(sj16));
IkReal x1932=((cj16)*(r10));
IkReal x1933=((IkReal(0.0136000000000000))*(cj15));
IkReal x1934=((IkReal(1.00000000000000))*(x1914));
IkReal x1935=((cj15)*(x1932));
IkReal x1936=((cj15)*(x1931));
evalcond[0]=((((IkReal(-1.00000000000000))*(x1917)*(x1919)))+(((IkReal(-1.00000000000000))*(x1915)*(x1922)))+(((IkReal(-1.00000000000000))*(x1922)*(x1935)))+(((sj14)*(x1936)))+(((IkReal(-1.00000000000000))*(x1917)*(x1930)))+(((IkReal(-1.00000000000000))*(x1934))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x1917)*(x1918)))+(((IkReal(-1.00000000000000))*(x1917)*(x1923)))+(((IkReal(-1.00000000000000))*(cj15)*(x1920)*(x1922)))+(((cj15)*(sj14)*(x1924)))+(x1913)+(((IkReal(-1.00000000000000))*(x1921)*(x1922))));
evalcond[2]=((((sj14)*(x1918)))+(((IkReal(-1.00000000000000))*(x1917)*(x1921)))+(((IkReal(-1.00000000000000))*(cj15)*(x1917)*(x1920)))+(((sj14)*(x1923)))+(((cj14)*(cj15)*(x1924)))+(((IkReal(-1.00000000000000))*(x1934))));
evalcond[3]=((((sj14)*(x1919)))+(((cj14)*(x1936)))+(((IkReal(-1.00000000000000))*(x1913)))+(((IkReal(-1.00000000000000))*(x1915)*(x1917)))+(((sj14)*(x1930)))+(((IkReal(-1.00000000000000))*(x1917)*(x1935))));
evalcond[4]=((((IkReal(-0.354900000000000))*(x1923)))+(((IkReal(-0.0182200000000000))*(x1920)))+(((IkReal(-1.00000000000000))*(x1920)*(x1933)))+(((IkReal(-1.00000000000000))*(x1918)*(x1928)))+(((IkReal(-1.00000000000000))*(x1916)*(x1921)))+(((x1918)*(x1929)))+(((IkReal(0.0182200000000000))*(x1924)))+(((cj15)*(x1916)*(x1924)))+(((IkReal(-1.00000000000000))*(cj15)*(x1920)*(x1927)))+(((IkReal(0.0104000000000000))*(x1914)))+(((IkReal(-1.00000000000000))*(cj15)*(x1916)*(x1920)))+(((x1924)*(x1933)))+(((IkReal(-1.00000000000000))*(px)))+(((r02)*(x1926)))+(((x1923)*(x1929)))+(((IkReal(-0.106600000000000))*(x1913)))+(((IkReal(-0.0136000000000000))*(x1921)))+(((IkReal(-1.00000000000000))*(x1921)*(x1927)))+(((IkReal(-0.354900000000000))*(x1918)))+(((IkReal(-1.00000000000000))*(x1923)*(x1928)))+(((cj15)*(x1924)*(x1927)))+(((IkReal(-1.00000000000000))*(x1920)*(x1925)))+(((x1924)*(x1925))));
evalcond[5]=((((IkReal(-1.00000000000000))*(x1928)*(x1930)))+(((IkReal(0.0182200000000000))*(x1931)))+(((x1916)*(x1936)))+(((IkReal(-1.00000000000000))*(x1915)*(x1927)))+(((x1931)*(x1933)))+(((IkReal(0.0104000000000000))*(x1913)))+(((x1925)*(x1931)))+(((IkReal(-1.00000000000000))*(x1925)*(x1932)))+(((IkReal(-1.00000000000000))*(py)))+(((IkReal(-1.00000000000000))*(x1915)*(x1916)))+(((IkReal(-1.00000000000000))*(x1932)*(x1933)))+(((IkReal(-1.00000000000000))*(x1919)*(x1928)))+(((IkReal(-0.354900000000000))*(x1930)))+(((IkReal(-0.0182200000000000))*(x1932)))+(((x1929)*(x1930)))+(((x1919)*(x1929)))+(((IkReal(-0.354900000000000))*(x1919)))+(((IkReal(0.106600000000000))*(x1914)))+(((x1927)*(x1936)))+(((r12)*(x1926)))+(((IkReal(-1.00000000000000))*(x1927)*(x1935)))+(((IkReal(-0.0136000000000000))*(x1915)))+(((IkReal(-1.00000000000000))*(x1916)*(x1935))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j11;
vinfos[0].indices[0] = _ij11[0];
vinfos[0].indices[1] = _ij11[1];
vinfos[0].maxsolutions = _nj11;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j12;
vinfos[1].indices[0] = _ij12[0];
vinfos[1].indices[1] = _ij12[1];
vinfos[1].maxsolutions = _nj12;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j13;
vinfos[2].indices[0] = _ij13[0];
vinfos[2].indices[1] = _ij13[1];
vinfos[2].maxsolutions = _nj13;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j14;
vinfos[3].indices[0] = _ij14[0];
vinfos[3].indices[1] = _ij14[1];
vinfos[3].maxsolutions = _nj14;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j15;
vinfos[4].indices[0] = _ij15[0];
vinfos[4].indices[1] = _ij15[1];
vinfos[4].maxsolutions = _nj15;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j16;
vinfos[5].indices[0] = _ij16[0];
vinfos[5].indices[1] = _ij16[1];
vinfos[5].maxsolutions = _nj16;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

} else
{
if( 1 )
{
continue;

} else
{
}
}
}
}

} else
{
{
IkReal j11array[1], cj11array[1], sj11array[1];
bool j11valid[1]={false};
_nj11 = 1;
IkReal x1937=((IkReal(1.00000000000000))*(sj15));
IkReal x1938=((r11)*(sj16));
IkReal x1939=((cj14)*(cj15));
IkReal x1940=((cj16)*(r10));
if( IKabs(((((IkReal(-1.00000000000000))*(cj14)*(r12)*(x1937)))+(((cj16)*(r11)*(sj14)))+(((r10)*(sj14)*(sj16)))+(((IkReal(-1.00000000000000))*(x1939)*(x1940)))+(((x1938)*(x1939))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((IKabs(sj12) != 0)?((IkReal)1/(sj12)):(IkReal)1.0e30))*(((((IkReal(-1.00000000000000))*(x1937)*(x1938)))+(((IkReal(-1.00000000000000))*(cj15)*(r12)))+(((sj15)*(x1940))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((IkReal(-1.00000000000000))*(cj14)*(r12)*(x1937)))+(((cj16)*(r11)*(sj14)))+(((r10)*(sj14)*(sj16)))+(((IkReal(-1.00000000000000))*(x1939)*(x1940)))+(((x1938)*(x1939)))))+IKsqr(((((IKabs(sj12) != 0)?((IkReal)1/(sj12)):(IkReal)1.0e30))*(((((IkReal(-1.00000000000000))*(x1937)*(x1938)))+(((IkReal(-1.00000000000000))*(cj15)*(r12)))+(((sj15)*(x1940)))))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j11array[0]=IKatan2(((((IkReal(-1.00000000000000))*(cj14)*(r12)*(x1937)))+(((cj16)*(r11)*(sj14)))+(((r10)*(sj14)*(sj16)))+(((IkReal(-1.00000000000000))*(x1939)*(x1940)))+(((x1938)*(x1939)))), ((((IKabs(sj12) != 0)?((IkReal)1/(sj12)):(IkReal)1.0e30))*(((((IkReal(-1.00000000000000))*(x1937)*(x1938)))+(((IkReal(-1.00000000000000))*(cj15)*(r12)))+(((sj15)*(x1940)))))));
sj11array[0]=IKsin(j11array[0]);
cj11array[0]=IKcos(j11array[0]);
if( j11array[0] > IKPI )
{
    j11array[0]-=IK2PI;
}
else if( j11array[0] < -IKPI )
{    j11array[0]+=IK2PI;
}
j11valid[0] = true;
for(int ij11 = 0; ij11 < 1; ++ij11)
{
if( !j11valid[ij11] )
{
    continue;
}
_ij11[0] = ij11; _ij11[1] = -1;
for(int iij11 = ij11+1; iij11 < 1; ++iij11)
{
if( j11valid[iij11] && IKabs(cj11array[ij11]-cj11array[iij11]) < IKFAST_SOLUTION_THRESH && IKabs(sj11array[ij11]-sj11array[iij11]) < IKFAST_SOLUTION_THRESH )
{
    j11valid[iij11]=false; _ij11[1] = iij11; break; 
}
}
j11 = j11array[ij11]; cj11 = cj11array[ij11]; sj11 = sj11array[ij11];
{
IkReal evalcond[8];
IkReal x1941=IKcos(j11);
IkReal x1942=IKsin(j11);
IkReal x1943=((r12)*(sj15));
IkReal x1944=((IkReal(0.210000000000000))*(sj14));
IkReal x1945=((IkReal(1.00000000000000))*(cj14));
IkReal x1946=((r00)*(sj16));
IkReal x1947=((r10)*(sj16));
IkReal x1948=((cj16)*(r00));
IkReal x1949=((r02)*(sj15));
IkReal x1950=((IkReal(1.00000000000000))*(sj14));
IkReal x1951=((IkReal(0.0159000000000000))*(sj14));
IkReal x1952=((cj16)*(r01));
IkReal x1953=((r01)*(sj16));
IkReal x1954=((IkReal(0.000500000000000000))*(sj15));
IkReal x1955=((cj15)*(r12));
IkReal x1956=((IkReal(0.0159000000000000))*(cj14));
IkReal x1957=((IkReal(1.00000000000000))*(sj15));
IkReal x1958=((IkReal(0.210000000000000))*(cj14));
IkReal x1959=((cj16)*(r11));
IkReal x1960=((cj15)*(r02));
IkReal x1961=((cj16)*(r10));
IkReal x1962=((r11)*(sj16));
IkReal x1963=((IkReal(0.0136000000000000))*(cj15));
IkReal x1964=((IkReal(1.00000000000000))*(x1942));
IkReal x1965=((cj15)*(x1962));
IkReal x1966=((cj15)*(x1961));
IkReal x1967=((cj12)*(x1941));
evalcond[0]=((((IkReal(-1.00000000000000))*(x1948)*(x1957)))+(x1960)+(((IkReal(-1.00000000000000))*(sj12)*(x1964)))+(((sj15)*(x1953))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x1957)*(x1961)))+(((sj15)*(x1962)))+(((sj12)*(x1941)))+(x1955));
evalcond[2]=((((IkReal(-1.00000000000000))*(x1945)*(x1947)))+(((IkReal(-1.00000000000000))*(x1945)*(x1959)))+(((IkReal(-1.00000000000000))*(x1943)*(x1950)))+(((IkReal(-1.00000000000000))*(x1950)*(x1966)))+(x1967)+(((sj14)*(x1965))));
evalcond[3]=((((IkReal(-1.00000000000000))*(x1949)*(x1950)))+(((IkReal(-1.00000000000000))*(x1945)*(x1946)))+(((IkReal(-1.00000000000000))*(cj15)*(x1948)*(x1950)))+(((IkReal(-1.00000000000000))*(x1945)*(x1952)))+(((cj15)*(sj14)*(x1953)))+(((IkReal(-1.00000000000000))*(cj12)*(x1964))));
evalcond[4]=((((cj14)*(cj15)*(x1953)))+(((IkReal(-1.00000000000000))*(x1945)*(x1949)))+(((IkReal(-1.00000000000000))*(x1941)))+(((IkReal(-1.00000000000000))*(cj15)*(x1945)*(x1948)))+(((sj14)*(x1946)))+(((sj14)*(x1952))));
evalcond[5]=((((IkReal(-1.00000000000000))*(x1943)*(x1945)))+(((cj14)*(x1965)))+(((IkReal(-1.00000000000000))*(x1945)*(x1966)))+(((IkReal(-1.00000000000000))*(x1964)))+(((sj14)*(x1947)))+(((sj14)*(x1959))));
evalcond[6]=((((IkReal(-1.00000000000000))*(x1949)*(x1956)))+(((IkReal(0.0182200000000000))*(x1953)))+(((IkReal(-1.00000000000000))*(x1948)*(x1954)))+(((IkReal(0.0104000000000000))*(x1941)))+(((IkReal(-1.00000000000000))*(x1948)*(x1963)))+(((IkReal(-0.0136000000000000))*(x1949)))+(((cj15)*(x1944)*(x1953)))+(((IkReal(-1.00000000000000))*(x1952)*(x1958)))+(((IkReal(-1.00000000000000))*(cj15)*(x1948)*(x1956)))+(((IkReal(0.136600000000000))*(cj12)*(x1942)))+(((x1951)*(x1952)))+(((x1946)*(x1951)))+(((IkReal(-1.00000000000000))*(x1944)*(x1949)))+(((IkReal(-0.0182200000000000))*(x1948)))+(((IkReal(0.0300000000000000))*(x1942)))+(((IkReal(-1.00000000000000))*(px)))+(((IkReal(-1.00000000000000))*(cj15)*(x1944)*(x1948)))+(((IkReal(-0.354900000000000))*(x1952)))+(((IkReal(-1.00000000000000))*(x1946)*(x1958)))+(((IkReal(-0.354900000000000))*(x1946)))+(((x1953)*(x1954)))+(((IkReal(0.000500000000000000))*(x1960)))+(((x1953)*(x1963)))+(((cj15)*(x1953)*(x1956))));
evalcond[7]=((((IkReal(0.0104000000000000))*(x1942)))+(((x1944)*(x1965)))+(((IkReal(-0.0300000000000000))*(x1941)))+(((IkReal(-1.00000000000000))*(x1956)*(x1966)))+(((IkReal(-0.0136000000000000))*(x1943)))+(((x1956)*(x1965)))+(((IkReal(0.0182200000000000))*(x1962)))+(((IkReal(-1.00000000000000))*(x1943)*(x1944)))+(((IkReal(-1.00000000000000))*(x1958)*(x1959)))+(((IkReal(-1.00000000000000))*(x1944)*(x1966)))+(((IkReal(-0.0182200000000000))*(x1961)))+(((IkReal(-1.00000000000000))*(x1943)*(x1956)))+(((x1951)*(x1959)))+(((IkReal(-1.00000000000000))*(x1947)*(x1958)))+(((x1954)*(x1962)))+(((IkReal(-1.00000000000000))*(py)))+(((IkReal(-0.354900000000000))*(x1959)))+(((IkReal(-1.00000000000000))*(x1961)*(x1963)))+(((IkReal(-0.354900000000000))*(x1947)))+(((x1962)*(x1963)))+(((IkReal(-0.136600000000000))*(x1967)))+(((x1947)*(x1951)))+(((IkReal(0.000500000000000000))*(x1955)))+(((IkReal(-1.00000000000000))*(x1954)*(x1961))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  || IKabs(evalcond[6]) > 0.000001  || IKabs(evalcond[7]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j11;
vinfos[0].indices[0] = _ij11[0];
vinfos[0].indices[1] = _ij11[1];
vinfos[0].maxsolutions = _nj11;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j12;
vinfos[1].indices[0] = _ij12[0];
vinfos[1].indices[1] = _ij12[1];
vinfos[1].maxsolutions = _nj12;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j13;
vinfos[2].indices[0] = _ij13[0];
vinfos[2].indices[1] = _ij13[1];
vinfos[2].maxsolutions = _nj13;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j14;
vinfos[3].indices[0] = _ij14[0];
vinfos[3].indices[1] = _ij14[1];
vinfos[3].maxsolutions = _nj14;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j15;
vinfos[4].indices[0] = _ij15[0];
vinfos[4].indices[1] = _ij15[1];
vinfos[4].maxsolutions = _nj15;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j16;
vinfos[5].indices[0] = _ij16[0];
vinfos[5].indices[1] = _ij16[1];
vinfos[5].maxsolutions = _nj16;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j11array[1], cj11array[1], sj11array[1];
bool j11valid[1]={false};
_nj11 = 1;
IkReal x1968=((cj14)*(cj15));
IkReal x1969=((r01)*(sj16));
IkReal x1970=((IkReal(1.00000000000000))*(cj16)*(r00));
if( IKabs(((((IKabs(sj12) != 0)?((IkReal)1/(sj12)):(IkReal)1.0e30))*(((((sj15)*(x1969)))+(((cj15)*(r02)))+(((IkReal(-1.00000000000000))*(sj15)*(x1970))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((IkReal(-1.00000000000000))*(x1968)*(x1970)))+(((r00)*(sj14)*(sj16)))+(((IkReal(-1.00000000000000))*(cj14)*(r02)*(sj15)))+(((x1968)*(x1969)))+(((cj16)*(r01)*(sj14))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((IKabs(sj12) != 0)?((IkReal)1/(sj12)):(IkReal)1.0e30))*(((((sj15)*(x1969)))+(((cj15)*(r02)))+(((IkReal(-1.00000000000000))*(sj15)*(x1970)))))))+IKsqr(((((IkReal(-1.00000000000000))*(x1968)*(x1970)))+(((r00)*(sj14)*(sj16)))+(((IkReal(-1.00000000000000))*(cj14)*(r02)*(sj15)))+(((x1968)*(x1969)))+(((cj16)*(r01)*(sj14)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j11array[0]=IKatan2(((((IKabs(sj12) != 0)?((IkReal)1/(sj12)):(IkReal)1.0e30))*(((((sj15)*(x1969)))+(((cj15)*(r02)))+(((IkReal(-1.00000000000000))*(sj15)*(x1970)))))), ((((IkReal(-1.00000000000000))*(x1968)*(x1970)))+(((r00)*(sj14)*(sj16)))+(((IkReal(-1.00000000000000))*(cj14)*(r02)*(sj15)))+(((x1968)*(x1969)))+(((cj16)*(r01)*(sj14)))));
sj11array[0]=IKsin(j11array[0]);
cj11array[0]=IKcos(j11array[0]);
if( j11array[0] > IKPI )
{
    j11array[0]-=IK2PI;
}
else if( j11array[0] < -IKPI )
{    j11array[0]+=IK2PI;
}
j11valid[0] = true;
for(int ij11 = 0; ij11 < 1; ++ij11)
{
if( !j11valid[ij11] )
{
    continue;
}
_ij11[0] = ij11; _ij11[1] = -1;
for(int iij11 = ij11+1; iij11 < 1; ++iij11)
{
if( j11valid[iij11] && IKabs(cj11array[ij11]-cj11array[iij11]) < IKFAST_SOLUTION_THRESH && IKabs(sj11array[ij11]-sj11array[iij11]) < IKFAST_SOLUTION_THRESH )
{
    j11valid[iij11]=false; _ij11[1] = iij11; break; 
}
}
j11 = j11array[ij11]; cj11 = cj11array[ij11]; sj11 = sj11array[ij11];
{
IkReal evalcond[8];
IkReal x1971=IKcos(j11);
IkReal x1972=IKsin(j11);
IkReal x1973=((r12)*(sj15));
IkReal x1974=((IkReal(0.210000000000000))*(sj14));
IkReal x1975=((IkReal(1.00000000000000))*(cj14));
IkReal x1976=((r00)*(sj16));
IkReal x1977=((r10)*(sj16));
IkReal x1978=((cj16)*(r00));
IkReal x1979=((r02)*(sj15));
IkReal x1980=((IkReal(1.00000000000000))*(sj14));
IkReal x1981=((IkReal(0.0159000000000000))*(sj14));
IkReal x1982=((cj16)*(r01));
IkReal x1983=((r01)*(sj16));
IkReal x1984=((IkReal(0.000500000000000000))*(sj15));
IkReal x1985=((cj15)*(r12));
IkReal x1986=((IkReal(0.0159000000000000))*(cj14));
IkReal x1987=((IkReal(1.00000000000000))*(sj15));
IkReal x1988=((IkReal(0.210000000000000))*(cj14));
IkReal x1989=((cj16)*(r11));
IkReal x1990=((cj15)*(r02));
IkReal x1991=((cj16)*(r10));
IkReal x1992=((r11)*(sj16));
IkReal x1993=((IkReal(0.0136000000000000))*(cj15));
IkReal x1994=((IkReal(1.00000000000000))*(x1972));
IkReal x1995=((cj15)*(x1992));
IkReal x1996=((cj15)*(x1991));
IkReal x1997=((cj12)*(x1971));
evalcond[0]=((x1990)+(((IkReal(-1.00000000000000))*(sj12)*(x1994)))+(((IkReal(-1.00000000000000))*(x1978)*(x1987)))+(((sj15)*(x1983))));
evalcond[1]=((((sj15)*(x1992)))+(((IkReal(-1.00000000000000))*(x1987)*(x1991)))+(x1985)+(((sj12)*(x1971))));
evalcond[2]=((((IkReal(-1.00000000000000))*(x1975)*(x1977)))+(((IkReal(-1.00000000000000))*(x1980)*(x1996)))+(((IkReal(-1.00000000000000))*(x1973)*(x1980)))+(((IkReal(-1.00000000000000))*(x1975)*(x1989)))+(((sj14)*(x1995)))+(x1997));
evalcond[3]=((((IkReal(-1.00000000000000))*(x1975)*(x1976)))+(((cj15)*(sj14)*(x1983)))+(((IkReal(-1.00000000000000))*(x1979)*(x1980)))+(((IkReal(-1.00000000000000))*(cj12)*(x1994)))+(((IkReal(-1.00000000000000))*(x1975)*(x1982)))+(((IkReal(-1.00000000000000))*(cj15)*(x1978)*(x1980))));
evalcond[4]=((((sj14)*(x1982)))+(((cj14)*(cj15)*(x1983)))+(((IkReal(-1.00000000000000))*(x1975)*(x1979)))+(((IkReal(-1.00000000000000))*(cj15)*(x1975)*(x1978)))+(((IkReal(-1.00000000000000))*(x1971)))+(((sj14)*(x1976))));
evalcond[5]=((((sj14)*(x1989)))+(((IkReal(-1.00000000000000))*(x1973)*(x1975)))+(((IkReal(-1.00000000000000))*(x1994)))+(((sj14)*(x1977)))+(((cj14)*(x1995)))+(((IkReal(-1.00000000000000))*(x1975)*(x1996))));
evalcond[6]=((((IkReal(-1.00000000000000))*(x1976)*(x1988)))+(((cj15)*(x1983)*(x1986)))+(((IkReal(0.0104000000000000))*(x1971)))+(((x1976)*(x1981)))+(((IkReal(-0.0182200000000000))*(x1978)))+(((IkReal(-1.00000000000000))*(x1974)*(x1979)))+(((IkReal(-1.00000000000000))*(x1979)*(x1986)))+(((x1981)*(x1982)))+(((IkReal(-0.0136000000000000))*(x1979)))+(((IkReal(-1.00000000000000))*(cj15)*(x1974)*(x1978)))+(((IkReal(0.136600000000000))*(cj12)*(x1972)))+(((x1983)*(x1993)))+(((IkReal(-0.354900000000000))*(x1982)))+(((IkReal(-0.354900000000000))*(x1976)))+(((IkReal(-1.00000000000000))*(px)))+(((IkReal(0.0300000000000000))*(x1972)))+(((IkReal(-1.00000000000000))*(cj15)*(x1978)*(x1986)))+(((IkReal(0.000500000000000000))*(x1990)))+(((cj15)*(x1974)*(x1983)))+(((IkReal(-1.00000000000000))*(x1982)*(x1988)))+(((IkReal(-1.00000000000000))*(x1978)*(x1984)))+(((IkReal(-1.00000000000000))*(x1978)*(x1993)))+(((x1983)*(x1984)))+(((IkReal(0.0182200000000000))*(x1983))));
evalcond[7]=((((IkReal(-0.0182200000000000))*(x1991)))+(((IkReal(-1.00000000000000))*(x1986)*(x1996)))+(((IkReal(-0.136600000000000))*(x1997)))+(((IkReal(-1.00000000000000))*(x1974)*(x1996)))+(((IkReal(0.0104000000000000))*(x1972)))+(((IkReal(-0.0300000000000000))*(x1971)))+(((x1981)*(x1989)))+(((IkReal(-1.00000000000000))*(x1973)*(x1986)))+(((IkReal(-0.0136000000000000))*(x1973)))+(((x1986)*(x1995)))+(((IkReal(-1.00000000000000))*(x1973)*(x1974)))+(((IkReal(-0.354900000000000))*(x1989)))+(((IkReal(-0.354900000000000))*(x1977)))+(((IkReal(-1.00000000000000))*(py)))+(((IkReal(-1.00000000000000))*(x1988)*(x1989)))+(((IkReal(-1.00000000000000))*(x1991)*(x1993)))+(((x1974)*(x1995)))+(((IkReal(-1.00000000000000))*(x1977)*(x1988)))+(((IkReal(-1.00000000000000))*(x1984)*(x1991)))+(((x1984)*(x1992)))+(((x1992)*(x1993)))+(((IkReal(0.0182200000000000))*(x1992)))+(((IkReal(0.000500000000000000))*(x1985)))+(((x1977)*(x1981))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  || IKabs(evalcond[6]) > 0.000001  || IKabs(evalcond[7]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j11;
vinfos[0].indices[0] = _ij11[0];
vinfos[0].indices[1] = _ij11[1];
vinfos[0].maxsolutions = _nj11;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j12;
vinfos[1].indices[0] = _ij12[0];
vinfos[1].indices[1] = _ij12[1];
vinfos[1].maxsolutions = _nj12;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j13;
vinfos[2].indices[0] = _ij13[0];
vinfos[2].indices[1] = _ij13[1];
vinfos[2].maxsolutions = _nj13;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j14;
vinfos[3].indices[0] = _ij14[0];
vinfos[3].indices[1] = _ij14[1];
vinfos[3].maxsolutions = _nj14;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j15;
vinfos[4].indices[0] = _ij15[0];
vinfos[4].indices[1] = _ij15[1];
vinfos[4].maxsolutions = _nj15;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j16;
vinfos[5].indices[0] = _ij16[0];
vinfos[5].indices[1] = _ij16[1];
vinfos[5].maxsolutions = _nj16;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j11array[1], cj11array[1], sj11array[1];
bool j11valid[1]={false};
_nj11 = 1;
IkReal x1998=((cj16)*(sj15));
IkReal x1999=((sj15)*(sj16));
if( IKabs(((gconst13)*(((((cj15)*(r02)))+(((IkReal(-1.00000000000000))*(r00)*(x1998)))+(((r01)*(x1999))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst13)*(((((IkReal(-1.00000000000000))*(r11)*(x1999)))+(((r10)*(x1998)))+(((IkReal(-1.00000000000000))*(cj15)*(r12))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j11array[0]=IKatan2(((gconst13)*(((((cj15)*(r02)))+(((IkReal(-1.00000000000000))*(r00)*(x1998)))+(((r01)*(x1999)))))), ((gconst13)*(((((IkReal(-1.00000000000000))*(r11)*(x1999)))+(((r10)*(x1998)))+(((IkReal(-1.00000000000000))*(cj15)*(r12)))))));
sj11array[0]=IKsin(j11array[0]);
cj11array[0]=IKcos(j11array[0]);
if( j11array[0] > IKPI )
{
    j11array[0]-=IK2PI;
}
else if( j11array[0] < -IKPI )
{    j11array[0]+=IK2PI;
}
j11valid[0] = true;
for(int ij11 = 0; ij11 < 1; ++ij11)
{
if( !j11valid[ij11] )
{
    continue;
}
_ij11[0] = ij11; _ij11[1] = -1;
for(int iij11 = ij11+1; iij11 < 1; ++iij11)
{
if( j11valid[iij11] && IKabs(cj11array[ij11]-cj11array[iij11]) < IKFAST_SOLUTION_THRESH && IKabs(sj11array[ij11]-sj11array[iij11]) < IKFAST_SOLUTION_THRESH )
{
    j11valid[iij11]=false; _ij11[1] = iij11; break; 
}
}
j11 = j11array[ij11]; cj11 = cj11array[ij11]; sj11 = sj11array[ij11];
{
IkReal evalcond[8];
IkReal x2000=IKcos(j11);
IkReal x2001=IKsin(j11);
IkReal x2002=((r12)*(sj15));
IkReal x2003=((IkReal(0.210000000000000))*(sj14));
IkReal x2004=((IkReal(1.00000000000000))*(cj14));
IkReal x2005=((r00)*(sj16));
IkReal x2006=((r10)*(sj16));
IkReal x2007=((cj16)*(r00));
IkReal x2008=((r02)*(sj15));
IkReal x2009=((IkReal(1.00000000000000))*(sj14));
IkReal x2010=((IkReal(0.0159000000000000))*(sj14));
IkReal x2011=((cj16)*(r01));
IkReal x2012=((r01)*(sj16));
IkReal x2013=((IkReal(0.000500000000000000))*(sj15));
IkReal x2014=((cj15)*(r12));
IkReal x2015=((IkReal(0.0159000000000000))*(cj14));
IkReal x2016=((IkReal(1.00000000000000))*(sj15));
IkReal x2017=((IkReal(0.210000000000000))*(cj14));
IkReal x2018=((cj16)*(r11));
IkReal x2019=((cj15)*(r02));
IkReal x2020=((cj16)*(r10));
IkReal x2021=((r11)*(sj16));
IkReal x2022=((IkReal(0.0136000000000000))*(cj15));
IkReal x2023=((IkReal(1.00000000000000))*(x2001));
IkReal x2024=((cj15)*(x2021));
IkReal x2025=((cj15)*(x2020));
IkReal x2026=((cj12)*(x2000));
evalcond[0]=((((sj15)*(x2012)))+(x2019)+(((IkReal(-1.00000000000000))*(x2007)*(x2016)))+(((IkReal(-1.00000000000000))*(sj12)*(x2023))));
evalcond[1]=((x2014)+(((IkReal(-1.00000000000000))*(x2016)*(x2020)))+(((sj12)*(x2000)))+(((sj15)*(x2021))));
evalcond[2]=((((IkReal(-1.00000000000000))*(x2004)*(x2006)))+(x2026)+(((IkReal(-1.00000000000000))*(x2002)*(x2009)))+(((IkReal(-1.00000000000000))*(x2009)*(x2025)))+(((IkReal(-1.00000000000000))*(x2004)*(x2018)))+(((sj14)*(x2024))));
evalcond[3]=((((cj15)*(sj14)*(x2012)))+(((IkReal(-1.00000000000000))*(x2004)*(x2005)))+(((IkReal(-1.00000000000000))*(x2004)*(x2011)))+(((IkReal(-1.00000000000000))*(x2008)*(x2009)))+(((IkReal(-1.00000000000000))*(cj15)*(x2007)*(x2009)))+(((IkReal(-1.00000000000000))*(cj12)*(x2023))));
evalcond[4]=((((IkReal(-1.00000000000000))*(x2004)*(x2008)))+(((sj14)*(x2011)))+(((IkReal(-1.00000000000000))*(x2000)))+(((sj14)*(x2005)))+(((IkReal(-1.00000000000000))*(cj15)*(x2004)*(x2007)))+(((cj14)*(cj15)*(x2012))));
evalcond[5]=((((sj14)*(x2018)))+(((cj14)*(x2024)))+(((IkReal(-1.00000000000000))*(x2002)*(x2004)))+(((IkReal(-1.00000000000000))*(x2023)))+(((sj14)*(x2006)))+(((IkReal(-1.00000000000000))*(x2004)*(x2025))));
evalcond[6]=((((IkReal(-1.00000000000000))*(x2008)*(x2015)))+(((IkReal(0.0300000000000000))*(x2001)))+(((IkReal(-1.00000000000000))*(x2003)*(x2008)))+(((IkReal(-0.354900000000000))*(x2005)))+(((IkReal(-1.00000000000000))*(x2007)*(x2013)))+(((IkReal(0.136600000000000))*(cj12)*(x2001)))+(((IkReal(-0.0182200000000000))*(x2007)))+(((IkReal(-1.00000000000000))*(x2005)*(x2017)))+(((x2005)*(x2010)))+(((x2010)*(x2011)))+(((IkReal(-1.00000000000000))*(px)))+(((x2012)*(x2022)))+(((IkReal(-1.00000000000000))*(x2007)*(x2022)))+(((IkReal(-1.00000000000000))*(x2011)*(x2017)))+(((IkReal(0.0182200000000000))*(x2012)))+(((IkReal(0.000500000000000000))*(x2019)))+(((x2012)*(x2013)))+(((IkReal(0.0104000000000000))*(x2000)))+(((IkReal(-0.0136000000000000))*(x2008)))+(((cj15)*(x2003)*(x2012)))+(((IkReal(-1.00000000000000))*(cj15)*(x2003)*(x2007)))+(((cj15)*(x2012)*(x2015)))+(((IkReal(-0.354900000000000))*(x2011)))+(((IkReal(-1.00000000000000))*(cj15)*(x2007)*(x2015))));
evalcond[7]=((((x2003)*(x2024)))+(((IkReal(-1.00000000000000))*(x2003)*(x2025)))+(((IkReal(-0.136600000000000))*(x2026)))+(((IkReal(-0.0182200000000000))*(x2020)))+(((IkReal(-0.354900000000000))*(x2006)))+(((IkReal(-1.00000000000000))*(x2002)*(x2003)))+(((IkReal(-1.00000000000000))*(x2002)*(x2015)))+(((IkReal(-1.00000000000000))*(x2013)*(x2020)))+(((IkReal(-1.00000000000000))*(x2006)*(x2017)))+(((x2010)*(x2018)))+(((IkReal(-1.00000000000000))*(py)))+(((IkReal(-0.0300000000000000))*(x2000)))+(((IkReal(0.000500000000000000))*(x2014)))+(((x2013)*(x2021)))+(((IkReal(0.0104000000000000))*(x2001)))+(((IkReal(-0.0136000000000000))*(x2002)))+(((IkReal(-1.00000000000000))*(x2015)*(x2025)))+(((IkReal(-1.00000000000000))*(x2020)*(x2022)))+(((IkReal(-1.00000000000000))*(x2017)*(x2018)))+(((x2006)*(x2010)))+(((IkReal(0.0182200000000000))*(x2021)))+(((IkReal(-0.354900000000000))*(x2018)))+(((x2015)*(x2024)))+(((x2021)*(x2022))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  || IKabs(evalcond[6]) > 0.000001  || IKabs(evalcond[7]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j11;
vinfos[0].indices[0] = _ij11[0];
vinfos[0].indices[1] = _ij11[1];
vinfos[0].maxsolutions = _nj11;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j12;
vinfos[1].indices[0] = _ij12[0];
vinfos[1].indices[1] = _ij12[1];
vinfos[1].maxsolutions = _nj12;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j13;
vinfos[2].indices[0] = _ij13[0];
vinfos[2].indices[1] = _ij13[1];
vinfos[2].maxsolutions = _nj13;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j14;
vinfos[3].indices[0] = _ij14[0];
vinfos[3].indices[1] = _ij14[1];
vinfos[3].maxsolutions = _nj14;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j15;
vinfos[4].indices[0] = _ij15[0];
vinfos[4].indices[1] = _ij15[1];
vinfos[4].maxsolutions = _nj15;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j16;
vinfos[5].indices[0] = _ij16[0];
vinfos[5].indices[1] = _ij16[1];
vinfos[5].maxsolutions = _nj16;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
if( 1 )
{
continue;

} else
{
}
}
}
}
}
}

} else
{
{
IkReal j11array[1], cj11array[1], sj11array[1];
bool j11valid[1]={false};
_nj11 = 1;
IkReal x2027=((IKabs(cj12) != 0)?((IkReal)1/(cj12)):(IkReal)1.0e30);
IkReal x2028=((cj13)*(sj12));
IkReal x2029=((IkReal(1.00000000000000))*(cj16));
IkReal x2030=((cj14)*(r01));
IkReal x2031=((cj12)*(sj15));
IkReal x2032=((r01)*(sj16));
IkReal x2033=((cj15)*(sj14));
IkReal x2034=((r00)*(x2033));
IkReal x2035=((IkReal(1.00000000000000))*(cj14)*(r00)*(sj16));
IkReal x2036=((IkReal(1.00000000000000))*(r02)*(sj14)*(sj15));
if( IKabs(((x2027)*(((((x2032)*(x2033)))+(((IkReal(-1.00000000000000))*(x2029)*(x2030)))+(((IkReal(-1.00000000000000))*(x2029)*(x2034)))+(((IkReal(-1.00000000000000))*(x2035)))+(((IkReal(-1.00000000000000))*(x2036))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((x2027)*(((IKabs(sj13) != 0)?((IkReal)1/(sj13)):(IkReal)1.0e30))*(((((x2031)*(x2032)))+(((x2028)*(x2032)*(x2033)))+(((cj12)*(cj15)*(r02)))+(((IkReal(-1.00000000000000))*(x2028)*(x2029)*(x2030)))+(((IkReal(-1.00000000000000))*(x2028)*(x2029)*(x2034)))+(((IkReal(-1.00000000000000))*(x2028)*(x2036)))+(((IkReal(-1.00000000000000))*(x2028)*(x2035)))+(((IkReal(-1.00000000000000))*(r00)*(x2029)*(x2031))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((x2027)*(((((x2032)*(x2033)))+(((IkReal(-1.00000000000000))*(x2029)*(x2030)))+(((IkReal(-1.00000000000000))*(x2029)*(x2034)))+(((IkReal(-1.00000000000000))*(x2035)))+(((IkReal(-1.00000000000000))*(x2036)))))))+IKsqr(((x2027)*(((IKabs(sj13) != 0)?((IkReal)1/(sj13)):(IkReal)1.0e30))*(((((x2031)*(x2032)))+(((x2028)*(x2032)*(x2033)))+(((cj12)*(cj15)*(r02)))+(((IkReal(-1.00000000000000))*(x2028)*(x2029)*(x2030)))+(((IkReal(-1.00000000000000))*(x2028)*(x2029)*(x2034)))+(((IkReal(-1.00000000000000))*(x2028)*(x2036)))+(((IkReal(-1.00000000000000))*(x2028)*(x2035)))+(((IkReal(-1.00000000000000))*(r00)*(x2029)*(x2031)))))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j11array[0]=IKatan2(((x2027)*(((((x2032)*(x2033)))+(((IkReal(-1.00000000000000))*(x2029)*(x2030)))+(((IkReal(-1.00000000000000))*(x2029)*(x2034)))+(((IkReal(-1.00000000000000))*(x2035)))+(((IkReal(-1.00000000000000))*(x2036)))))), ((x2027)*(((IKabs(sj13) != 0)?((IkReal)1/(sj13)):(IkReal)1.0e30))*(((((x2031)*(x2032)))+(((x2028)*(x2032)*(x2033)))+(((cj12)*(cj15)*(r02)))+(((IkReal(-1.00000000000000))*(x2028)*(x2029)*(x2030)))+(((IkReal(-1.00000000000000))*(x2028)*(x2029)*(x2034)))+(((IkReal(-1.00000000000000))*(x2028)*(x2036)))+(((IkReal(-1.00000000000000))*(x2028)*(x2035)))+(((IkReal(-1.00000000000000))*(r00)*(x2029)*(x2031)))))));
sj11array[0]=IKsin(j11array[0]);
cj11array[0]=IKcos(j11array[0]);
if( j11array[0] > IKPI )
{
    j11array[0]-=IK2PI;
}
else if( j11array[0] < -IKPI )
{    j11array[0]+=IK2PI;
}
j11valid[0] = true;
for(int ij11 = 0; ij11 < 1; ++ij11)
{
if( !j11valid[ij11] )
{
    continue;
}
_ij11[0] = ij11; _ij11[1] = -1;
for(int iij11 = ij11+1; iij11 < 1; ++iij11)
{
if( j11valid[iij11] && IKabs(cj11array[ij11]-cj11array[iij11]) < IKFAST_SOLUTION_THRESH && IKabs(sj11array[ij11]-sj11array[iij11]) < IKFAST_SOLUTION_THRESH )
{
    j11valid[iij11]=false; _ij11[1] = iij11; break; 
}
}
j11 = j11array[ij11]; cj11 = cj11array[ij11]; sj11 = sj11array[ij11];
{
IkReal evalcond[8];
IkReal x2037=IKsin(j11);
IkReal x2038=IKcos(j11);
IkReal x2039=((r12)*(sj15));
IkReal x2040=((IkReal(0.210000000000000))*(sj14));
IkReal x2041=((IkReal(1.00000000000000))*(cj14));
IkReal x2042=((r00)*(sj16));
IkReal x2043=((r10)*(sj16));
IkReal x2044=((cj16)*(r00));
IkReal x2045=((r02)*(sj15));
IkReal x2046=((IkReal(1.00000000000000))*(sj14));
IkReal x2047=((IkReal(0.0159000000000000))*(sj14));
IkReal x2048=((cj16)*(r01));
IkReal x2049=((r01)*(sj16));
IkReal x2050=((IkReal(0.000500000000000000))*(sj15));
IkReal x2051=((cj15)*(r12));
IkReal x2052=((sj12)*(sj13));
IkReal x2053=((IkReal(0.0159000000000000))*(cj14));
IkReal x2054=((IkReal(1.00000000000000))*(sj15));
IkReal x2055=((IkReal(0.210000000000000))*(cj14));
IkReal x2056=((cj13)*(sj12));
IkReal x2057=((cj16)*(r11));
IkReal x2058=((cj15)*(r02));
IkReal x2059=((cj16)*(r10));
IkReal x2060=((r11)*(sj16));
IkReal x2061=((IkReal(0.0136000000000000))*(cj15));
IkReal x2062=((cj15)*(x2059));
IkReal x2063=((cj15)*(x2060));
IkReal x2064=((cj12)*(x2037));
IkReal x2065=((cj12)*(x2038));
IkReal x2066=((IkReal(1.00000000000000))*(x2038));
evalcond[0]=((((IkReal(-1.00000000000000))*(x2044)*(x2054)))+(x2058)+(((sj15)*(x2049)))+(((x2037)*(x2056)))+(((IkReal(-1.00000000000000))*(sj13)*(x2066))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x2054)*(x2059)))+(x2051)+(((IkReal(-1.00000000000000))*(x2056)*(x2066)))+(((IkReal(-1.00000000000000))*(sj13)*(x2037)))+(((sj15)*(x2060))));
evalcond[2]=((((IkReal(-1.00000000000000))*(x2046)*(x2062)))+(x2065)+(((IkReal(-1.00000000000000))*(x2039)*(x2046)))+(((IkReal(-1.00000000000000))*(x2041)*(x2043)))+(((IkReal(-1.00000000000000))*(x2041)*(x2057)))+(((sj14)*(x2063))));
evalcond[3]=((((IkReal(-1.00000000000000))*(x2045)*(x2046)))+(((IkReal(-1.00000000000000))*(cj15)*(x2044)*(x2046)))+(((cj15)*(sj14)*(x2049)))+(((IkReal(-1.00000000000000))*(x2064)))+(((IkReal(-1.00000000000000))*(x2041)*(x2048)))+(((IkReal(-1.00000000000000))*(x2041)*(x2042))));
evalcond[4]=((((sj14)*(x2048)))+(((sj14)*(x2042)))+(((cj13)*(x2038)))+(((cj14)*(cj15)*(x2049)))+(((IkReal(-1.00000000000000))*(x2041)*(x2045)))+(((IkReal(-1.00000000000000))*(cj15)*(x2041)*(x2044)))+(((x2037)*(x2052))));
evalcond[5]=((((sj14)*(x2043)))+(((IkReal(-1.00000000000000))*(x2039)*(x2041)))+(((cj13)*(x2037)))+(((cj14)*(x2063)))+(((IkReal(-1.00000000000000))*(x2052)*(x2066)))+(((sj14)*(x2057)))+(((IkReal(-1.00000000000000))*(x2041)*(x2062))));
evalcond[6]=((((IkReal(-1.00000000000000))*(x2044)*(x2050)))+(((x2042)*(x2047)))+(((IkReal(-1.00000000000000))*(x2045)*(x2053)))+(((cj15)*(x2049)*(x2053)))+(((x2049)*(x2050)))+(((x2049)*(x2061)))+(((IkReal(-0.354900000000000))*(x2042)))+(((IkReal(-0.354900000000000))*(x2048)))+(((IkReal(-0.0136000000000000))*(x2045)))+(((IkReal(-1.00000000000000))*(px)))+(((IkReal(-1.00000000000000))*(x2048)*(x2055)))+(((IkReal(-1.00000000000000))*(cj15)*(x2044)*(x2053)))+(((IkReal(-1.00000000000000))*(x2042)*(x2055)))+(((IkReal(-1.00000000000000))*(x2044)*(x2061)))+(((IkReal(-1.00000000000000))*(cj15)*(x2040)*(x2044)))+(((IkReal(-1.00000000000000))*(x2040)*(x2045)))+(((IkReal(0.0104000000000000))*(x2038)))+(((IkReal(-0.0182200000000000))*(x2044)))+(((IkReal(0.0182200000000000))*(x2049)))+(((x2047)*(x2048)))+(((IkReal(0.136600000000000))*(x2064)))+(((cj15)*(x2040)*(x2049)))+(((IkReal(0.0300000000000000))*(x2037)))+(((IkReal(0.000500000000000000))*(x2058))));
evalcond[7]=((((IkReal(0.0182200000000000))*(x2060)))+(((x2043)*(x2047)))+(((IkReal(-0.136600000000000))*(x2065)))+(((IkReal(-0.354900000000000))*(x2057)))+(((IkReal(-1.00000000000000))*(x2039)*(x2040)))+(((IkReal(-1.00000000000000))*(x2039)*(x2053)))+(((IkReal(-0.0182200000000000))*(x2059)))+(((IkReal(-1.00000000000000))*(x2053)*(x2062)))+(((x2047)*(x2057)))+(((IkReal(-0.354900000000000))*(x2043)))+(((IkReal(-0.0300000000000000))*(x2038)))+(((IkReal(-1.00000000000000))*(py)))+(((x2060)*(x2061)))+(((IkReal(-0.0136000000000000))*(x2039)))+(((IkReal(-1.00000000000000))*(x2050)*(x2059)))+(((IkReal(-1.00000000000000))*(x2043)*(x2055)))+(((IkReal(-1.00000000000000))*(x2059)*(x2061)))+(((IkReal(0.0104000000000000))*(x2037)))+(((x2050)*(x2060)))+(((IkReal(-1.00000000000000))*(x2040)*(x2062)))+(((IkReal(-1.00000000000000))*(x2055)*(x2057)))+(((x2053)*(x2063)))+(((IkReal(0.000500000000000000))*(x2051)))+(((x2040)*(x2063))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  || IKabs(evalcond[6]) > 0.000001  || IKabs(evalcond[7]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j11;
vinfos[0].indices[0] = _ij11[0];
vinfos[0].indices[1] = _ij11[1];
vinfos[0].maxsolutions = _nj11;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j12;
vinfos[1].indices[0] = _ij12[0];
vinfos[1].indices[1] = _ij12[1];
vinfos[1].maxsolutions = _nj12;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j13;
vinfos[2].indices[0] = _ij13[0];
vinfos[2].indices[1] = _ij13[1];
vinfos[2].maxsolutions = _nj13;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j14;
vinfos[3].indices[0] = _ij14[0];
vinfos[3].indices[1] = _ij14[1];
vinfos[3].maxsolutions = _nj14;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j15;
vinfos[4].indices[0] = _ij15[0];
vinfos[4].indices[1] = _ij15[1];
vinfos[4].maxsolutions = _nj15;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j16;
vinfos[5].indices[0] = _ij16[0];
vinfos[5].indices[1] = _ij16[1];
vinfos[5].maxsolutions = _nj16;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j11array[1], cj11array[1], sj11array[1];
bool j11valid[1]={false};
_nj11 = 1;
IkReal x2067=((IKabs(cj12) != 0)?((IkReal)1/(cj12)):(IkReal)1.0e30);
IkReal x2068=((r11)*(sj16));
IkReal x2069=((cj12)*(sj15));
IkReal x2070=((cj15)*(sj14));
IkReal x2071=((cj16)*(r10));
IkReal x2072=((r12)*(sj14)*(sj15));
IkReal x2073=((IkReal(1.00000000000000))*(cj13)*(sj12));
IkReal x2074=((cj14)*(cj16)*(r11));
IkReal x2075=((cj14)*(r10)*(sj16));
if( IKabs(((x2067)*(((IKabs(sj13) != 0)?((IkReal)1/(sj13)):(IkReal)1.0e30))*(((((cj12)*(cj15)*(r12)))+(((x2068)*(x2069)))+(((IkReal(-1.00000000000000))*(x2070)*(x2071)*(x2073)))+(((IkReal(-1.00000000000000))*(x2069)*(x2071)))+(((IkReal(-1.00000000000000))*(x2073)*(x2075)))+(((IkReal(-1.00000000000000))*(x2073)*(x2074)))+(((cj13)*(sj12)*(x2068)*(x2070)))+(((IkReal(-1.00000000000000))*(x2072)*(x2073))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((x2067)*(((x2072)+(x2075)+(x2074)+(((x2070)*(x2071)))+(((IkReal(-1.00000000000000))*(x2068)*(x2070))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((x2067)*(((IKabs(sj13) != 0)?((IkReal)1/(sj13)):(IkReal)1.0e30))*(((((cj12)*(cj15)*(r12)))+(((x2068)*(x2069)))+(((IkReal(-1.00000000000000))*(x2070)*(x2071)*(x2073)))+(((IkReal(-1.00000000000000))*(x2069)*(x2071)))+(((IkReal(-1.00000000000000))*(x2073)*(x2075)))+(((IkReal(-1.00000000000000))*(x2073)*(x2074)))+(((cj13)*(sj12)*(x2068)*(x2070)))+(((IkReal(-1.00000000000000))*(x2072)*(x2073)))))))+IKsqr(((x2067)*(((x2072)+(x2075)+(x2074)+(((x2070)*(x2071)))+(((IkReal(-1.00000000000000))*(x2068)*(x2070)))))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j11array[0]=IKatan2(((x2067)*(((IKabs(sj13) != 0)?((IkReal)1/(sj13)):(IkReal)1.0e30))*(((((cj12)*(cj15)*(r12)))+(((x2068)*(x2069)))+(((IkReal(-1.00000000000000))*(x2070)*(x2071)*(x2073)))+(((IkReal(-1.00000000000000))*(x2069)*(x2071)))+(((IkReal(-1.00000000000000))*(x2073)*(x2075)))+(((IkReal(-1.00000000000000))*(x2073)*(x2074)))+(((cj13)*(sj12)*(x2068)*(x2070)))+(((IkReal(-1.00000000000000))*(x2072)*(x2073)))))), ((x2067)*(((x2072)+(x2075)+(x2074)+(((x2070)*(x2071)))+(((IkReal(-1.00000000000000))*(x2068)*(x2070)))))));
sj11array[0]=IKsin(j11array[0]);
cj11array[0]=IKcos(j11array[0]);
if( j11array[0] > IKPI )
{
    j11array[0]-=IK2PI;
}
else if( j11array[0] < -IKPI )
{    j11array[0]+=IK2PI;
}
j11valid[0] = true;
for(int ij11 = 0; ij11 < 1; ++ij11)
{
if( !j11valid[ij11] )
{
    continue;
}
_ij11[0] = ij11; _ij11[1] = -1;
for(int iij11 = ij11+1; iij11 < 1; ++iij11)
{
if( j11valid[iij11] && IKabs(cj11array[ij11]-cj11array[iij11]) < IKFAST_SOLUTION_THRESH && IKabs(sj11array[ij11]-sj11array[iij11]) < IKFAST_SOLUTION_THRESH )
{
    j11valid[iij11]=false; _ij11[1] = iij11; break; 
}
}
j11 = j11array[ij11]; cj11 = cj11array[ij11]; sj11 = sj11array[ij11];
{
IkReal evalcond[8];
IkReal x2076=IKsin(j11);
IkReal x2077=IKcos(j11);
IkReal x2078=((r12)*(sj15));
IkReal x2079=((IkReal(0.210000000000000))*(sj14));
IkReal x2080=((IkReal(1.00000000000000))*(cj14));
IkReal x2081=((r00)*(sj16));
IkReal x2082=((r10)*(sj16));
IkReal x2083=((cj16)*(r00));
IkReal x2084=((r02)*(sj15));
IkReal x2085=((IkReal(1.00000000000000))*(sj14));
IkReal x2086=((IkReal(0.0159000000000000))*(sj14));
IkReal x2087=((cj16)*(r01));
IkReal x2088=((r01)*(sj16));
IkReal x2089=((IkReal(0.000500000000000000))*(sj15));
IkReal x2090=((cj15)*(r12));
IkReal x2091=((sj12)*(sj13));
IkReal x2092=((IkReal(0.0159000000000000))*(cj14));
IkReal x2093=((IkReal(1.00000000000000))*(sj15));
IkReal x2094=((IkReal(0.210000000000000))*(cj14));
IkReal x2095=((cj13)*(sj12));
IkReal x2096=((cj16)*(r11));
IkReal x2097=((cj15)*(r02));
IkReal x2098=((cj16)*(r10));
IkReal x2099=((r11)*(sj16));
IkReal x2100=((IkReal(0.0136000000000000))*(cj15));
IkReal x2101=((cj15)*(x2098));
IkReal x2102=((cj15)*(x2099));
IkReal x2103=((cj12)*(x2076));
IkReal x2104=((cj12)*(x2077));
IkReal x2105=((IkReal(1.00000000000000))*(x2077));
evalcond[0]=((((IkReal(-1.00000000000000))*(x2083)*(x2093)))+(x2097)+(((x2076)*(x2095)))+(((sj15)*(x2088)))+(((IkReal(-1.00000000000000))*(sj13)*(x2105))));
evalcond[1]=((((sj15)*(x2099)))+(x2090)+(((IkReal(-1.00000000000000))*(x2093)*(x2098)))+(((IkReal(-1.00000000000000))*(x2095)*(x2105)))+(((IkReal(-1.00000000000000))*(sj13)*(x2076))));
evalcond[2]=((((IkReal(-1.00000000000000))*(x2078)*(x2085)))+(x2104)+(((IkReal(-1.00000000000000))*(x2085)*(x2101)))+(((sj14)*(x2102)))+(((IkReal(-1.00000000000000))*(x2080)*(x2082)))+(((IkReal(-1.00000000000000))*(x2080)*(x2096))));
evalcond[3]=((((IkReal(-1.00000000000000))*(x2084)*(x2085)))+(((cj15)*(sj14)*(x2088)))+(((IkReal(-1.00000000000000))*(x2103)))+(((IkReal(-1.00000000000000))*(x2080)*(x2081)))+(((IkReal(-1.00000000000000))*(x2080)*(x2087)))+(((IkReal(-1.00000000000000))*(cj15)*(x2083)*(x2085))));
evalcond[4]=((((cj13)*(x2077)))+(((x2076)*(x2091)))+(((IkReal(-1.00000000000000))*(cj15)*(x2080)*(x2083)))+(((sj14)*(x2087)))+(((sj14)*(x2081)))+(((cj14)*(cj15)*(x2088)))+(((IkReal(-1.00000000000000))*(x2080)*(x2084))));
evalcond[5]=((((cj13)*(x2076)))+(((IkReal(-1.00000000000000))*(x2078)*(x2080)))+(((sj14)*(x2096)))+(((IkReal(-1.00000000000000))*(x2091)*(x2105)))+(((IkReal(-1.00000000000000))*(x2080)*(x2101)))+(((sj14)*(x2082)))+(((cj14)*(x2102))));
evalcond[6]=((((IkReal(0.0182200000000000))*(x2088)))+(((IkReal(-1.00000000000000))*(x2081)*(x2094)))+(((IkReal(0.0104000000000000))*(x2077)))+(((x2086)*(x2087)))+(((IkReal(-0.0182200000000000))*(x2083)))+(((cj15)*(x2088)*(x2092)))+(((x2081)*(x2086)))+(((IkReal(-0.0136000000000000))*(x2084)))+(((IkReal(-1.00000000000000))*(cj15)*(x2079)*(x2083)))+(((IkReal(-1.00000000000000))*(px)))+(((IkReal(-1.00000000000000))*(x2087)*(x2094)))+(((IkReal(-1.00000000000000))*(x2083)*(x2089)))+(((IkReal(0.000500000000000000))*(x2097)))+(((x2088)*(x2100)))+(((IkReal(-1.00000000000000))*(x2084)*(x2092)))+(((x2088)*(x2089)))+(((IkReal(-1.00000000000000))*(cj15)*(x2083)*(x2092)))+(((IkReal(-1.00000000000000))*(x2079)*(x2084)))+(((cj15)*(x2079)*(x2088)))+(((IkReal(0.0300000000000000))*(x2076)))+(((IkReal(-1.00000000000000))*(x2083)*(x2100)))+(((IkReal(-0.354900000000000))*(x2087)))+(((IkReal(-0.354900000000000))*(x2081)))+(((IkReal(0.136600000000000))*(x2103))));
evalcond[7]=((((x2099)*(x2100)))+(((IkReal(-1.00000000000000))*(x2092)*(x2101)))+(((IkReal(0.0104000000000000))*(x2076)))+(((IkReal(-1.00000000000000))*(x2078)*(x2092)))+(((IkReal(-1.00000000000000))*(x2094)*(x2096)))+(((x2092)*(x2102)))+(((IkReal(-1.00000000000000))*(x2089)*(x2098)))+(((IkReal(-1.00000000000000))*(py)))+(((x2089)*(x2099)))+(((IkReal(0.0182200000000000))*(x2099)))+(((IkReal(-0.0136000000000000))*(x2078)))+(((IkReal(0.000500000000000000))*(x2090)))+(((x2082)*(x2086)))+(((IkReal(-1.00000000000000))*(x2079)*(x2101)))+(((IkReal(-1.00000000000000))*(x2098)*(x2100)))+(((IkReal(-0.136600000000000))*(x2104)))+(((IkReal(-0.0300000000000000))*(x2077)))+(((IkReal(-1.00000000000000))*(x2078)*(x2079)))+(((IkReal(-0.354900000000000))*(x2096)))+(((IkReal(-1.00000000000000))*(x2082)*(x2094)))+(((x2079)*(x2102)))+(((IkReal(-0.354900000000000))*(x2082)))+(((x2086)*(x2096)))+(((IkReal(-0.0182200000000000))*(x2098))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  || IKabs(evalcond[6]) > 0.000001  || IKabs(evalcond[7]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j11;
vinfos[0].indices[0] = _ij11[0];
vinfos[0].indices[1] = _ij11[1];
vinfos[0].maxsolutions = _nj11;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j12;
vinfos[1].indices[0] = _ij12[0];
vinfos[1].indices[1] = _ij12[1];
vinfos[1].maxsolutions = _nj12;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j13;
vinfos[2].indices[0] = _ij13[0];
vinfos[2].indices[1] = _ij13[1];
vinfos[2].maxsolutions = _nj13;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j14;
vinfos[3].indices[0] = _ij14[0];
vinfos[3].indices[1] = _ij14[1];
vinfos[3].maxsolutions = _nj14;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j15;
vinfos[4].indices[0] = _ij15[0];
vinfos[4].indices[1] = _ij15[1];
vinfos[4].maxsolutions = _nj15;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j16;
vinfos[5].indices[0] = _ij16[0];
vinfos[5].indices[1] = _ij16[1];
vinfos[5].maxsolutions = _nj16;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j11array[1], cj11array[1], sj11array[1];
bool j11valid[1]={false};
_nj11 = 1;
IkReal x2106=((cj15)*(r02));
IkReal x2107=((cj13)*(sj12));
IkReal x2108=((cj15)*(r12));
IkReal x2109=((IkReal(1.00000000000000))*(sj13));
IkReal x2110=((cj16)*(r00)*(sj15));
IkReal x2111=((r01)*(sj15)*(sj16));
IkReal x2112=((r11)*(sj15)*(sj16));
IkReal x2113=((cj16)*(r10)*(sj15));
if( IKabs(((gconst7)*(((((IkReal(-1.00000000000000))*(x2106)*(x2107)))+(((x2107)*(x2110)))+(((sj13)*(x2108)))+(((IkReal(-1.00000000000000))*(x2109)*(x2113)))+(((sj13)*(x2112)))+(((IkReal(-1.00000000000000))*(x2107)*(x2111))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst7)*(((((x2107)*(x2112)))+(((x2107)*(x2108)))+(((sj13)*(x2106)))+(((IkReal(-1.00000000000000))*(x2109)*(x2110)))+(((sj13)*(x2111)))+(((IkReal(-1.00000000000000))*(x2107)*(x2113))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j11array[0]=IKatan2(((gconst7)*(((((IkReal(-1.00000000000000))*(x2106)*(x2107)))+(((x2107)*(x2110)))+(((sj13)*(x2108)))+(((IkReal(-1.00000000000000))*(x2109)*(x2113)))+(((sj13)*(x2112)))+(((IkReal(-1.00000000000000))*(x2107)*(x2111)))))), ((gconst7)*(((((x2107)*(x2112)))+(((x2107)*(x2108)))+(((sj13)*(x2106)))+(((IkReal(-1.00000000000000))*(x2109)*(x2110)))+(((sj13)*(x2111)))+(((IkReal(-1.00000000000000))*(x2107)*(x2113)))))));
sj11array[0]=IKsin(j11array[0]);
cj11array[0]=IKcos(j11array[0]);
if( j11array[0] > IKPI )
{
    j11array[0]-=IK2PI;
}
else if( j11array[0] < -IKPI )
{    j11array[0]+=IK2PI;
}
j11valid[0] = true;
for(int ij11 = 0; ij11 < 1; ++ij11)
{
if( !j11valid[ij11] )
{
    continue;
}
_ij11[0] = ij11; _ij11[1] = -1;
for(int iij11 = ij11+1; iij11 < 1; ++iij11)
{
if( j11valid[iij11] && IKabs(cj11array[ij11]-cj11array[iij11]) < IKFAST_SOLUTION_THRESH && IKabs(sj11array[ij11]-sj11array[iij11]) < IKFAST_SOLUTION_THRESH )
{
    j11valid[iij11]=false; _ij11[1] = iij11; break; 
}
}
j11 = j11array[ij11]; cj11 = cj11array[ij11]; sj11 = sj11array[ij11];
{
IkReal evalcond[8];
IkReal x2114=IKsin(j11);
IkReal x2115=IKcos(j11);
IkReal x2116=((r12)*(sj15));
IkReal x2117=((IkReal(0.210000000000000))*(sj14));
IkReal x2118=((IkReal(1.00000000000000))*(cj14));
IkReal x2119=((r00)*(sj16));
IkReal x2120=((r10)*(sj16));
IkReal x2121=((cj16)*(r00));
IkReal x2122=((r02)*(sj15));
IkReal x2123=((IkReal(1.00000000000000))*(sj14));
IkReal x2124=((IkReal(0.0159000000000000))*(sj14));
IkReal x2125=((cj16)*(r01));
IkReal x2126=((r01)*(sj16));
IkReal x2127=((IkReal(0.000500000000000000))*(sj15));
IkReal x2128=((cj15)*(r12));
IkReal x2129=((sj12)*(sj13));
IkReal x2130=((IkReal(0.0159000000000000))*(cj14));
IkReal x2131=((IkReal(1.00000000000000))*(sj15));
IkReal x2132=((IkReal(0.210000000000000))*(cj14));
IkReal x2133=((cj13)*(sj12));
IkReal x2134=((cj16)*(r11));
IkReal x2135=((cj15)*(r02));
IkReal x2136=((cj16)*(r10));
IkReal x2137=((r11)*(sj16));
IkReal x2138=((IkReal(0.0136000000000000))*(cj15));
IkReal x2139=((cj15)*(x2136));
IkReal x2140=((cj15)*(x2137));
IkReal x2141=((cj12)*(x2114));
IkReal x2142=((cj12)*(x2115));
IkReal x2143=((IkReal(1.00000000000000))*(x2115));
evalcond[0]=((((IkReal(-1.00000000000000))*(x2121)*(x2131)))+(((sj15)*(x2126)))+(x2135)+(((IkReal(-1.00000000000000))*(sj13)*(x2143)))+(((x2114)*(x2133))));
evalcond[1]=((((sj15)*(x2137)))+(x2128)+(((IkReal(-1.00000000000000))*(x2133)*(x2143)))+(((IkReal(-1.00000000000000))*(sj13)*(x2114)))+(((IkReal(-1.00000000000000))*(x2131)*(x2136))));
evalcond[2]=((((IkReal(-1.00000000000000))*(x2116)*(x2123)))+(((IkReal(-1.00000000000000))*(x2118)*(x2134)))+(((IkReal(-1.00000000000000))*(x2118)*(x2120)))+(x2142)+(((sj14)*(x2140)))+(((IkReal(-1.00000000000000))*(x2123)*(x2139))));
evalcond[3]=((((IkReal(-1.00000000000000))*(x2141)))+(((IkReal(-1.00000000000000))*(x2122)*(x2123)))+(((IkReal(-1.00000000000000))*(x2118)*(x2125)))+(((IkReal(-1.00000000000000))*(x2118)*(x2119)))+(((cj15)*(sj14)*(x2126)))+(((IkReal(-1.00000000000000))*(cj15)*(x2121)*(x2123))));
evalcond[4]=((((cj14)*(cj15)*(x2126)))+(((IkReal(-1.00000000000000))*(x2118)*(x2122)))+(((x2114)*(x2129)))+(((sj14)*(x2119)))+(((IkReal(-1.00000000000000))*(cj15)*(x2118)*(x2121)))+(((sj14)*(x2125)))+(((cj13)*(x2115))));
evalcond[5]=((((IkReal(-1.00000000000000))*(x2129)*(x2143)))+(((IkReal(-1.00000000000000))*(x2118)*(x2139)))+(((IkReal(-1.00000000000000))*(x2116)*(x2118)))+(((cj14)*(x2140)))+(((sj14)*(x2134)))+(((sj14)*(x2120)))+(((cj13)*(x2114))));
evalcond[6]=((((IkReal(-1.00000000000000))*(x2117)*(x2122)))+(((IkReal(-1.00000000000000))*(x2119)*(x2132)))+(((cj15)*(x2126)*(x2130)))+(((IkReal(-1.00000000000000))*(x2125)*(x2132)))+(((IkReal(-1.00000000000000))*(x2121)*(x2138)))+(((IkReal(0.0300000000000000))*(x2114)))+(((IkReal(0.0104000000000000))*(x2115)))+(((IkReal(0.000500000000000000))*(x2135)))+(((IkReal(0.136600000000000))*(x2141)))+(((cj15)*(x2117)*(x2126)))+(((IkReal(-0.0182200000000000))*(x2121)))+(((IkReal(-1.00000000000000))*(x2121)*(x2127)))+(((IkReal(-1.00000000000000))*(px)))+(((IkReal(-1.00000000000000))*(cj15)*(x2121)*(x2130)))+(((x2126)*(x2138)))+(((IkReal(0.0182200000000000))*(x2126)))+(((x2119)*(x2124)))+(((IkReal(-0.354900000000000))*(x2119)))+(((IkReal(-0.0136000000000000))*(x2122)))+(((IkReal(-1.00000000000000))*(cj15)*(x2117)*(x2121)))+(((IkReal(-0.354900000000000))*(x2125)))+(((x2124)*(x2125)))+(((IkReal(-1.00000000000000))*(x2122)*(x2130)))+(((x2126)*(x2127))));
evalcond[7]=((((IkReal(0.0104000000000000))*(x2114)))+(((IkReal(-0.0182200000000000))*(x2136)))+(((IkReal(-1.00000000000000))*(x2116)*(x2117)))+(((x2130)*(x2140)))+(((IkReal(-1.00000000000000))*(x2117)*(x2139)))+(((IkReal(-1.00000000000000))*(x2116)*(x2130)))+(((IkReal(0.000500000000000000))*(x2128)))+(((IkReal(-0.354900000000000))*(x2134)))+(((x2124)*(x2134)))+(((x2120)*(x2124)))+(((IkReal(-1.00000000000000))*(py)))+(((IkReal(-1.00000000000000))*(x2127)*(x2136)))+(((IkReal(-0.0300000000000000))*(x2115)))+(((x2117)*(x2140)))+(((x2127)*(x2137)))+(((IkReal(-1.00000000000000))*(x2132)*(x2134)))+(((IkReal(-0.0136000000000000))*(x2116)))+(((IkReal(-1.00000000000000))*(x2130)*(x2139)))+(((IkReal(-1.00000000000000))*(x2136)*(x2138)))+(((IkReal(-0.354900000000000))*(x2120)))+(((IkReal(0.0182200000000000))*(x2137)))+(((IkReal(-0.136600000000000))*(x2142)))+(((x2137)*(x2138)))+(((IkReal(-1.00000000000000))*(x2120)*(x2132))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  || IKabs(evalcond[6]) > 0.000001  || IKabs(evalcond[7]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j11;
vinfos[0].indices[0] = _ij11[0];
vinfos[0].indices[1] = _ij11[1];
vinfos[0].maxsolutions = _nj11;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j12;
vinfos[1].indices[0] = _ij12[0];
vinfos[1].indices[1] = _ij12[1];
vinfos[1].maxsolutions = _nj12;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j13;
vinfos[2].indices[0] = _ij13[0];
vinfos[2].indices[1] = _ij13[1];
vinfos[2].maxsolutions = _nj13;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j14;
vinfos[3].indices[0] = _ij14[0];
vinfos[3].indices[1] = _ij14[1];
vinfos[3].maxsolutions = _nj14;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j15;
vinfos[4].indices[0] = _ij15[0];
vinfos[4].indices[1] = _ij15[1];
vinfos[4].maxsolutions = _nj15;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j16;
vinfos[5].indices[0] = _ij16[0];
vinfos[5].indices[1] = _ij16[1];
vinfos[5].maxsolutions = _nj16;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
}
}

}

}
}
}
    }
}
return solutions.GetNumSolutions()>0;
}

/// \brief Solve the det Ax^2+Bx+C = 0 problem using the Manocha and Canny method (1994)
///
/// matcoeffs is of length 54*3, for 3 matrices
static inline void solvedialyticpoly12qep(const IkReal* matcoeffs, IkReal* rawroots, int& numroots)
{
    const IkReal tol = 128.0*std::numeric_limits<IkReal>::epsilon();
    IkReal IKFAST_ALIGNED16(M[24*24]) = {0};
    IkReal IKFAST_ALIGNED16(A[12*12]);
    IkReal IKFAST_ALIGNED16(work[24*24*23]);
    int ipiv[12];
    int info, coeffindex;
    const int worksize=24*24*23;
    const int matrixdim = 12;
    const int matrixdim2 = 24;
    numroots = 0;
    // first setup M = [0 I; -C -B] and A
    coeffindex = 0;
    for(int j = 0; j < 6; ++j) {
        for(int k = 0; k < 9; ++k) {
            M[matrixdim+(j+6)+2*matrixdim*k] = M[matrixdim+j+2*matrixdim*(k+3)] = -matcoeffs[coeffindex++];
        }
    }
    for(int j = 0; j < 6; ++j) {
        for(int k = 0; k < 9; ++k) {
            M[matrixdim+(j+6)+2*matrixdim*k+matrixdim*2*matrixdim] = M[matrixdim+j+2*matrixdim*(k+3)+matrixdim*2*matrixdim] = -matcoeffs[coeffindex++];
        }
    }
    for(int j = 0; j < 6; ++j) {
        for(int k = 0; k < 9; ++k) {
            A[(j+6)+matrixdim*k] = A[j+matrixdim*(k+3)] = matcoeffs[coeffindex++];
        }
        for(int k = 0; k < 3; ++k) {
            A[j+matrixdim*k] = A[(j+6)+matrixdim*(k+9)] = 0;
        }
    }
    const IkReal lfpossibilities[4][4] = {{1,-1,1,1},{1,0,-2,1},{1,1,2,0},{1,-1,4,1}};
    int lfindex = -1;
    bool bsingular = true;
    do {
        dgetrf_(&matrixdim,&matrixdim,A,&matrixdim,&ipiv[0],&info);
        if( info == 0 ) {
            bsingular = false;
            for(int j = 0; j < matrixdim; ++j) {
                if( IKabs(A[j*matrixdim+j]) < 100*tol ) {
                    bsingular = true;
                    break;
                }
            }
            if( !bsingular ) {
                break;
            }
        }
        if( lfindex == 3 ) {
            break;
        }
        // transform by the linear functional
        lfindex++;
        const IkReal* lf = lfpossibilities[lfindex];
        // have to reinitialize A
        coeffindex = 0;
        for(int j = 0; j < 6; ++j) {
            for(int k = 0; k < 9; ++k) {
                IkReal a = matcoeffs[coeffindex+108], b = matcoeffs[coeffindex+54], c = matcoeffs[coeffindex];
                A[(j+6)+matrixdim*k] = A[j+matrixdim*(k+3)] = lf[0]*lf[0]*a+lf[0]*lf[2]*b+lf[2]*lf[2]*c;
                M[matrixdim+(j+6)+2*matrixdim*k] = M[matrixdim+j+2*matrixdim*(k+3)] = -(lf[1]*lf[1]*a + lf[1]*lf[3]*b + lf[3]*lf[3]*c);
                M[matrixdim+(j+6)+2*matrixdim*k+matrixdim*2*matrixdim] = M[matrixdim+j+2*matrixdim*(k+3)+matrixdim*2*matrixdim] = -(2*lf[0]*lf[1]*a + (lf[0]*lf[3]+lf[1]*lf[2])*b + 2*lf[2]*lf[3]*c);
                coeffindex++;
            }
            for(int k = 0; k < 3; ++k) {
                A[j+matrixdim*k] = A[(j+6)+matrixdim*(k+9)] = 0;
            }
        }
    } while(lfindex<4);

    if( bsingular ) {
        return;
    }
    dgetrs_("No transpose", &matrixdim, &matrixdim2, A, &matrixdim, &ipiv[0], &M[matrixdim], &matrixdim2, &info);
    if( info != 0 ) {
        return;
    }

    // set identity in upper corner
    for(int j = 0; j < matrixdim; ++j) {
        M[matrixdim*2*matrixdim+j+matrixdim*2*j] = 1;
    }
    IkReal IKFAST_ALIGNED16(wr[24]);
    IkReal IKFAST_ALIGNED16(wi[24]);
    IkReal IKFAST_ALIGNED16(vr[24*24]);
    int one=1;
    dgeev_("N", "V", &matrixdim2, M, &matrixdim2, wr, wi,NULL, &one, vr, &matrixdim2, work, &worksize, &info);
    if( info != 0 ) {
        return;
    }
    IkReal Breal[matrixdim-1];
    for(int i = 0; i < matrixdim2; ++i) {
        if( IKabs(wi[i]) < tol*100 ) {
            IkReal* ev = vr+matrixdim2*i;
            if( IKabs(wr[i]) > 1 ) {
                ev += matrixdim;
            }
            // consistency has to be checked!!
            if( IKabs(ev[0]) < tol ) {
                continue;
            }
            IkReal iconst = 1/ev[0];
            for(int j = 1; j < matrixdim; ++j) {
                Breal[j-1] = ev[j]*iconst;
            }
            if( checkconsistency12(Breal) ) {
                if( lfindex >= 0 ) {
                    const IkReal* lf = lfpossibilities[lfindex];
                    rawroots[numroots++] = (wr[i]*lf[0]+lf[1])/(wr[i]*lf[2]+lf[3]);
                }
                else {
                    rawroots[numroots++] = wr[i];
                }
                bool bsmall0=IKabs(ev[0]) > IKabs(ev[3]);
                bool bsmall1=IKabs(ev[0]) > IKabs(ev[1]);
                if( bsmall0 && bsmall1 ) {
                    rawroots[numroots++] = ev[3]/ev[0];
                    rawroots[numroots++] = ev[1]/ev[0];
                }
                else if( bsmall0 && !bsmall1 ) {
                    rawroots[numroots++] = ev[5]/ev[2];
                    rawroots[numroots++] = ev[2]/ev[1];
                }
                else if( !bsmall0 && bsmall1 ) {
                    rawroots[numroots++] = ev[9]/ev[6];
                    rawroots[numroots++] = ev[10]/ev[9];
                }
                else if( !bsmall0 && !bsmall1 ) {
                    rawroots[numroots++] = ev[11]/ev[8];
                    rawroots[numroots++] = ev[11]/ev[10];
                }
            }
        }
    }
}
static inline bool checkconsistency12(const IkReal* Breal)
{
    IkReal norm = 0.1;
    for(int i = 0; i < 11; ++i) {
        norm += IKabs(Breal[i]);
    }
    IkReal tol = 1e-6*norm; // have to increase the threshold since many computations are involved
    return IKabs(Breal[0]*Breal[0]-Breal[1]) < tol && IKabs(Breal[0]*Breal[2]-Breal[3]) < tol && IKabs(Breal[1]*Breal[2]-Breal[4]) < tol && IKabs(Breal[2]*Breal[2]-Breal[5]) < tol && IKabs(Breal[0]*Breal[5]-Breal[6]) < tol && IKabs(Breal[1]*Breal[5]-Breal[7]) < tol && IKabs(Breal[2]*Breal[5]-Breal[8]) < tol && IKabs(Breal[0]*Breal[8]-Breal[9]) < tol && IKabs(Breal[1]*Breal[8]-Breal[10]) < tol;
}
};


/// solves the inverse kinematics equations.
/// \param pfree is an array specifying the free joints of the chain.
IKFAST_API bool ComputeIk(const IkReal* eetrans, const IkReal* eerot, const IkReal* pfree, IkSolutionListBase<IkReal>& solutions) {
IKSolver solver;
return solver.ComputeIk(eetrans,eerot,pfree,solutions);
}

IKFAST_API const char* GetKinematicsHash() { return "<robot:genericrobot - bender (bcc6e4fb4a3cfaa68adf23d603a34a16)>"; }

IKFAST_API const char* GetIkFastVersion() { return IKFAST_STRINGIZE(IKFAST_VERSION); }

#ifdef IKFAST_NAMESPACE
} // end namespace
#endif

#ifndef IKFAST_NO_MAIN
#include <stdio.h>
#include <stdlib.h>
#ifdef IKFAST_NAMESPACE
using namespace IKFAST_NAMESPACE;
#endif
int main(int argc, char** argv)
{
    if( argc != 12+GetNumFreeParameters()+1 ) {
        printf("\nUsage: ./ik r00 r01 r02 t0 r10 r11 r12 t1 r20 r21 r22 t2 free0 ...\n\n"
               "Returns the ik solutions given the transformation of the end effector specified by\n"
               "a 3x3 rotation R (rXX), and a 3x1 translation (tX).\n"
               "There are %d free parameters that have to be specified.\n\n",GetNumFreeParameters());
        return 1;
    }

    IkSolutionList<IkReal> solutions;
    std::vector<IkReal> vfree(GetNumFreeParameters());
    IkReal eerot[9],eetrans[3];
    eerot[0] = atof(argv[1]); eerot[1] = atof(argv[2]); eerot[2] = atof(argv[3]); eetrans[0] = atof(argv[4]);
    eerot[3] = atof(argv[5]); eerot[4] = atof(argv[6]); eerot[5] = atof(argv[7]); eetrans[1] = atof(argv[8]);
    eerot[6] = atof(argv[9]); eerot[7] = atof(argv[10]); eerot[8] = atof(argv[11]); eetrans[2] = atof(argv[12]);
    for(std::size_t i = 0; i < vfree.size(); ++i)
        vfree[i] = atof(argv[13+i]);
    bool bSuccess = ComputeIk(eetrans, eerot, vfree.size() > 0 ? &vfree[0] : NULL, solutions);

    if( !bSuccess ) {
        fprintf(stderr,"Failed to get ik solution\n");
        return -1;
    }

    printf("Found %d ik solutions:\n", (int)solutions.GetNumSolutions());
    std::vector<IkReal> solvalues(GetNumJoints());
    for(std::size_t i = 0; i < solutions.GetNumSolutions(); ++i) {
        const IkSolutionBase<IkReal>& sol = solutions.GetSolution(i);
        printf("sol%d (free=%d): ", (int)i, (int)sol.GetFree().size());
        std::vector<IkReal> vsolfree(sol.GetFree().size());
        sol.GetSolution(&solvalues[0],vsolfree.size()>0?&vsolfree[0]:NULL);
        for( std::size_t j = 0; j < solvalues.size(); ++j)
            printf("%.15f, ", solvalues[j]);
        printf("\n");
    }
    return 0;
}

#endif
